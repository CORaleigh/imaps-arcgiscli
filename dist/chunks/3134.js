(self.webpackChunkimaps=self.webpackChunkimaps||[]).push([[3134,508],{7855:(e,n,t)=>{"use strict";t.d(n,{A:()=>b,B:()=>D,C:()=>H,D:()=>I,E:()=>C,F:()=>S,G:()=>j,H:()=>k,I:()=>L,J:()=>q,K:()=>B,a:()=>o,b:()=>c,c:()=>a,d:()=>u,e:()=>s,f:()=>f,g:()=>G,h:()=>l,i:()=>h,j:()=>m,k:()=>N,l:()=>y,m:()=>w,n:()=>M,o:()=>g,p:()=>z,q:()=>E,r:()=>x,s:()=>v,t:()=>p,u:()=>Z,v:()=>A,w:()=>d,x:()=>R,y:()=>P,z:()=>V});var i=t(65798),r=t(10165);function s(e){return i.a.extendedSpatialReferenceInfo(e)}function a(e,n,t){return i.a.clip(r.N,e,n,t)}function o(e,n,t){return i.a.cut(r.N,e,n,t)}function c(e,n,t){return i.a.contains(r.N,e,n,t)}function u(e,n,t){return i.a.crosses(r.N,e,n,t)}function f(e,n,t,s){return i.a.distance(r.N,e,n,t,s)}function l(e,n,t){return i.a.equals(r.N,e,n,t)}function h(e,n,t){return i.a.intersects(r.N,e,n,t)}function p(e,n,t){return i.a.touches(r.N,e,n,t)}function d(e,n,t){return i.a.within(r.N,e,n,t)}function m(e,n,t){return i.a.disjoint(r.N,e,n,t)}function g(e,n,t){return i.a.overlaps(r.N,e,n,t)}function x(e,n,t,s){return i.a.relate(r.N,e,n,t,s)}function N(e,n){return i.a.isSimple(r.N,e,n)}function v(e,n){return i.a.simplify(r.N,e,n)}function y(e,n,t=!1){return i.a.convexHull(r.N,e,n,t)}function w(e,n,t){return i.a.difference(r.N,e,n,t)}function M(e,n,t){return i.a.symmetricDifference(r.N,e,n,t)}function z(e,n,t){return i.a.intersect(r.N,e,n,t)}function Z(e,n,t=null){return i.a.union(r.N,e,n,t)}function E(e,n,t,s,a,o,c){return i.a.offset(r.N,e,n,t,s,a,o,c)}function A(e,n,t,s,a=!1){return i.a.buffer(r.N,e,n,t,s,a)}function R(e,n,t,s,a,o,c){return i.a.geodesicBuffer(r.N,e,n,t,s,a,o,c)}function P(e,n,t,s=!0){return i.a.nearestCoordinate(r.N,e,n,t,s)}function V(e,n,t){return i.a.nearestVertex(r.N,e,n,t)}function b(e,n,t,s,a){return i.a.nearestVertices(r.N,e,n,t,s,a)}function D(e,n,t,r){if(null==n||null==r)throw new Error("Illegal Argument Exception");const s=i.a.rotate(n,t,r);return s.spatialReference=e,s}function H(e,n,t){if(null==n||null==t)throw new Error("Illegal Argument Exception");const r=i.a.flipHorizontal(n,t);return r.spatialReference=e,r}function I(e,n,t){if(null==n||null==t)throw new Error("Illegal Argument Exception");const r=i.a.flipVertical(n,t);return r.spatialReference=e,r}function C(e,n,t,s,a){return i.a.generalize(r.N,e,n,t,s,a)}function S(e,n,t,s){return i.a.densify(r.N,e,n,t,s)}function j(e,n,t,s,a=0){return i.a.geodesicDensify(r.N,e,n,t,s,a)}function k(e,n,t){return i.a.planarArea(r.N,e,n,t)}function L(e,n,t){return i.a.planarLength(r.N,e,n,t)}function q(e,n,t,s){return i.a.geodesicArea(r.N,e,n,t,s)}function B(e,n,t,s){return i.a.geodesicLength(r.N,e,n,t,s)}var G=Object.freeze({__proto__:null,extendedSpatialReferenceInfo:s,clip:a,cut:o,contains:c,crosses:u,distance:f,equals:l,intersects:h,touches:p,within:d,disjoint:m,overlaps:g,relate:x,isSimple:N,simplify:v,convexHull:y,difference:w,symmetricDifference:M,intersect:z,union:Z,offset:E,buffer:A,geodesicBuffer:R,nearestCoordinate:P,nearestVertex:V,nearestVertices:b,rotate:D,flipHorizontal:H,flipVertical:I,generalize:C,densify:S,geodesicDensify:j,planarArea:k,planarLength:L,geodesicArea:q,geodesicLength:B})},10165:(e,n,t)=>{"use strict";t.d(n,{N:()=>i});const i={convertToGEGeometry:function(e,n){return null==n?null:e.convertJSONToGeometry(n)},exportPoint:function(e,n,t){const i=new r(e.getPointX(n),e.getPointY(n),t),s=e.hasZ(n),a=e.hasM(n);return s&&(i.z=e.getPointZ(n)),a&&(i.m=e.getPointM(n)),i},exportPolygon:function(e,n,t){return new s(e.exportPaths(n),t,e.hasZ(n),e.hasM(n))},exportPolyline:function(e,n,t){return new a(e.exportPaths(n),t,e.hasZ(n),e.hasM(n))},exportMultipoint:function(e,n,t){return new o(e.exportPoints(n),t,e.hasZ(n),e.hasM(n))},exportExtent:function(e,n,t){const i=e.hasZ(n),r=e.hasM(n),s=new c(e.getXMin(n),e.getYMin(n),e.getXMax(n),e.getYMax(n),t);if(i){const t=e.getZExtent(n);s.zmin=t.vmin,s.zmax=t.vmax}if(r){const t=e.getMExtent(n);s.mmin=t.vmin,s.mmax=t.vmax}return s}};class r{constructor(e,n,t){this.x=e,this.y=n,this.spatialReference=t,this.z=void 0,this.m=void 0}}class s{constructor(e,n,t,i){this.rings=e,this.spatialReference=n,this.hasZ=void 0,this.hasM=void 0,t&&(this.hasZ=t),i&&(this.hasM=i)}}class a{constructor(e,n,t,i){this.paths=e,this.spatialReference=n,this.hasZ=void 0,this.hasM=void 0,t&&(this.hasZ=t),i&&(this.hasM=i)}}class o{constructor(e,n,t,i){this.points=e,this.spatialReference=n,this.hasZ=void 0,this.hasM=void 0,t&&(this.hasZ=t),i&&(this.hasM=i)}}class c{constructor(e,n,t,i,r){this.xmin=e,this.ymin=n,this.xmax=t,this.ymax=i,this.spatialReference=r,this.zmin=void 0,this.zmax=void 0,this.mmin=void 0,this.mmax=void 0}}},93134:(e,n,t)=>{"use strict";t.r(n),t.d(n,{buffer:()=>i.v,clip:()=>i.c,contains:()=>i.b,convexHull:()=>i.l,crosses:()=>i.d,cut:()=>i.a,densify:()=>i.F,difference:()=>i.m,disjoint:()=>i.j,distance:()=>i.f,equals:()=>i.h,extendedSpatialReferenceInfo:()=>i.e,flipHorizontal:()=>i.C,flipVertical:()=>i.D,generalize:()=>i.E,geodesicArea:()=>i.J,geodesicBuffer:()=>i.x,geodesicDensify:()=>i.G,geodesicLength:()=>i.K,intersect:()=>i.p,intersects:()=>i.i,isSimple:()=>i.k,nearestCoordinate:()=>i.y,nearestVertex:()=>i.z,nearestVertices:()=>i.A,offset:()=>i.q,overlaps:()=>i.o,planarArea:()=>i.H,planarLength:()=>i.I,relate:()=>i.r,rotate:()=>i.B,simplify:()=>i.s,symmetricDifference:()=>i.n,touches:()=>i.t,union:()=>i.u,within:()=>i.w});t(65798),t(10165);var i=t(7855)}}]);
//# sourceMappingURL=3134.js.map