(self.webpackChunkimaps=self.webpackChunkimaps||[]).push([[3687],{93687:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>Y});var i=r(56140),s=(r(95830),r(59472)),o=r(36544),a=(r(68055),r(65575)),n=r(79881),l=r(30590),p=r(87566),d=r(32656),y=r(10923),u=(r(57002),r(86035),r(39105)),c=r(4665),h=r(58484),f=r(54721),g=r(56700),b=r(43072),m=r(80621),v=r(18152),I=r(78910),_=(r(71598),r(38474),r(42952),r(43925),r(3642),r(81882),r(4037),r(89772)),w=(r(142),r(61121)),L=r(48899),C=r(33716),F=r(10113),S=r(59386),O=r(26360),j=r(52794),T=r(83236),E=r(68510),P=r(79663),x=r(43551),D=r(31518),A=r(81421),Z=r(54209),U=r(69759),R=r(59930),q=r(58385);let N=class extends q.wq{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};(0,i._)([(0,n.Cb)({type:String,json:{read:!0,write:!0}})],N.prototype,"name",void 0),(0,i._)([(0,n.Cb)({type:String,json:{read:!0,write:!0}})],N.prototype,"field",void 0),(0,i._)([(0,n.Cb)({type:[Number],json:{read:!0,write:!0}})],N.prototype,"currentRangeExtent",void 0),(0,i._)([(0,n.Cb)({type:[Number],json:{read:!0,write:!0}})],N.prototype,"fullRangeExtent",void 0),(0,i._)([(0,n.Cb)({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:!0}})],N.prototype,"type",void 0),N=(0,i._)([(0,p.j)("esri.layers.support.RangeInfo")],N);const k=N,Q=["3DObject","Point"],V=o.Z.getLogger("esri.layers.SceneLayer"),G=(0,T.v)();let W=class extends((0,U.V)((0,L.Y)((0,I.q)((0,C.I)((0,F.M)((0,b.R)(g.Z))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.definitionExpression=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.cachedDrawingInfo={color:!1},this.editingEnabled=!0,this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e){const t=this.getField(e);return t&&t.domain?t.domain:null}get fieldsIndex(){return new w.Z(this.fields)}readNodePages(e,t,r){return"Point"===t.layerType&&(e=t.pointNodePages),null==e||"object"!=typeof e?null:Z.U4.fromJSON(e,r)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get geometryType(){return K[this.profile]||"mesh"}set renderer(e){(0,c.YN)(e,this.fields),this._set("renderer",e)}readCachedDrawingInfo(e){return null!=e&&"object"==typeof e||(e={}),null==e.color&&(e.color=!1),e}get capabilities(){const e=(0,s.pC)(this.associatedLayer)&&this.associatedLayer.capabilities?this.associatedLayer.capabilities:A.C,{query:t,editing:{supportsGlobalId:r,supportsRollbackOnFailure:i,supportsUploadWithItemId:o},data:{supportsZ:a,supportsM:n,isVersioned:l},operations:{supportsEditing:p,supportsUpdate:d}}=e,y=e.operations.supportsChangeTracking;return{query:t,editing:{supportsGlobalId:r,supportsRollbackOnFailure:i,supportsGeometryUpdate:!1,supportsUploadWithItemId:o},data:{supportsZ:a,supportsM:n,isVersioned:l},operations:{supportsEditing:p&&y,supportsAdd:!1,supportsDelete:!1,supportsUpdate:d&&y}}}get defaultPopupTemplate(){return(0,s.pC)(this.associatedLayer)||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return!e&&t.fields&&t.fields.some((t=>("esriFieldTypeOID"===t.type&&(e=t.name),!!e))),e||void 0}readGlobalIdField(e,t){return!e&&t.fields&&t.fields.some((t=>("esriFieldTypeGlobalID"===t.type&&(e=t.name),!!e))),e||void 0}get displayField(){return(0,s.pC)(this.associatedLayer)?this.associatedLayer.displayField:null}readProfile(e,t){const r=t.store.profile;return null!=r&&M[r]?M[r]:(V.error("Unknown or missing profile",{profile:r,layer:this}),"mesh-pyramids")}load(e){const t=(0,s.pC)(e)?e.signal:null,r=this.loadFromPortal({supportedTypes:["Scene Service"]},e).then((()=>this._fetchService(t)),(()=>this._fetchService(t))).then((()=>(0,u.all)([this._verifyRootNodeAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t)]))).then((()=>this._validateElevationInfo())).then((()=>this._applyAssociatedLayerOverrides())).then((()=>this._populateFieldUsageInfo())).then((()=>(0,P.y)(this,{origin:"service"},t))).then((()=>(0,c.YN)(this.renderer,this.fields)));return this.addResolvingPromise(r),(0,u.resolve)(this)}createQuery(){const e=new D.Z;return"mesh"!==this.geometryType&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryExtent(e||this.createQuery(),t)))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryFeatureCount(e||this.createQuery(),t)))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryFeatures(e||this.createQuery(),t))).then((e=>{if(e&&e.features)for(const t of e.features)t.layer=this,t.sourceLayer=this;return e}))}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryObjectIds(e||this.createQuery(),t)))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(V.error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return(0,x.eZ)(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return(0,s.pC)(e)&&e.loaded?(0,u.resolve)(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),(0,s.Wi)(this.associatedLayer))throw new d.Z("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new d.Z("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return null!=this.statisticsInfo&&this.statisticsInfo.some((t=>t.name===e))}async queryCachedStatistics(e,t){if(await this.load(t),!this.statisticsInfo)throw new d.Z("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const r=this.fieldsIndex.get(e);if(!r)throw new d.Z("scenelayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const e of this.statisticsInfo)if(e.name===r.name){const r=(0,y.v_)(this.parsedUrl.path,e.href);return(0,f.default)(r,{query:{f:"json"},responseType:"json",signal:t?t.signal:null}).then((e=>e.data))}throw new d.Z("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,t){return this._debouncedSaveOperations(1,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(0,e)}async applyEdits(e,t){const i=await r.e(791).then(r.bind(r,20791));if(await this.load(),(0,s.Wi)(this.associatedLayer))throw new d.Z(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),i.applyEdits(this,this.associatedLayer.source,e,t)}on(e,t){return super.on(e,t)}validateLayer(e){if(e.layerType&&-1===Q.indexOf(e.layerType))throw new d.Z("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new d.Z("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new d.Z("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});!function(e,t){let r=!1,i=!1;if(null==e)r=!0,i=!0;else{const s=t&&t.isGeographic;switch(e){case"east-north-up":case"earth-centered":r=!0,i=s;break;case"vertex-reference-frame":r=!0,i=!s;break;default:r=!1}}if(!r)throw new d.Z("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!i)throw new d.Z("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if("points"===this.profile)e.push("Point");else{if("mesh-pyramids"!==this.profile)throw new d.Z("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){if(this._fieldUsageInfo={},this.fields)for(const e of this.fields){const t=!(!this.attributeStorageInfo||!this.attributeStorageInfo.some((t=>t.name===e.name))),r=!!((0,s.pC)(this.associatedLayer)&&this.associatedLayer.fields&&this.associatedLayer.fields.some((t=>t&&e.name===t.name))),i={supportsLabelingInfo:t,supportsRenderer:t,supportsPopupTemplate:t||r,supportsLayerQuery:r};this._fieldUsageInfo[e.name]=i}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides()}_applyAssociatedLayerFieldsOverrides(){if((0,s.Wi)(this.associatedLayer)||!this.associatedLayer.fields)return;let e=null;for(const t of this.associatedLayer.fields){const r=this.getField(t.name);r?(!r.domain&&t.domain&&(r.domain=t.domain.clone()),r.editable=t.editable,r.nullable=t.nullable):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPopupOverrides(){if((0,s.Wi)(this.associatedLayer))return;const e=["popupTemplate","popupEnabled"],t=(0,a.vw)(this);for(let r=0;r<e.length;r++){const i=e[r];this._buddyIsMoreImportant(i)&&(t.setDefaultOrigin(this.associatedLayer.originOf(i)),t.set(i,this.associatedLayer[i]),t.setDefaultOrigin("user"))}}async _setAssociatedFeatureLayer(e){if(-1===["mesh-pyramids","points"].indexOf(this.profile))return;const t=new R.W(this.parsedUrl,this.portalItem,e);try{this.associatedLayer=await t.fetch()}catch(e){(0,u.isAbortError)(e)||this._logWarningOnPopupEnabled()}}_logWarningOnPopupEnabled(){(0,m.whenValidOnce)(this,["popupTemplate","popupEnabled"],(()=>this.popupEnabled&&null!=this.popupTemplate)).then((()=>()=>{const e=`this SceneLayer: ${this.title}`;null==this.attributeStorageInfo?V.warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):V.info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`)}))}_buddyIsMoreImportant(e){if((0,s.Wi)(this.associatedLayer))return!1;const t=this.originIdOf(e),r=this.associatedLayer.originIdOf(e);return null!=r&&r<=2?null==t||t<2:null!=r&&r<=3&&(null==t||t<3)}_validateElevationInfo(){const e=this.elevationInfo;e&&("mesh-pyramids"===this.profile&&"absolute-height"!==e.mode&&V.warn(".elevationInfo=","Mesh scene layers only support absolute-height elevation mode"),e.featureExpressionInfo&&"0"!==e.featureExpressionInfo.expression&&V.warn(".elevationInfo=","Scene layers do not support featureExpressionInfo"))}};(0,i._)([(0,n.Cb)({types:{key:"type",base:S.Z,typeMap:{selection:j.Z}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],W.prototype,"featureReduction",void 0),(0,i._)([(0,n.Cb)({type:[k],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],W.prototype,"rangeInfos",void 0),(0,i._)([(0,n.Cb)({json:{read:!1}})],W.prototype,"associatedLayer",void 0),(0,i._)([(0,n.Cb)({type:["show","hide"]})],W.prototype,"listMode",void 0),(0,i._)([(0,n.Cb)({type:["ArcGISSceneServiceLayer"]})],W.prototype,"operationalLayerType",void 0),(0,i._)([(0,n.Cb)({json:{read:!1},readOnly:!0})],W.prototype,"type",void 0),(0,i._)([(0,n.Cb)({...G.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],W.prototype,"fields",void 0),(0,i._)([(0,n.Cb)({readOnly:!0,dependsOn:["fields"]})],W.prototype,"fieldsIndex",null),(0,i._)([(0,n.Cb)(G.outFields)],W.prototype,"outFields",void 0),(0,i._)([(0,n.Cb)({type:Z.U4,readOnly:!0,json:{read:!1}})],W.prototype,"nodePages",void 0),(0,i._)([(0,l.r)("service","nodePages",["nodePages","pointNodePages"])],W.prototype,"readNodePages",null),(0,i._)([(0,n.Cb)({type:[Z.QI],readOnly:!0})],W.prototype,"materialDefinitions",void 0),(0,i._)([(0,n.Cb)({type:[Z.Yh],readOnly:!0})],W.prototype,"textureSetDefinitions",void 0),(0,i._)([(0,n.Cb)({type:[Z.H3],readOnly:!0})],W.prototype,"geometryDefinitions",void 0),(0,i._)([(0,n.Cb)({readOnly:!0})],W.prototype,"serviceUpdateTimeStamp",void 0),(0,i._)([(0,n.Cb)({readOnly:!0})],W.prototype,"attributeStorageInfo",void 0),(0,i._)([(0,n.Cb)({readOnly:!0})],W.prototype,"statisticsInfo",void 0),(0,i._)([(0,n.Cb)({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:!0}})],W.prototype,"definitionExpression",void 0),(0,i._)([(0,n.Cb)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],W.prototype,"path",void 0),(0,i._)([(0,n.Cb)(v.PV)],W.prototype,"elevationInfo",null),(0,i._)([(0,n.Cb)({type:String,dependsOn:["profile"]})],W.prototype,"geometryType",null),(0,i._)([(0,n.Cb)(v.iR)],W.prototype,"labelsVisible",void 0),(0,i._)([(0,n.Cb)({type:[O.Z],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:E.r},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:E.r},write:!0}})],W.prototype,"labelingInfo",void 0),(0,i._)([(0,n.Cb)(v.rn)],W.prototype,"legendEnabled",void 0),(0,i._)([(0,n.Cb)(v.bT)],W.prototype,"opacity",void 0),(0,i._)([(0,n.Cb)({types:_.o,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],W.prototype,"renderer",null),(0,i._)([(0,n.Cb)({json:{read:!1}})],W.prototype,"cachedDrawingInfo",void 0),(0,i._)([(0,l.r)("service","cachedDrawingInfo")],W.prototype,"readCachedDrawingInfo",null),(0,i._)([(0,n.Cb)({readOnly:!0,json:{read:!1},dependsOn:["associatedLayer.capabilities"]})],W.prototype,"capabilities",null),(0,i._)([(0,n.Cb)({type:Boolean,json:{read:!1}})],W.prototype,"editingEnabled",void 0),(0,i._)([(0,n.Cb)(v.C_)],W.prototype,"popupEnabled",void 0),(0,i._)([(0,n.Cb)({type:h.default,json:{name:"popupInfo",write:!0}})],W.prototype,"popupTemplate",void 0),(0,i._)([(0,n.Cb)({readOnly:!0,json:{read:!1},dependsOn:["fields","title","attributeStorageInfo","associatedLayer"]})],W.prototype,"defaultPopupTemplate",null),(0,i._)([(0,n.Cb)({type:String,json:{read:!1}})],W.prototype,"objectIdField",void 0),(0,i._)([(0,l.r)("service","objectIdField",["objectIdField","fields"])],W.prototype,"readObjectIdField",null),(0,i._)([(0,n.Cb)({type:String,json:{read:!1}})],W.prototype,"globalIdField",void 0),(0,i._)([(0,l.r)("service","globalIdField",["globalIdField","fields"])],W.prototype,"readGlobalIdField",null),(0,i._)([(0,n.Cb)({readOnly:!0,type:String,json:{read:!1},dependsOn:["associatedLayer.displayField"]})],W.prototype,"displayField",null),(0,i._)([(0,n.Cb)({type:String,json:{read:!1}})],W.prototype,"profile",void 0),(0,i._)([(0,l.r)("service","profile",["store.profile"])],W.prototype,"readProfile",null),(0,i._)([(0,n.Cb)({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],W.prototype,"normalReferenceFrame",void 0),(0,i._)([(0,n.Cb)(v.YI)],W.prototype,"screenSizePerspectiveEnabled",void 0),W=(0,i._)([(0,p.j)("esri.layers.SceneLayer")],W);const M={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},K={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"};const Y=W}}]);
//# sourceMappingURL=3687.js.map