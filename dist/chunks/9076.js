(self.webpackChunkimaps=self.webpackChunkimaps||[]).push([[9076],{87864:(e,t,r)=>{"use strict";r.d(t,{Z:()=>f});var i,n=r(56140),s=(r(95830),r(36544),r(68055),r(79881)),a=r(30590),o=r(87566),l=r(60538),u=(r(10923),r(57002),r(86035),r(58385)),c=r(98034);let h=i=class extends u.wq{constructor(e){super(e),this.end=null,this.start=null}static get allTime(){return d}static get empty(){return p}readEnd(e,t){return null!=t.end?new Date(t.end):null}writeEnd(e,t){t.end=e?e.getTime():null}get isAllTime(){return this.equals(i.allTime)}get isEmpty(){return this.equals(i.empty)}readStart(e,t){return null!=t.start?new Date(t.start):null}writeStart(e,t){t.start=e?e.getTime():null}clone(){return new i({end:this.end,start:this.start})}expandTo(e){if(this.isEmpty||this.isAllTime)return this.clone();const t=this.start?(0,c.JE)(this.start,e):null,r=this.end?(0,c.Nm)((0,c.JE)(this.end,e),1,e):null;return new i({start:t,end:r})}intersection(e){var t,r,n,s,a,o,l,u;if(!e)return this.clone();if(this.isEmpty||e.isEmpty)return i.empty;if(this.isAllTime)return e.clone();if(e.isAllTime)return this.clone();const c=null!=(t=null==(r=this.start)?void 0:r.getTime())?t:-1/0,h=null!=(n=null==(s=this.end)?void 0:s.getTime())?n:1/0,d=null!=(a=null==(o=e.start)?void 0:o.getTime())?a:-1/0,p=null!=(l=null==(u=e.end)?void 0:u.getTime())?l:1/0;let f,m;if(d>=c&&d<=h?f=d:c>=d&&c<=p&&(f=c),h>=d&&h<=p?m=h:p>=c&&p<=h&&(m=p),!isNaN(f)&&!isNaN(m)){const e=new i;return e.start=f===-1/0?null:new Date(f),e.end=m===1/0?null:new Date(m),e}return i.empty}offset(e,t){if(this.isEmpty||this.isAllTime)return this.clone();const r=new i,{start:n,end:s}=this;return n&&(r.start=(0,c.Nm)(n,e,t)),s&&(r.end=(0,c.Nm)(s,e,t)),r}equals(e){if(!e)return!1;const t=this.start?this.start.getTime():this.start,r=this.end?this.end.getTime():this.end,i=e.start?e.start.getTime():e.start,n=e.end?e.end.getTime():e.end;return t===i&&r===n}union(e){if(!e||e.isEmpty)return this.clone();if(this.isEmpty)return e.clone();if(this.isAllTime||e.isAllTime)return d.clone();const t=this.start&&e.start?new Date(Math.min(this.start.getTime(),e.start.getTime())):null,r=this.end&&e.end?new Date(Math.max(this.end.getTime(),e.end.getTime())):null;return new i({start:t,end:r})}};(0,n._)([(0,s.Cb)({type:Date,json:{write:{allowNull:!0}}})],h.prototype,"end",void 0),(0,n._)([(0,a.r)("end")],h.prototype,"readEnd",null),(0,n._)([(0,l.c)("end")],h.prototype,"writeEnd",null),(0,n._)([(0,s.Cb)({dependsOn:["start","end"],readOnly:!0,json:{read:!1}})],h.prototype,"isAllTime",null),(0,n._)([(0,s.Cb)({dependsOn:["start","end"],readOnly:!0,json:{read:!1}})],h.prototype,"isEmpty",null),(0,n._)([(0,s.Cb)({type:Date,json:{write:{allowNull:!0}}})],h.prototype,"start",void 0),(0,n._)([(0,a.r)("start")],h.prototype,"readStart",null),(0,n._)([(0,l.c)("start")],h.prototype,"writeStart",null),h=i=(0,n._)([(0,o.j)("esri.TimeExtent")],h);const d=new h,p=new h({start:void 0,end:void 0});const f=h},59691:(e,t,r)=>{"use strict";r.d(t,{Z:()=>c});var i=r(56140),n=r(59472),s=r(79881),a=r(87566),o=r(82677),l=r(83477);let u=class extends o.default{constructor(e){super(e),this._groups=new Map}destroy(){this.removeAll()}get size(){let e=0;return this._groups.forEach((t=>{e+=t.length})),e}add(e,t){if(!this._isHandle(e)&&!Array.isArray(e)&&!l.Z.isCollection(e))return this;const r=this._getOrCreateGroup(t);return Array.isArray(e)||l.Z.isCollection(e)?e.forEach((e=>this._isHandle(e)&&r.push(e))):r.push(e),this.notifyChange("size"),this}forEach(e,t){if("function"==typeof e)this._groups.forEach((t=>t.forEach(e)));else{const r=this._getGroup(e);r&&t&&r.forEach(t)}}has(e){return this._groups.has(this._ensureGroupKey(e))}remove(e){if(Array.isArray(e)||l.Z.isCollection(e))return e.forEach(this.remove,this),this;if(!this.has(e))return this;const t=this._getGroup(e);for(let e=0;e<t.length;e++)t[e].remove();return this._deleteGroup(e),this.notifyChange("size"),this}removeAll(){return this._groups.forEach((e=>{for(let t=0;t<e.length;t++)e[t].remove()})),this._groups.clear(),this.notifyChange("size"),this}_isHandle(e){return e&&!!e.remove}_getOrCreateGroup(e){if(this.has(e))return this._getGroup(e);const t=[];return this._groups.set(this._ensureGroupKey(e),t),t}_getGroup(e){return(0,n.j0)(this._groups.get(this._ensureGroupKey(e)))}_deleteGroup(e){return this._groups.delete(this._ensureGroupKey(e))}_ensureGroupKey(e){return e||"_default_"}};(0,i._)([(0,s.Cb)({readOnly:!0})],u.prototype,"size",null),u=(0,i._)([(0,a.j)("esri.core.Handles")],u);const c=u},40365:(e,t,r)=>{"use strict";r.d(t,{Z:()=>n});var i=r(92823);const n=class{constructor(e,t){this._storage=new i.WJ,this._storage.maxSize=e,t&&this._storage.registerRemoveFunc("",t)}put(e,t,r){this._storage.put(e,t,r,1)}pop(e){return this._storage.pop(e)}get(e){return this._storage.get(e)}clear(){this._storage.clearAll()}destroy(){this._storage.clearAll()}get maxSize(){return this._storage.maxSize}set maxSize(e){this._storage.maxSize=e}}},69866:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>je});var i=r(56140),n=(r(95830),r(59472)),s=r(36544),a=r(68055),o=r(79881),l=r(56274),u=r(9870),c=r(30590),h=r(87566),d=r(32656),p=r(10923),f=(r(57002),r(86035),r(39105)),m=r(58484),y=r(56700),g=r(43072),x=r(18152),w=r(78910),b=r(99657),v=r(70834),I=r(57407),_=r(33716),C=r(2194),S=r(10113),T=r(43551),M=r(51894),R=r(27780),k=r(73032),D=r(52937),L=(r(36348),r(54721)),F=r(97849),O=r(40920),E=r(50557),B=r(68509),A=r(92663),P=r(9628);const N=s.Z.getLogger("esri.layers.mixins.ImageryTileMixin"),z=e=>{let t=class extends e{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation="nearest",this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set multidimensionalDefinition(e){this.raster&&(this._sliceId=this.raster.getSliceIndex(e)),this._set("multidimensionalDefinition",e)}set url(e){this._set("url",(0,F.Nm)(e,N))}set renderer(e){this._set("renderer",e),this.updateRenderer()}async updateRenderer(){if(!this.loaded)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const e=this._rasterJobHandler.instance;e&&(this.symbolizer.rendererJSON=this.renderer.toJSON(),this.symbolizer.bind(),await e.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(e,t){const r=e&&e.pixelBlock;if(!(r&&r.pixels&&r.pixels.length>0))return null;let i;this.updateRenderer();const n=this._rasterJobHandler.instance,{bandIds:s}=this;return i=n?await n.symbolize({...e,simpleStretchParams:t,bandIds:s}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:s}),i}getTileUrl(e,t,r){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${r}`:""}getCompatibleTileInfo(e,t){if(!this.loaded)return null;const r=(0,R.C5)(e);return O.Z.create({size:256,spatialReference:e,origin:r?{x:r.origin[0],y:r.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,r,i={}){if(i.requestAsImageElement){const n=this.getTileUrl(e,t,r);return(0,L.default)(n,{responseType:"image",query:{sliceId:this._sliceId,_ts:i.timestamp},signal:i.signal}).then((e=>e.data))}if(await this._initJobHandler(),this.multidimensionalDefinition){const e=this._sliceId;i={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e,...i}}return"raster-shaded-relief"===this.renderer.type&&(i={buffer:{cols:1,rows:1},...i}),this.raster.fetchTile(e,t,r,i)}async fetchPixels(e,t,r,i){if(await this._initJobHandler(),this.multidimensionalDefinition){const e=this._sliceId;i={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e,...i}}return this.raster.fetchPixels(e,t,r,i)}identify(e,t={}){return this.multidimensionalDefinition&&!t.multidimensionalDefinition&&(t={...t,multidimensionalDefinition:this.multidimensionalDefinition}),this.raster.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}_configDefaultSettings(){this._configDefaultInterpolation(),this._configDefaultSlice(),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new B.Z;return this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer()})).catch((()=>null)),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null}_configDefaultInterpolation(){if(null==this.interpolation){var e;const t=(0,A.In)(this.rasterInfo,this.raster.tileType,null==(e=this.sourceJSON)?void 0:e.defaultResamplingMethod);this._set("interpolation",t)}}_configDefaultSlice(){const{multidimensionalInfo:e}=this.raster.rasterInfo;if((0,n.pC)(e)){if(!this.multidimensionalDefinition){const t=e.variables[0],r=[];t.dimensions.forEach((e=>{r.push(new E.Z({variableName:t.name,dimensionName:e.name,values:e.hasRegularIntervals?e.extent[0]:e.values[0],isSlice:!0}))})),this.multidimensionalDefinition=r}this._sliceId=this.raster.getSliceIndex(this.multidimensionalDefinition)}}_configDefaultRenderer(){const e=this.raster.rasterInfo;var t;this.bandIds||(this.bandIds=(0,A.YD)(e)),this.renderer||(this.renderer=(0,A.Ob)(e,{bandIds:this.bandIds,variableName:null==(t=this.multidimensionalDefinition)?void 0:t[0].variableName})),this.symbolizer?(this.symbolizer.rendererJSON=this.renderer.toJSON(),this.symbolizer.rasterInfo=e):this.symbolizer=new P.Z({rendererJSON:this.renderer.toJSON(),rasterInfo:e}),this.symbolizer.bind()||N.warn("imagery-tile-mixin","The given renderer is not supported by the layer.")}};return(0,i._)([(0,o.Cb)()],t.prototype,"_cachedRendererJson",void 0),(0,i._)([(0,o.Cb)()],t.prototype,"_sliceId",void 0),(0,i._)([(0,o.Cb)()],t.prototype,"_compatibleFullExtent",void 0),(0,i._)([(0,o.Cb)()],t.prototype,"_rasterJobHandler",void 0),(0,i._)([(0,o.Cb)()],t.prototype,"bandIds",void 0),(0,i._)([(0,o.Cb)()],t.prototype,"copyright",void 0),(0,i._)([(0,o.Cb)({type:D.Z}),(0,M.B)("rasterInfo.extent")],t.prototype,"fullExtent",void 0),(0,i._)([(0,o.Cb)()],t.prototype,"interpolation",void 0),(0,i._)([(0,o.Cb)({type:[E.Z]})],t.prototype,"multidimensionalDefinition",null),(0,i._)([(0,o.Cb)()],t.prototype,"raster",void 0),(0,i._)([(0,o.Cb)({readOnly:!0}),(0,M.B)("raster.rasterInfo")],t.prototype,"rasterInfo",void 0),(0,i._)([(0,o.Cb)()],t.prototype,"sourceJSON",void 0),(0,i._)([(0,o.Cb)({type:k.Z}),(0,M.B)("rasterInfo.spatialReference")],t.prototype,"spatialReference",void 0),(0,i._)([(0,o.Cb)({type:O.Z,dependsOn:["rasterInfo"]}),(0,M.B)("rasterInfo.storageInfo.tileInfo")],t.prototype,"tileInfo",void 0),(0,i._)([(0,o.Cb)(x.HQ)],t.prototype,"url",null),(0,i._)([(0,o.Cb)({types:b.dr})],t.prototype,"renderer",null),(0,i._)([(0,o.Cb)()],t.prototype,"symbolizer",void 0),t=(0,i._)([(0,h.j)("esri.layers.ImageryTileMixin")],t),t};var j=r(61106),Z=r(76194),H=r(37172),G=r(58385);let J=class extends G.wq{constructor(){super(...arguments),this.blockWidth=void 0,this.blockHeight=void 0,this.compression=null,this.origin=null,this.firstPyramidLevel=null,this.maximumPyramidLevel=null,this.pyramidScalingFactor=2,this.pyramidBlockWidth=null,this.pyramidBlockHeight=null,this.isVirtualTileInfo=!1,this.tileInfo=null,this.blockBoundary=null}};(0,i._)([(0,o.Cb)({type:Number,json:{write:!0}})],J.prototype,"blockWidth",void 0),(0,i._)([(0,o.Cb)({type:Number,json:{write:!0}})],J.prototype,"blockHeight",void 0),(0,i._)([(0,o.Cb)({type:String,json:{write:!0}})],J.prototype,"compression",void 0),(0,i._)([(0,o.Cb)({type:j.Z,json:{write:!0}})],J.prototype,"origin",void 0),(0,i._)([(0,o.Cb)({type:Number,json:{write:!0}})],J.prototype,"firstPyramidLevel",void 0),(0,i._)([(0,o.Cb)({type:Number,json:{write:!0}})],J.prototype,"maximumPyramidLevel",void 0),(0,i._)([(0,o.Cb)()],J.prototype,"pyramidScalingFactor",void 0),(0,i._)([(0,o.Cb)({type:Number,json:{write:!0}})],J.prototype,"pyramidBlockWidth",void 0),(0,i._)([(0,o.Cb)({type:Number,json:{write:!0}})],J.prototype,"pyramidBlockHeight",void 0),(0,i._)([(0,o.Cb)({type:Boolean,json:{write:!0}})],J.prototype,"isVirtualTileInfo",void 0),(0,i._)([(0,o.Cb)({json:{write:!0}})],J.prototype,"tileInfo",void 0),(0,i._)([(0,o.Cb)()],J.prototype,"blockBoundary",void 0),J=(0,i._)([(0,h.j)("esri.layers.support.RasterStorageInfo")],J);const q=J;var U=r(75044),W=r(8985),V=r(44464),$=r(52606),Y=r(53585);let X=class extends((0,U.v)(G.wq)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const e=(0,$.zD)();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:O.Z.create(),...e.ioConfig}}),e}set url(e){this._set("url",(0,F.Nm)(e,s.Z.getLogger(this.declaredClass)))}async open(e){throw new d.Z("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,t,r,i={}){var s;const{tileInfo:a}=i,o=a.lodAt(e),l=new j.Z({x:o.resolution,y:o.resolution,spatialReference:a.spatialReference}),u=this.getTileExtent(l,t,r,a);return null!=(s=i.multidimensionalDefinition)&&s.length&&(0,n.pC)(this.rasterInfo.multidimensionalInfo)&&null==i.sliceId&&(i={...i,sliceId:this.getSliceIndex(i.multidimensionalDefinition)||0}),this.fetchPixels(u,a.size[0],a.size[1],i)}async identify(e,t={}){const{spatialReference:r,extent:i}=this.rasterInfo,{datumTransformation:s}=t,a=(0,$.nF)(e,r,s);if(!i.intersects(a))return{location:a,value:null};let o=0;if(t.srcResolution)o=(0,$.kr)(t.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(o=await this.computeBestPyramidLevelForLocation(e,t),null==o)return{location:a,value:null};const l=this.identifyPixelLocation(a,o,null);if(null===l)return{location:a,value:null};const{row:u,col:c,rowOffset:h,colOffset:d}=l,p=(0,Y.Rq)(this.url,t.sliceId),f=`${o}/${u}/${c}`;let m=(0,Y.Qg)(p,null,f);(0,n.pC)(m)||(m=this.fetchRawTile(o,u,c,t),(0,Y.gX)(p,null,f,m));const y=await m;if(!(y&&y.pixels&&y.pixels.length>0))return{location:a,value:null};const g=h*this.rasterInfo.storageInfo.blockHeight+d;return{location:a,value:!y.mask||y.mask[g]?y.pixels.map((e=>e[g])):null,pyramidLevel:o}}async fetchPixels(e,t,r,i={}){const s=e.clone().normalize();e=s[0];const a=this.rasterInfo.spatialReference,o=!e.spatialReference.equals(a),{datumTransformation:l}=i,u=new j.Z({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/r,spatialReference:e.spatialReference}),c=i.srcResolution||(o?(0,$.VO)(u,a,e,l):u);if(!c)return null;const{pyramidLevel:h,pyramidResolution:d,excessiveReading:p}=(0,$.kr)(c,this.rasterInfo,this.ioConfig.sampling);if(p)return null;const f=this.rasterInfo.storageInfo;let m=o?(0,$.tB)(e,a,l):e;const y=(0,n.Wg)(this.rasterInfo.transform);if(y&&(m=y.inverseTransform(m)),null==m)return null;const g={x:Math.floor((m.xmin-f.origin.x)/d.x+.1),y:Math.floor((f.origin.y-m.ymax)/d.y+.1)},x=Math.ceil((m.xmax-m.xmin)/d.x-.1),w=Math.ceil((m.ymax-m.ymin)/d.y-.1);if(x/t>8||w/r>8)return null;const b=await this.fetchRawPixels(h,g,{width:x,height:w},i);if(!b)return null;const v=h>0?f.pyramidBlockWidth:f.blockWidth,I=h>0?f.pyramidBlockHeight:f.blockHeight;if(!o&&1===b.pixelBlocks.length&&v===t&&I===r&&c.x===u.x&&c.y===u.y)return{extent:e,srcExtent:m,pixelBlock:b.pixelBlocks[0],transformGrid:null};const _=(0,$.Qp)(e,b.extent,u,l,y);let C;const S=!i.requestRawData,T={rows:_.spacing[0],cols:_.spacing[1]},{pixelBlocks:M,mosaicSize:R,isPartiallyFilled:k}=b;if(this.rasterJobHandler)C=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:M,srcMosaicSize:R,destDimension:S?{width:t,height:r}:null,coefs:S?_.coefficients:null,sampleSpacing:S?T:null,interpolation:i.interpolation},i);else{const e=(0,V.us)(M,R);C=S?(0,V.Uk)(e,{width:t,height:r},_.coefficients,T,i.interpolation):e}return{srcExtent:m,pixelBlock:C,transformGrid:_,extent:e,isPartiallyFilled:k}}async fetchRawPixels(e,t,r,i){const{origin:n,blockBoundary:s}=this.rasterInfo.storageInfo,a=e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,o=e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight;let{x:l,y:u}=t,{width:c,height:h}=r;i.buffer&&(l-=i.buffer.cols,u-=i.buffer.rows,c+=2*i.buffer.cols,h+=2*i.buffer.rows);const d=Math.floor(l/a),p=Math.floor(u/o),m=Math.floor((l+c-1)/a),y=Math.floor((u+h-1)/o),g=s[e];if(!g)return null;const{minRow:x,minCol:w,maxCol:b,maxRow:v}=g;if(y<x||m<w||p>v||d>b)return null;const I=[];let _,C=!1;for(let t=p;t<=y;t++)for(let r=d;r<=m;r++)t>=x&&r>=w&&v>=t&&b>=r?(_=this._fetchRawTile(e,t,r,i),this.ioConfig.allowPartialFill&&(_=(0,f.create)((e=>{_.then((t=>e(t))).catch((()=>{C=!0,e(null)}))}))),I.push(_)):I.push(null);if(0===I.length)return null;const S=await(0,f.all)(I),T={height:(y-p+1)*a,width:(m-d+1)*o},{nativePixelSize:M,spatialReference:R}=this.rasterInfo,k=M.x*Math.pow(2,e),L=M.y*Math.pow(2,e);return{extent:new D.Z({xmin:n.x+d*a*k,xmax:n.x+(m+1)*a*k,ymin:n.y-(y+1)*o*L,ymax:n.y-p*o*L,spatialReference:R}),pixelBlocks:S,mosaicSize:T,isPartiallyFilled:C}}async fetchRawTile(e,t,r,i){throw new d.Z("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return(0,$.tB)(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?(0,W.J)(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t,r){var i,n;const{customFetchParameters:s}=this.ioConfig,{range:a,query:o,headers:l}=t;r=null!=(i=null!=(n=r)?n:t.retryCount)?i:this.ioConfig.retryCount;const u=a?{Range:`bytes=${a.from}-${a.to}`}:null;try{return await(0,L.default)(e,{...t,query:{...o,...s},headers:{...l,...u}})}catch(i){if(r>0)return r--,this.request(e,t,r);throw i}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;if(!(0,n.pC)(t)||null==e||!e.length)return null;let r=0;const i=e[0].variableName;for(let n=0;n<t.variables.length;n++){const s=t.variables[n],a=s.dimensions;if(s.name!==i){r+=a.map((e=>this._getDimensionValuesCount(e))).reduce(((e,t)=>e+t));break}const o=a.map((e=>this._getDimensionValuesCount(e))),l=a.length;for(let t=0;t<l;t++){const i=e.filter((e=>e.dimensionName===a[t].name))[0];if(null==i)return null;const n=Array.isArray(i.values[0])?i.values[0][0]:i.values[0],s=this._getIndexFromDimensions(n,a[t]);if(-1===s)return null;o.shift(),r+=t===l-1?s:s*o.reduce(((e,t)=>e+t))}}return r}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:r,pixelSize:i}=this.rasterInfo;if(!e.tileInfo){const n=[],s=e.maximumPyramidLevel||0;let a=Math.max(i.x,i.y),o=1/.0254*96*a;for(let e=0;e<=s;e++)n.push({level:s-e,resolution:a,scale:o}),a*=2,o*=2;const l=new j.Z({x:r.xmin,y:r.ymax,spatialReference:t});e.tileInfo=new O.Z({origin:l,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:n}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,r=512,i){const{width:n,height:s,nativeExtent:a,pixelSize:o,spatialReference:l}=e,u=new j.Z({x:a.xmin,y:a.ymax,spatialReference:l});null==i&&(i=Math.max(0,Math.round(Math.log(Math.max(n,s))/Math.LN2-8)));const c=this._computeBlockBoundary(a,o,i,512,512);e.storageInfo=new q({blockWidth:t,blockHeight:r,pyramidBlockWidth:t,pyramidBlockHeight:r,origin:u,firstPyramidLevel:1,maximumPyramidLevel:i,blockBoundary:c})}async computeBestPyramidLevelForLocation(e,t={}){return 0}identifyPixelLocation(e,t,r){const{spatialReference:i,pixelSize:n,extent:s}=this.rasterInfo,{blockWidth:a,blockHeight:o,maximumPyramidLevel:l,pyramidScalingFactor:u,origin:c}=this.rasterInfo.storageInfo,h=(0,$.nF)(e,i,r);if(!s.intersects(h))return null;if(t<0||t>l)return null;const d=Math.pow(u,t),p=d*n.x,f=d*n.y,m=(c.y-h.y)/f/o,y=(h.x-c.x)/p/a,g=Math.min(o-1,Math.floor((m-Math.floor(m))*o)),x=Math.min(a-1,Math.floor((y-Math.floor(y))*a));return{pyramidLevel:t,row:Math.floor(m),col:Math.floor(y),rowOffset:g,colOffset:x,srcLocation:h}}getTileExtent(e,t,r,i){const{origin:n,spatialReference:s}=i,a=i.size[0],o=i.size[1],l=n.x+r*a*e.x,u=l+a*e.x,c=n.y-t*o*e.y,h=c-o*e.y;return new D.Z({xmin:l,xmax:u,ymin:h,ymax:c,spatialReference:s})}_computeBlockBoundary(e,t,r,i,n){let{x:s,y:a}=t;const o=e.xmin,l=e.ymax,u=[{minCol:Math.floor((e.xmin-o+.1*s)/i/s),maxCol:Math.floor((e.xmax-o-.1*s)/i/s),minRow:Math.floor((l-e.ymax+.1*a)/n/a),maxRow:Math.floor((l-e.ymin-.1*a)/n/a)}];if(r>0)for(let t=0;t<r;t++)s*=2,a*=2,u.push({minCol:Math.floor((e.xmin-o+.1*s)/i/s),maxCol:Math.floor((e.xmax-o-.1*s)/i/s),minRow:Math.floor((l-e.ymax+.1*a)/n/s),maxRow:Math.floor((l-e.ymin-.1*a)/n/s)});return u}_fetchRawTile(e,t,r,i){const s=this.rasterInfo.storageInfo.blockBoundary[e];if(!s)return(0,f.resolve)(null);const{minRow:a,minCol:o,maxCol:l,maxRow:u}=s;if(t<a||r<o||t>u||r>l)return(0,f.resolve)(null);const c=(0,Y.Rq)(this.url,i.sliceId),h=`${e}/${t}/${r}`;let d=(0,Y.Qg)(c,i.registryId,h);if(!(0,n.pC)(d)){const n=(0,f.createAbortController)();d=this.fetchRawTile(e,t,r,{...i,signal:n.signal}),(0,Y.gX)(c,i.registryId,h,d,n),d.catch((()=>{(0,Y.Gc)(c,i.registryId,h)}))}return i.signal&&(0,f.onAbort)(i,(()=>{(0,Y.OE)(c,i.registryId,h)})),d}_getIndexFromDimensions(e,t){const{extent:r,interval:i,unit:n,values:s}=t;if(null!=s&&s.length)return Array.isArray(s[0])?s.findIndex((t=>t[0]<=e&&t[1]>=e)):s.indexOf(e);if(e>r[1])return-1;const a=r[0];let o=-1;if("ISO8601"===n){var l;switch((null==(l=t.intervalUnit)?void 0:l.toLowerCase())||"seconds"){case"seconds":o=Math.round((e-a)/1e3/i);break;case"minutes":o=Math.round((e-a)/6e4/i);break;case"hours":o=Math.round((e-a)/36e5/i);break;case"days":o=Math.round((e-a)/864e5/i);break;case"years":o=Math.round((new Date(e).getUTCFullYear()-new Date(a).getUTCFullYear())/i);break;case"decades":o=Math.round((new Date(e).getUTCFullYear()-new Date(a).getUTCFullYear())/10/i)}return o}return Math.round((e-a)/i)}_getDimensionValuesCount(e){const{extent:t,interval:r,unit:i,values:n}=e;let s=(null==n?void 0:n.length)||0;if(s)return s;const a=t[0];if(0===s&&"ISO8601"===i){var o;switch((null==(o=e.intervalUnit)?void 0:o.toLowerCase())||"seconds"){case"seconds":s=Math.round((t[1]-t[0])/1e3/r);break;case"minutes":s=Math.round((t[1]-t[0])/6e4/r);break;case"hours":s=Math.round((t[1]-t[0])/36e5/r);break;case"days":s=Math.round((t[1]-t[0])/864e5/r);break;case"years":s=Math.round((new Date(t[1]).getUTCFullYear()-new Date(a).getUTCFullYear())/r);break;case"decades":s=Math.round((new Date(t[1]).getUTCFullYear()-new Date(a).getUTCFullYear())/10/r)}return s}return Math.round((t[1]-t[0])/r)}};(0,i._)([(0,o.Cb)(x.HQ)],X.prototype,"url",null),(0,i._)([(0,o.Cb)({type:String,json:{write:!0}})],X.prototype,"datasetName",void 0),(0,i._)([(0,o.Cb)({type:String,json:{write:!0}})],X.prototype,"datasetFormat",void 0),(0,i._)([(0,o.Cb)()],X.prototype,"rasterInfo",void 0),(0,i._)([(0,o.Cb)()],X.prototype,"ioConfig",void 0),(0,i._)([(0,o.Cb)()],X.prototype,"sourceJSON",void 0),X=(0,i._)([(0,h.j)("esri.layers.support.rasterDatasets.BaseRaster")],X);const K=X;var Q=r(25843);const ee=new Map;ee.set("int16","esriFieldTypeSmallInteger"),ee.set("int32","esriFieldTypeInteger"),ee.set("int64","esriFieldTypeInteger"),ee.set("float32","esriFieldTypeSingle"),ee.set("float64","esriFieldTypeDouble"),ee.set("text","esriFieldTypeString");let te=class extends K{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:null==e?void 0:e.signal});if(!this._validateHeader(t))throw new d.Z("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:r,rasterInfo:i}=this._parseHeader(t);if("thematic"===i.dataType){const e=await this._fetchAuxiliaryInformation();i.attributeTable=e}this._set("storageInfo",r),this._set("rasterInfo",i),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,r,i={}){const n=this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(n<0)return null;const s=this._buildCacheFilePath(n,t,r,i.multidimensionalDefinition),a=this._getIndexRecordFromBundle(t,r),o=await this.request(s,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:i.signal});if(!o)return null;const l=new Uint8Array(o.data),u=this._getTileEndAndContentType(l,a);if(0===u.recordSize)return null;const c=await this.request(s,{range:{from:u.position,to:u.position+u.recordSize},responseType:"array-buffer",signal:i.signal});return c?this.decodePixelBlock(c.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null}_validateHeader(e){return e&&"RasterInfo"===e.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some((t=>!e[t]))}_parseHeader(e){var t;const r=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:i,histograms:n,colormap:s,blockWidth:a,blockHeight:o,firstPyramidLevel:l,maximumPyramidLevel:u}=e,c=e.statistics&&e.statistics.map((e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode}))),h=new k.Z(e.extent.spatialReference||e.geodataXform.spatialReference),d=new D.Z({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:h}),p=new j.Z({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:h}),f=null!=(t=e.properties)?t:{},m=e.format.toLowerCase().replace("cache/",""),y=new j.Z(e.origin.x,e.origin.y,h);let g,x,w,b;if(s&&s.colors)for(g=[],x=0;x<s.colors.length;x++)w=s.colors[x],b=s.values?s.values[x]:x,g.push([b,255&w,w<<16>>>24,w<<8>>>24,w>>>24]);const v=e.LODInfos,I=[];for(x=0;x<v.levels.length;x++)I.push({level:v.levels[x],resolution:v.resolutions[x],scale:96/.0254*v.resolutions[x]});const _=new O.Z({dpi:96,lods:I,format:m,origin:y,size:[a,o],spatialReference:h}),C={recordSize:8,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*8+64},S=Math.round((d.xmax-d.xmin)/p.x),T=Math.round((d.ymax-d.ymin)/p.y),M=[{maxCol:Math.ceil(S/a)-1,maxRow:Math.ceil(T/o)-1,minCol:0,minRow:0}];let R=2;if(u>0)for(x=0;x<u;x++)M.push({maxCol:Math.ceil(S/R/a)-1,maxRow:Math.ceil(T/R/o)-1,minCol:0,minRow:0}),R*=2;const L=e.mdInfo;return{storageInfo:C,rasterInfo:new H.Z({width:S,height:T,pixelType:r,bandCount:i,extent:d,spatialReference:h,pixelSize:p,keyProperties:f,statistics:c,histograms:n,multidimensionalInfo:L,colormap:g,storageInfo:new q({blockWidth:a,blockHeight:o,pyramidBlockWidth:a,pyramidBlockHeight:o,origin:y,tileInfo:_,firstPyramidLevel:l,maximumPyramidLevel:u,blockBoundary:M})})}}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then((e=>e.data)).catch((()=>null)),r=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then((e=>e.data)).catch((()=>null)),i=await(0,f.all)([t,r]);let n;if(i[0]){let e=i[0].fields;const t=i[0].values;if(e&&t){e=e.map((e=>({type:"OID"===e.name?"esriFieldTypeOID":ee.get(e.type),name:e.name,alias:e.alias||e.name})));const r=t.map((e=>({attributes:e})));e&&t&&(n={fields:e,features:r})}}return!n&&i[1]&&(n=class{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),r=3&t.getUint8(0);if(3!==r)return{header:{version:r},recordSet:null};const i=t.getUint32(4,!0),n=t.getUint16(8,!0),s=t.getUint16(10,!0),a={version:r,recordCount:i,headerByteCount:n,recordByteCount:s};let o=32;const l=[],u=[];let c;if(3===r){for(;13!==t.getUint8(o);)c=String.fromCharCode(t.getUint8(o+11)).trim(),l.push({name:(0,Q.f)(new Uint8Array(e,o,11)),type:c,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(c)],length:t.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;u.length<i&&e.byteLength-o>s;){const r=[];32===t.getUint8(o)?(o+=1,l.forEach((t=>{if("C"===t.type)r.push((0,Q.f)(new Uint8Array(e,o,t.length)).trim());else if("N"===t.type)r.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim(),10));else if("F"===t.type)r.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim()));else if("D"===t.type){const i=String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim();r.push(new Date(parseInt(i.substring(0,4),10),parseInt(i.substring(4,6),10)-1,parseInt(i.substring(6,8),10)))}o+=t.length})),u.push(r)):o+=s}}const h=function(e){const t=e.fields,r=e.records,i=t.some((e=>"oid"===e.name.toLowerCase()))?"OBJECTID":"OID",n=[{name:i,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map((e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name})))),s=n.map((e=>e.name)),a=[];let o=0,l=0;return r.forEach((e=>{const t={};for(t[i]=o++,l=1;l<s.length;l++)t[s[l]]=e[l-1];a.push({attributes:t})})),{displayFieldName:"",fields:n,features:a}}({fields:l,records:u});return{header:a,fields:l,records:u,recordSet:h}}}.parse(i[1]).recordSet),Z.default.fromJSON(n)}_buildCacheFilePath(e,t,r,i){const s=this.storageInfo.packetSize,a=Math.floor(t/s)*s,o=Math.floor(r/s)*s,l="R"+this._toHexString4(a)+"C"+this._toHexString4(o);let u="L";u+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:c}=this.rasterInfo,h=null==i?void 0:i[0];if(!(0,n.pC)(c)||!h)return`${this.url}/_alllayers/${u}/${l}.bundle`;let d=c.variables.filter((e=>e.name===h.variableName))[0].dimensions[0].values.indexOf(h.values[0]).toString(16);const p=4-d.length;for(let e=0;e<p;e++)d="0"+d;return d="S"+d,`${this.url}/_alllayers/${h.variableName}/${d}/${u}/${l}.bundle`}_getIndexRecordFromBundle(e,t){const r=this.storageInfo.packetSize,i=r*(e%r)+t%r;if(i<0)throw"Invalid level / row / col";return 20+i*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const r=e.subarray(t,t+8);let i,n=0;for(i=0;i<5;i++)n|=(255&r[i])<<8*i;const s=0xffffffffff&n;for(n=0,i=5;i<8;i++)n|=(255&r[i])<<8*(i-5);return{position:s,recordSize:0xffffffffff&n}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t}return t}};(0,i._)([(0,o.Cb)({readOnly:!0})],te.prototype,"storageInfo",void 0),(0,i._)([(0,o.Cb)({type:String,json:{write:!0}})],te.prototype,"datasetFormat",void 0),te=(0,i._)([(0,h.j)("esri.layers.support.rasterDatasets.CloudRaster")],te);const re=te;let ie=class extends K{constructor(){super(...arguments),this.datasetFormat="MEMORY"}async open(e){var t;await this.init();const{pixelBlock:r,statistics:i,histograms:n,name:s,keyProperties:a,nativeExtent:o,transform:l}=this.data,{width:u,height:c,pixelType:h}=r,d=this.data.extent||new D.Z({xmin:-.5,ymin:.5,xmax:u-.5,ymax:c-.5,spatialReference:new k.Z({wkid:3857})}),p=null!=(t=this.data.isPseudoSpatialReference)?t:!this.data.extent,f={x:d.width/u,y:d.height/c},m=new H.Z({width:u,height:c,pixelType:h,extent:d,nativeExtent:o,transform:l,pixelSize:f,spatialReference:d.spatialReference,bandCount:3,keyProperties:a||{},statistics:i,isPseudoSpatialReference:p,histograms:n});this.createRemoteDatasetStorageInfo(m,512,512),this._set("rasterInfo",m),this.updateTileInfo(),await this._buildInMemoryRaster(r,{width:512,height:512},e),this.datasetName=s,this.url="/InMemory/"+s}fetchRawTile(e,t,r,i={}){const n=this._pixelBlockTiles.get(`${e}/${t}/${r}`);return(0,f.resolve)(n)}async _buildInMemoryRaster(e,t,r){const i=this.rasterInfo.storageInfo.maximumPyramidLevel,s=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:i},r):(0,f.resolve)((0,V.Vl)(e,t,i)),a=(0,n.pC)(this.rasterInfo.statistics),o=(0,n.pC)(this.rasterInfo.histograms),l=a&&o?(0,f.resolve)({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},r):(0,f.resolve)((0,V.Hv)(e)),u=await(0,f.eachAlways)([s,l]);if(!u[0].value&&u[1].value)throw new d.Z("inmemory-raster:open","failed to build in memory raster");var c,h;this._pixelBlockTiles=u[0].value,a||(this.rasterInfo.statistics=null==(c=u[1].value)?void 0:c.statistics),o&&(this.rasterInfo.histograms=null==(h=u[1].value)?void 0:h.histograms)}};(0,i._)([(0,o.Cb)({type:String,json:{write:!0}})],ie.prototype,"datasetFormat",void 0),(0,i._)([(0,o.Cb)()],ie.prototype,"data",void 0),ie=(0,i._)([(0,h.j)("esri.layers.support.rasterDatasets.InMemoryRaster")],ie);const ne=ie;function se(e,t,r){const{x:i,y:n}=t;if(r<2)return{x:e[0]+i*e[2]+n*e[4],y:e[1]+i*e[3]+n*e[5]};if(2===r){const t=i*i,r=n*n,s=i*n;return{x:e[0]+i*e[2]+n*e[4]+t*e[6]+s*e[8]+r*e[10],y:e[1]+i*e[3]+n*e[5]+t*e[7]+s*e[9]+r*e[11]}}const s=i*i,a=n*n,o=i*n,l=s*i,u=s*n,c=i*a,h=n*a;return{x:e[0]+i*e[2]+n*e[4]+s*e[6]+o*e[8]+a*e[10]+l*e[12]+u*e[14]+c*e[16]+h*e[18],y:e[1]+i*e[3]+n*e[5]+s*e[7]+o*e[9]+a*e[11]+l*e[13]+u*e[15]+c*e[17]+h*e[19]}}function ae(e,t,r){const{xmin:i,ymin:n,xmax:s,ymax:a,spatialReference:o}=t;let l=[];if(r<2)l.push({x:i,y:a}),l.push({x:s,y:a}),l.push({x:i,y:n}),l.push({x:s,y:n});else{let e=10;for(let t=0;t<e;t++)l.push({x:i,y:n+(a-n)*t/(e-1)}),l.push({x:s,y:n+(a-n)*t/(e-1)});e=8;for(let t=1;t<=e;t++)l.push({x:i+(s-i)*t/e,y:n}),l.push({x:i+(s-i)*t/e,y:a})}l=l.map((t=>se(e,t,r)));const u=l.map((e=>e.x)),c=l.map((e=>e.y));return new D.Z({xmin:Math.min.apply(null,u),xmax:Math.max.apply(null,u),ymin:Math.min.apply(null,c),ymax:Math.max.apply(null,c),spatialReference:o})}let oe=class extends G.wq{constructor(){super(...arguments),this.polynomialOrder=1}get inverseCoefficients(){let e=this._get("inverseCoefficients");const t=this._get("forwardCoefficients");return!e&&t&&this.polynomialOrder<2&&(e=function(e){const[t,r,i,n,s,a]=e,o=i*a-s*n,l=s*n-i*a;return[(s*r-t*a)/o,(i*r-t*n)/l,a/o,n/l,-s/o,-i/l]}(t)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e)}forwardTransform(e){if("point"===e.type){const t=se(this.forwardCoefficients,e,this.polynomialOrder);return new j.Z({x:t.x,y:t.y,spatialReference:e.spatialReference})}return ae(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const t=se(this.inverseCoefficients,e,this.polynomialOrder);return new j.Z({x:t.x,y:t.y,spatialReference:e.spatialReference})}return ae(this.inverseCoefficients,e,this.polynomialOrder)}};(0,i._)([(0,o.Cb)({json:{write:!0}})],oe.prototype,"polynomialOrder",void 0),(0,i._)([(0,o.Cb)({json:{write:!0}})],oe.prototype,"forwardCoefficients",void 0),(0,i._)([(0,o.Cb)({dependsOn:["forwardCoefficients"],json:{write:!0}})],oe.prototype,"inverseCoefficients",null),oe=(0,i._)([(0,h.j)("esri.layers.support.rasterTransforms.PolynomialTransform")],oe);const le=oe;function ue(e,t){if(!e||!t)return[];let r=t;t.indexOf("/")>-1?(r=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const i=[];if(t){const n=ue(e,r);for(let e=0;e<n.length;e++)ue(n[e],t).forEach((e=>i.push(e)));return i}const n=e.getElementsByTagNameNS("*",r);if(!n||0===n.length)return[];for(let e=0;e<n.length;e++)i.push(n[e]||n.item[e]);return i}function ce(e,t){if(!e||!t)return null;let r=t;t.indexOf("/")>-1?(r=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const i=ue(e,r);return i.length>0?t?ce(i[0],t):i[0]:null}function he(e,t=null){const r=t?ce(e,t):e;let i;return r?(i=r.textContent||r.nodeValue,i?i.trim():null):null}function de(e,t){return function(e,t){const r=ue(e,t),i=[];let n;for(let e=0;e<r.length;e++)n=r[e].textContent||r[e].nodeValue,n&&(n=n.trim(),""!==n&&i.push(n));return i}(e,t).map((e=>Number(e)))}function pe(e,t){const r=he(e,t);return Number(r)}function fe(e,t){var r;const i=null==e||null==(r=e.nodeName)?void 0:r.toLowerCase(),n=t.toLowerCase();return i.slice(i.lastIndexOf(":")+1)===n}function me(e,t){if(!e||!t)return null;const r=[];for(let i=0;i<e.length;i++)r.push(e[i]),r.push(t[i]);return r}function ye(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new k.Z({wkid:t});const r=e.replace(/\]/g,"[").replace(/\"/g,"").split("[").map((e=>e.trim())).filter((e=>""!==e)),i=r[r.length-1].split(",");return"EPSG"!==i[0]||(t=Number(i[1]),isNaN(t)||0===t)?new k.Z({wkt:e}):new k.Z({wkid:t})}function ge(e){var t;if("pamdataset"!==(null==e||null==(t=e.documentElement.tagName)?void 0:t.toLowerCase()))return{};const r={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach((e=>{if(1===e.nodeType)if(fe(e,"SRS")){if(!r.spatialReference){const t=he(e);r.spatialReference=ye(t)}}else if(fe(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:t,transform:i}=function(e){var t;const r=ce(e,"GeodataXform"),i=ye(pe(r,"SpatialReference/WKID")||he(r,"SpatialReference/WKT"));if("typens:PolynomialXform"!==r.getAttribute("xsi:type"))return{spatialReference:i,transform:null};const n=null!=(t=pe(r,"PolynomialOrder"))?t:1,s=de(r,"CoeffX/Double"),a=de(r,"CoeffY/Double"),o=de(r,"InverseCoeffX/Double"),l=de(r,"InverseCoeffY/Double"),u=me(s,a),c=me(o,l);return{spatialReference:i,transform:new le({polynomialOrder:n,forwardCoefficients:u,inverseCoefficients:c})}}(e);r.transform=i,r.spatialReference||(r.spatialReference=t)}else ue(e,"MDI").forEach((e=>r.metadata[e.getAttribute("key")]=he(e)));else if(fe(e,"PAMRasterBand")){const t=function(e){var t;const r=pe(e,"NoDataValue"),i=ce(e,"Histograms/HistItem"),n=pe(i,"HistMin"),s=pe(i,"HistMax"),a=pe(i,"BucketCount"),o=null==(t=he(i,"HistCounts"))?void 0:t.split("|").map((e=>Number(e)));let l,u,c,h;ue(e,"Metadata/MDI").forEach((e=>{var t;const r=Number(null!=(t=e.textContent)?t:e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=r;break;case"STATISTICS_MAXIMUM":u=r;break;case"STATISTICS_MEAN":c=r;break;case"STATISTICS_STDDEV":h=r}}));const d=pe(e,"Metadata/SourceBandIndex");return{noDataValue:r,histogram:null!=o&&o.length&&null!=l&&null!=u?{min:n,max:s,size:a||o.length,counts:o}:null,sourceBandIndex:d,statistics:null!=l&&null!=u?{min:l,max:u,avg:c,stddev:h}:null}}(e);null!=t.sourceBandIndex&&null==r.rasterBands[t.sourceBandIndex]?r.rasterBands[t.sourceBandIndex]=t:r.rasterBands.push(t)}}));const i=r.rasterBands;if(i){const e=!!i[0].statistics;r.statistics=e?i.map((e=>e.statistics)):null;const t=!!i[0].histogram;r.histograms=t?i.map((e=>e.histogram)):null}return r}let xe=class extends K{async open(e){await this.init();const t=await this._fetchData(e);let{spatialReference:r,statistics:i,histograms:n,transform:s}=await this._fetchAuxiliaryData(e);const a=!r;a&&(r=new k.Z({wkid:3857})),null!=n&&n.length&&null==i&&(i=(0,V.Oh)(n));const{width:o,height:l}=t;let u=new D.Z({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:r});const c=s?s.forwardTransform(u):u;let h=!0;if(s){const e=s.forwardCoefficients;h=e&&0===e[1]&&0===e[2],h&&(s=null,u=c)}const d=new ne({data:{extent:c,nativeExtent:u,transform:s,pixelBlock:t,statistics:i,histograms:n,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a}});await d.open(),this._set("rasterInfo",d.rasterInfo),this._inMemoryRaster=d}fetchRawTile(e,t,r,i={}){return this._inMemoryRaster.fetchRawTile(e,t,r,i)}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:null==e?void 0:e.signal}),r=(0,W.y)(t).toUpperCase();if("JPG"!==r&&"PNG"!==r&&"GIF"!==r&&"BMP"!==r)throw new d.Z("image-aux-raster:open","the data is not a supported format");return this._set("datasetFormat",r),await this.decodePixelBlock(t,{format:"jpg",width:1,height:1,useCanvas:!0})}async _fetchAuxiliaryData(e){var t,r;const i=(0,n.Wg)(null==e?void 0:e.signal),s=null!=(t=this.ioConfig.skipExtensions)?t:[],a=s.indexOf("aux.xml")>-1?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:i}),o=this.datasetFormat,l="JPG"===o?"jgw":"PNG"===o?"pgw":"BMP"===o?"bpw":null,u=s.indexOf(l)>-1?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+l,{responseType:"text",signal:i}),c=await(0,f.eachAlways)([a,u]);if(null!=i&&i.aborted)throw(0,f.createAbortError)();const h=ge(null==(r=c[0].value)?void 0:r.data);if(!h.transform){const e=c[1].value?c[1].value.data.split("\n").slice(0,6).map((e=>Number(e))):null;h.transform=6===(null==e?void 0:e.length)?new le({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return h}};(0,i._)([(0,o.Cb)({type:String,json:{write:!0}})],xe.prototype,"datasetFormat",void 0),xe=(0,i._)([(0,h.j)("esri.layers.support.rasterDatasets.ImageAuxRaster")],xe);const we=xe;var be=r(63710),ve=r(78136);let Ie=class extends K{constructor(){super(...arguments),this._levelOffset=0,this._slices=null,this._tilemapCache=null,this.datasetFormat="RasterTileServer"}async open(e){await this.init();const t=e&&e.signal,r=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:t});r.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const i=r.data;this.sourceJSON=i;if(this.tileType=i.cacheType,null==this.tileType&&(["jpg","jpeg","png","png8","png24","png32","mixed"].indexOf(i.tileInfo.format.toLowerCase())>-1?this.tileType="Map":"lerc"===i.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),!i)throw new d.Z("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!i.tileInfo)throw new d.Z("imageserverraster:open","use ImageryLayer to open non-tiled image services");this.datasetName=i.name.slice(i.name.indexOf("/")+1);const s=await this._fetchRasterInfo({signal:t});if(!(0,n.pC)(s))throw new d.Z("image-server-raster:open","cannot initialize image service");{const e="Map"===this.tileType?(0,be.d)(i.tileInfo,i):O.Z.fromJSON(i.tileInfo),{extent:t,pixelSize:r}=s,n=.5/s.width*r.x;let a,o;const l=e.lodAt(Math.max.apply(null,e.lods.map((e=>e.level))));"Map"!==this.tileType&&0!==i.maxScale&&("Raster"===this.tileType?(a=e.lods.filter((e=>e.resolution===r.x))[0],a||(a=e.lods[e.lods.length-1])):(a=e.lods.filter((e=>Math.abs(e.scale-i.maxScale)<n))[0],a||(a=e.lods.filter((e=>e.scale>i.maxScale)).sort(((e,t)=>e.scale>t.scale?1:-1))[0])),r.x=r.y=a.resolution,s.width=Math.ceil((t.xmax-t.xmin)/r.x-.1),s.height=Math.ceil((t.ymax-t.ymin)/r.y-.1)),a||(a=l);const u=e.lodAt(Math.min.apply(null,e.lods.map((e=>e.level))));"Map"===this.tileType?this._levelOffset=e.lods[0].level:0!==i.minScale&&"Elevation"===this.tileType&&(o=e.lods.filter((e=>Math.abs(e.scale-i.minScale)<n))[0],this._levelOffset=o.level-u.level),o||(o=u);const c=Math.max(r.x,r.y);(Math.abs(r.x-r.y)>n||!e.lods.some((e=>Math.abs(e.resolution-c)<n)))&&(r.x=r.y=a.resolution,s.width=Math.ceil((t.xmax-t.xmin)/r.x-.1),s.height=Math.ceil((t.ymax-t.ymin)/r.y-.1));const h=a.level-o.level,[d,p]=e.size,f=e.origin;let{x:m,y}=r;const g=[{minCol:Math.floor((t.xmin-f.x+.1*m)/d/m),maxCol:Math.floor((t.xmax-f.x-.1*m)/d/m),minRow:Math.floor((f.y-t.ymax+.1*y)/p/y),maxRow:Math.floor((f.y-t.ymin-.1*y)/p/y)}];if(h>0)for(let e=0;e<h;e++)m*=2,y*=2,g.push({minCol:Math.floor((t.xmin-f.x+.1*m)/d/m),maxCol:Math.floor((t.xmax-f.x-.1*m)/d/m),minRow:Math.floor((f.y-t.ymax+.1*y)/p/m),maxRow:Math.floor((f.y-t.ymin-.1*y)/p/m)});s.storageInfo=new q({blockWidth:e.size[0],blockHeight:e.size[1],pyramidBlockWidth:e.size[0],pyramidBlockHeight:e.size[1],compression:e.format,origin:e.origin,firstPyramidLevel:1,maximumPyramidLevel:h,tileInfo:e,blockBoundary:g}),this._set("rasterInfo",s)}if(i.capabilities.toLowerCase().indexOf("tilemap")>-1){const e={tileInfo:s.storageInfo.tileInfo,parsedUrl:(0,p.mN)(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new ve.y({layer:e})}}async fetchRawTile(e,t,r,i={}){const{storageInfo:n,extent:s,pixelSize:a}=this.rasterInfo,o=n.maximumPyramidLevel-e+this._levelOffset,l=`${this.url}/tile/${o}/${t}/${r}`,u=this._slices?{sliceId:i.sliceId||0}:null,{data:c}=await this.request(l,{query:u,responseType:"array-buffer",signal:i.signal});if(!c)return null;const h=await this.decodePixelBlock(c,{width:n.tileInfo.size[0],height:n.tileInfo.size[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType}),d=n.blockBoundary[e];if("jpg"!==n.compression||r>d.minCol&&r<d.maxCol&&t>d.minRow&&t<d.maxRow)return h;const{origin:p,blockWidth:f,blockHeight:m}=n,y=Math.pow(2,e),g=Math.round((s.xmin-p.x)/(a.x*y))%f,x=Math.round((s.xmax-p.x)/(a.x*y))%f,w=Math.round((p.y-s.ymax)/(a.x*y))%m,b=Math.round((p.y-s.ymin)/(a.x*y))%m,v=r===d.minCol?g:0,I=t===d.minRow?w:0,_=r===d.maxCol?x:f,C=t===d.maxRow?b:m;return(0,V.pW)(h,{x:v,y:I},{width:_-v,height:C-I}),h}getSliceIndex(e){if(null==e||!e.length||!this._slices)return null;const t=e;for(let e=0;e<this._slices.length;e++){const r=this._slices[e].multidimensionalDefinition;if(r.length===t.length&&!r.some((e=>{const r=t.filter((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName))[0];return!r||(Array.isArray(e.values[0])?e.values[0][0]:e.values[0])!==(Array.isArray(r.values[0])?r.values[0][0]:r.values[0])})))return e}return null}async fetchVariableStatisticsHistograms(e,t){const r=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),i=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),n=await(0,f.all)([r,i]);return n[0]&&n[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:n[0]||null,histograms:n[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let r=this.identifyPixelLocation(e,0,t.datumTransformation);if(null===r)return null;let i=0;const{maximumPyramidLevel:n}=this.rasterInfo.storageInfo;let s=n-i+this._levelOffset;const a=r.srcLocation;for(;s>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(s,r.row,r.col,t))break}catch{}if(s--,i++,r=this.identifyPixelLocation(a,i,t.datumTransformation),null===r)return null}return-1===s||null==r?null:i}async _fetchRasterInfo(e){const t=this.sourceJSON,r=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),i=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),n=k.Z.fromJSON(t.spatialReference||t.extent.spatialReference);if("Map"===this.tileType)return new H.Z({width:r,height:i,bandCount:3,extent:D.Z.fromJSON(t.extent),spatialReference:n,pixelSize:new j.Z({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:n}),pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}});const{slice:s,signal:a}=e,o=!!t.hasRasterAttributeTable&&this.request(this.url+"/rasterAttributeTable",{query:{slice:s,f:"json"},signal:a}).then((e=>Z.default.fromJSON(e.data))).catch((()=>null)),l=!!t.hasColormap&&this.request(this.url+"/colormap",{query:{slice:s,f:"json"},signal:a}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),u=!!t.hasHistograms&&this.request(this.url+"/histograms",{query:{slice:s,f:"json"},signal:a}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),c=this.request(this.url+"/keyProperties",{query:{f:"json"},signal:a}).then((e=>e.data)).catch((()=>{})),h=!!t.hasMultidimensions&&this._fetchMultidimensionalInfo(),d=!!t.hasMultidimensions&&this.request(this.url+"/slices",{query:{f:"json"},signal:a}).then((e=>e.data&&e.data.slices)).catch((()=>{}));return(0,f.all)([o,l,u,c,h,d]).then((e=>{let s=null;if(t.minValues&&t.minValues.length===t.bandCount){s=[];for(let e=0;e<t.minValues.length;e++)s.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}return this._slices=e[5]||null,new H.Z({width:r,height:i,bandCount:t.bandCount,extent:D.Z.fromJSON(t.extent),spatialReference:n,pixelSize:new j.Z({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:n}),pixelType:t.pixelType.toLowerCase(),statistics:s,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})}))}async _fetchMultidimensionalInfo(e){var t;const r=await this.request(this.url+"/multidimensionalInfo",{query:{f:"json"},signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return null!=(t=r.variables)&&t.length&&r.variables.forEach((e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation}))})),r}};(0,i._)([(0,o.Cb)({type:String,json:{write:!0}})],Ie.prototype,"datasetFormat",void 0),(0,i._)([(0,o.Cb)()],Ie.prototype,"tileType",void 0),Ie=(0,i._)([(0,h.j)("esri.layers.support.rasterDatasets.ImageServerRaster")],Ie);const _e=Ie;var Ce=r(42766),Se=r(32088);const Te=new Map;Te.set("Int8","s8"),Te.set("UInt8","u8"),Te.set("Int16","s16"),Te.set("UInt16","u16"),Te.set("Int32","s32"),Te.set("UInt32","u32"),Te.set("Float32","f32"),Te.set("Float64","f32"),Te.set("Double64","f32");const Me=new Map;Me.set("lerc",".lrc"),Me.set("none",".til"),Me.set("deflate",".pzp"),Me.set("jpeg",".jzp");let Re=class extends K{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(e){var t;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const r=e?(0,n.Wg)(e.signal):null,i=await this.request(this.url,{responseType:"xml",signal:r}),{rasterInfo:s,files:a}=this._parseHeader(i.data);if(-1===(null==(t=this.ioConfig.skipExtensions)?void 0:t.indexOf("aux.xml"))){const t=await this._fetchAuxiliaryData(e);var o;null!=t&&(s.statistics=null!=(o=t.statistics)?o:s.statistics,s.histograms=t.histograms,t.histograms&&!(0,n.pC)(s.statistics)&&(s.statistics=(0,V.Oh)(t.histograms)))}this._set("rasterInfo",s),this._files=a;const l=await this.request(a.index,{responseType:"array-buffer",signal:r});this._storageIndex=this._parseIndex(l.data);let u,c,h=0,d=-1;const{blockWidth:p,blockHeight:f,compression:m}=this.rasterInfo.storageInfo,y=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:g,height:x,bandCount:w}=this.rasterInfo,b=[],v="none"===m?1:w;for(;h<this._storageIndex.length;)d++,u=Math.ceil(g/p/Math.pow(y,d)),c=Math.ceil(x/f/Math.pow(y,d)),h+=u*c*v*4,b.push({maxRow:c,maxCol:u,minCol:0,minRow:0});this.rasterInfo.storageInfo.blockBoundary=b,d>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=d),this.updateTileInfo()}async fetchRawTile(e,t,r,i={}){const{blockWidth:n,blockHeight:s,blockBoundary:a,compression:o}=this.rasterInfo.storageInfo,l=a[e];if(!l||l.maxRow<t||l.maxCol<r||l.minRow>t||l.minCol>r)return null;const{bandCount:u,pixelType:c}=this.rasterInfo,{ranges:h,actualTileWidth:d,actualTileHeight:p}=this._getTileLocation(e,t,r);if(!h||0===h.length)return null;if(0===h[0].from&&0===h[0].to){const e=new Uint8Array(n*s);return new Ce.Z({width:n,height:s,pixels:null,mask:e,validPixelCount:0})}const{bandIds:m}=this.ioConfig,y="none"===o?1:u,g=[];let x=0;for(x=0;x<y;x++)(!m||m.indexOf[x]>-1)&&g.push(this.request(this._files.data,{range:{from:h[x].from,to:h[x].to},responseType:"array-buffer",signal:i.signal}));const w=await(0,f.all)(g),b=w.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),v=new Uint8Array(b);let I=0;for(x=0;x<y;x++)v.set(new Uint8Array(w[x].data),I),I+=w[x].data.byteLength;const _="lerc"===this.rasterInfo.storageInfo.compression?"lerc":"bip",C=await this.decodePixelBlock(v.buffer,{width:n,height:s,format:_,pixelType:c});let S=0,T=0;if(d!==n||p!==s){let e=C.mask;if(e)for(x=0;x<s;x++)if(T=x*n,x<p)for(S=d;S<n;S++)e[T+S]=0;else for(S=0;S<n;S++)e[T+S]=0;else for(e=new Uint8Array(n*s),C.mask=e,x=0;x<p;x++)for(T=x*n,S=0;S<d;S++)e[T+S]=1}return C}_parseIndex(e){if(e.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let t,r,i,n,s,a;if(Se.f){for(r=new Uint8Array(e),n=new ArrayBuffer(e.byteLength),i=new Uint8Array(n),s=0;s<e.byteLength/4;s++)for(a=0;a<4;a++)i[4*s+a]=r[4*s+3-a];t=new Uint32Array(n)}else t=new Uint32Array(e);return t}_getTileLocation(e,t,r){const{blockWidth:i,blockHeight:n,pyramidScalingFactor:s,compression:a}=this.rasterInfo.storageInfo,{width:o,height:l,bandCount:u}=this.rasterInfo,c="none"===a?1:u;let h,d,p,f=0,m=0;for(p=0;p<e;p++)m=Math.pow(s,p),h=Math.ceil(o/i/m),d=Math.ceil(l/n/m),f+=h*d;m=Math.pow(s,e),h=Math.ceil(o/i/m),d=Math.ceil(l/n/m),f+=t*h+r,f*=4*c;const y=this._storageIndex.subarray(f,f+4*c);let g=0,x=0;const w=[];for(let e=0;e<c;e++)g=y[4*e+0]*Math.pow(2,32)+y[4*e+1],x=g+y[4*e+2]*Math.pow(2,32)+y[4*e+3],w.push({from:g,to:x});return{ranges:w,actualTileWidth:r<h-1?i:Math.ceil(o/m)-i*(h-1),actualTileHeight:t<d-1?n:Math.ceil(l/m)-n*(d-1)}}_parseHeader(e){const t=ce(e,"MRF_META/Raster");if(!t)throw new d.Z("mrf:open","not a valid MRF format");const r=ce(t,"Size"),i=parseInt(r.getAttribute("x"),10),n=parseInt(r.getAttribute("y"),10),s=parseInt(r.getAttribute("c"),10),a=(he(t,"Compression")||"none").toLowerCase();if(!a||-1===["none","lerc"].indexOf(a))throw new d.Z("mrf:open","currently does not support compression "+a);const o=he(t,"DataType")||"UInt8",l=Te.get(o);if(null==l)throw new d.Z("mrf:open","currently does not support pixel type "+o);const u=ce(t,"PageSize"),c=parseInt(u.getAttribute("x"),10),h=parseInt(u.getAttribute("y"),10),p=ce(t,"DataValues");let f,m;if(p&&(m=p.getAttribute("NoData"),null!=m&&(f=m.trim().split(" ").map((e=>parseFloat(e))))),ce(e,"MRF_META/CachedSource"))throw new d.Z("mrf:open","currently does not support MRF referencing other data files");const y=ce(e,"MRF_META/GeoTags"),g=ce(y,"BoundingBox");if(null==g)throw new d.Z("mrf:open","missing node MRF_META/GeoTags/BoundingBox");const x=parseFloat(g.getAttribute("minx")),w=parseFloat(g.getAttribute("miny")),b=parseFloat(g.getAttribute("maxx")),v=parseFloat(g.getAttribute("maxy")),I=he(y,"Projection"),_=he(e,"datafile"),C=he(e,"IndexFile");let S;"LOCAL_CS[]"!==I&&(S=new k.Z({wkt:I}));const T=new D.Z(x,w,b,v);T.spatialReference=S;const M=ce(e,"MRF_META/Rsets"),R=parseInt(M&&M.getAttribute("scale")||"2",10),L=new q({origin:new j.Z({x:T.xmin,y:T.ymax,spatialReference:S}),blockWidth:c,blockHeight:h,pyramidBlockWidth:c,pyramidBlockHeight:h,compression:a,pyramidScalingFactor:R}),F=new j.Z({x:(b-x)/i,y:(v-w)/n,spatialReference:S});return{rasterInfo:new H.Z({width:i,height:n,extent:T,spatialReference:S,bandCount:s,pixelType:l,pixelSize:F,noDataValue:f,storageInfo:L}),files:{mrf:this.url,index:C||this.url.replace(".mrf",".idx"),data:_||this.url.replace(".mrf",Me.get(a))}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return ge(t)}catch{return null}}};(0,i._)([(0,o.Cb)()],Re.prototype,"_files",void 0),(0,i._)([(0,o.Cb)()],Re.prototype,"_storageIndex",void 0),(0,i._)([(0,o.Cb)({type:String,json:{write:!0}})],Re.prototype,"datasetFormat",void 0),Re=(0,i._)([(0,h.j)("esri.layers.support.rasterIO.MRFRaster")],Re);const ke=Re;var De=r(42355),Le=r(71779);const Fe=function(e,t){const r=e.get(t);return r&&r.values},Oe=function(e,t){const r=e.get(t);return r&&r.values[0]};let Ee=class extends K{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){var t;await this.init();const r=e?(0,n.Wg)(e.signal):null,{data:i}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:r});if(!i)throw new d.Z("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:s,firstIFD:a,isBigTiff:o}=(0,Le.cK)(i),l=[];await this.readIFDs(l,i,s,a,0,o?8:4,r);const u=(0,Le.FI)(l),{width:c,height:h,tileWidth:p,tileHeight:f,planes:m,pixelType:y,compression:g,firstPyramidLevel:x,maximumPyramidLevel:w,pyramidBlockWidth:b,pyramidBlockHeight:v,tileBoundary:I,metadata:_}=u,C=D.Z.fromJSON(u.extent),S=C.spatialReference,T=new j.Z(C?{x:C.xmin,y:C.ymax,spatialReference:S}:{x:0,y:0}),M=new q({blockWidth:p,blockHeight:f,pyramidBlockWidth:b,pyramidBlockHeight:v,compression:g,origin:T,firstPyramidLevel:x,maximumPyramidLevel:w,blockBoundary:I}),R=new j.Z({x:(C.xmax-C.xmin)/c,y:(C.ymax-C.ymin)/h,spatialReference:S}),k=_?{BandProperties:_.bandProperties,DataType:_.dataType}:{},L=new H.Z({width:c,height:h,bandCount:m,pixelType:y,compression:g,pixelSize:R,storageInfo:M,spatialReference:S,keyProperties:k,extent:C,statistics:_?_.statistics:null});if(-1===(null==(t=this.ioConfig.skipExtensions)?void 0:t.indexOf("aux.xml"))){const t=await this._fetchAuxiliaryData(e);var F;null!=t&&(L.statistics=null!=(F=t.statistics)?F:L.statistics,L.histograms=t.histograms,t.histograms&&!(0,n.pC)(L.statistics)&&(L.statistics=(0,V.Oh)(t.histograms)))}if(this._set("rasterInfo",L),this._headerInfo={littleEndian:s,isBigTiff:o,ifds:l,...u},!this._headerInfo.isSupported)throw new d.Z("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(e,t,r,i={}){if(!this._headerInfo&&this._headerInfo.isSupported)return null;const{blockBoundary:n}=this.rasterInfo.storageInfo,s=e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,a=e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight,o=n[e];if(!o||o.maxRow<t||o.maxCol<r||o.minRow>t||o.minCol>r)return null;const l=this.getTileLocation(e,t,r);if(!l)return null;const{range:u,actualTileWidth:c,actualTileHeight:h,ifd:d}=l,{data:p}=await this.request(this.url,{range:u,responseType:"array-buffer",signal:i.signal}),f=await this.decodePixelBlock(p,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:d,offset:0,size:0},width:s,height:a,planes:null,pixelType:null});let m,y,g;if(c!==s||h!==a){let e=f.mask;if(e)for(m=0;m<a;m++)if(g=m*s,m<h)for(y=c;y<s;y++)e[g+y]=0;else for(y=0;y<s;y++)e[g+y]=0;else for(e=new Uint8Array(s*a),f.mask=e,m=0;m<h;m++)for(g=m*s,y=0;y<c;y++)e[g+y]=1}return f}async readIFDs(e,t,r,i,n,s=4,a){if(!i)return null;(i>=t.byteLength||i<0)&&(t=(await this.request(this.url,{range:{from:i+n,to:i+n+this._bufferSize},responseType:"array-buffer",signal:a})).data,n=i+n,i=0);const o=await this.readIFD(t,r,i,n,De.Z.TIFF_TAGS,s,a);if(e.push(o.ifd),!o.nextIFD)return null;await this.readIFDs(e,t,r,o.nextIFD-n,n,s,a)}async readIFD(e,t,r,i,n=De.Z.TIFF_TAGS,s=4,a){if(!e)return null;const o=(0,Le.vr)(e,t,r,i,n,s);if(o.success){const r=[];if(o.ifd.forEach((e=>{e.values||r.push(e)})),r.length>0){const n=r.map((e=>e.offlineOffsetSize)),s=Math.min.apply(null,n.map((e=>e[0])));if(Math.min.apply(null,n.map((e=>e[0]+e[1])))-s<=this._bufferSize){const{data:n}=await this.request(this.url,{range:{from:s,to:s+this._bufferSize},responseType:"array-buffer",signal:a});e=n,i=s,r.forEach((r=>(0,Le.Dq)(e,t,r,i)))}}if(o.ifd.has("GEOKEYDIRECTORY")){const r=o.ifd.get("GEOKEYDIRECTORY"),n=r.values;if(n&&n.length>4){const s=n[0]+"."+n[1]+"."+n[2],o=await this.readIFD(e,t,r.valueOffset+6-i,i,De.Z.GEO_KEYS,2,a);r.data=o.ifd,r.data&&r.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[s]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==e.byteLength){const r=await this.request(this.url,{range:{from:i,to:i+o.requiredBufferSize+4},responseType:"array-buffer",signal:a});return(e=r.data).byteLength<o.requiredBufferSize?null:this.readIFD(e,t,0,i,De.Z.TIFF_TAGS,4,a)}}getTileLocation(e,t,r){const{firstPyramidLevel:i,blockBoundary:n}=this.rasterInfo.storageInfo,s=0===e?0:e-(i-1),a=this._headerInfo.ifds[s];if(!a)return null;const o=Fe(a,"TILEOFFSETS");if(void 0===o)return null;const l=Fe(a,"TILEBYTECOUNTS"),{minRow:u,minCol:c,maxRow:h,maxCol:d}=n[s];if(t>h||r>d||t<u||r<c)return null;const p=Oe(a,"IMAGEWIDTH"),f=Oe(a,"IMAGELENGTH"),m=Oe(a,"TILEWIDTH"),y=Oe(a,"TILELENGTH"),g=t*(d+1)+r,x=o[g],w=l[g];return null==x||null==w?null:{range:{from:x,to:x+w-1},ifd:a,actualTileWidth:r===d?p%m:m,actualTileHeight:t===h?f%y:y}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return ge(t)}catch{return null}}};(0,i._)([(0,o.Cb)()],Ee.prototype,"_files",void 0),(0,i._)([(0,o.Cb)()],Ee.prototype,"_headerInfo",void 0),(0,i._)([(0,o.Cb)()],Ee.prototype,"_bufferSize",void 0),(0,i._)([(0,o.Cb)({type:String,json:{write:!0}})],Ee.prototype,"datasetFormat",void 0),Ee=(0,i._)([(0,h.j)("esri.layers.support.rasterDatasets.TIFFRaster")],Ee);const Be=Ee,Ae=new Map;Ae.set("CRF",{desc:"Cloud Raster Format",constructor:re}),Ae.set("MRF",{desc:"Meta Raster Format",constructor:ke}),Ae.set("TIFF",{desc:"GeoTIFF",constructor:Be}),Ae.set("RasterTileServer",{desc:"Raster Tile Server",constructor:_e}),Ae.set("JPG",{desc:"JPG Raster Format",constructor:we}),Ae.set("PNG",{desc:"PNG Raster Format",constructor:we}),Ae.set("GIF",{desc:"GIF Raster Format",constructor:we}),Ae.set("BMP",{desc:"BMP Raster Format",constructor:we});const Pe=(0,l.wY)()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"});function Ne(){return{enabled:!this.loaded||"RasterTileServer"===this.raster.datasetFormat&&"Raster"===this.raster.tileType}}let ze=class extends((0,I.h)((0,S.M)((0,C.Q)((0,w.q)((0,_.I)(z((0,g.R)(y.Z)))))))){constructor(...e){super(...e),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=(0,n.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).then((()=>this._openRaster(t)),(()=>this._openRaster(t)))),(0,f.resolve)(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get fields(){var e,t;let r=[new v.Z({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const i=null==(e=this.rasterInfo)||null==(t=e.attributeTable)?void 0:t.fields;if(i){const e=i.filter((e=>"oid"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const t=e.clone();return t.name="Raster."+e.name,t}));r=r.concat(e)}return r}set renderer(e){this._set("renderer",e),this.updateRenderer()}readRenderer(e,t,r){const i=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,n=(0,b.ij)(i,r)||void 0;if(null!=n)return n}createPopupTemplate(e){return(0,T.eZ)(this,e)}write(e,t){const{raster:r}=this;if(this.loaded?"RasterTileServer"===r.datasetFormat&&("Raster"===r.tileType||"Map"===r.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t&&t.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new d.Z("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await class{static get supportedFormats(){const e=new Set;return Ae.forEach(((t,r)=>e.add(r))),e}static async open(e){const{url:t,ioConfig:r,sourceJSON:i}=e;let n=e.datasetFormat;null==n&&t.lastIndexOf(".")&&(n=t.slice(t.lastIndexOf(".")+1).toUpperCase()),"OVR"===n||"TIF"===n?n="TIFF":"JPG"!==n&&"JPEG"!==n&&"JFIF"!==n||(n="JPG"),t.toLowerCase().indexOf("/imageserver")>-1&&-1===t.toLowerCase().indexOf("/wcsserver")&&(n="RasterTileServer");const s={url:t,sourceJSON:i,datasetFormat:n,ioConfig:r||{bandIds:null,sampling:null}};let a,o;if(this.supportedFormats.has(n))return a=Ae.get(n).constructor,o=new a(s),await o.open({signal:e.signal}),o;if(n)throw new d.Z("rasterfactory:open","not a supported format "+n);const l=Array.from(Ae.keys());let u=0;const c=function(){return n=l[u++],n?(a=Ae.get(n).constructor,o=new a(s),o.open({signal:e.signal}).then((()=>o)).catch((()=>c()))):null};return c()}static register(e,t,r){Ae.has(e.toUpperCase())||Ae.set(e.toUpperCase(),{desc:t,constructor:r})}}.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:this.ioConfig,signal:e});const{rasterInfo:t}=this.raster;if(!t)throw new d.Z("imagery-tile-layer:load","cannot load resources on "+this.url);this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON&&(this._set("version",this.sourceJSON.currentVersion),this._set("copyright",this.sourceJSON.copyrightText)),null==this.title&&(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings()}};(0,i._)([(0,o.Cb)()],ze.prototype,"ioConfig",void 0),(0,i._)([(0,o.Cb)({type:[a.z8],json:{write:{overridePolicy:Ne}}})],ze.prototype,"bandIds",void 0),(0,i._)([(0,o.Cb)({json:{write:{overridePolicy:Ne}}}),(0,u.J)(Pe)],ze.prototype,"interpolation",void 0),(0,i._)([(0,o.Cb)({json:{write:!0}})],ze.prototype,"multidimensionalDefinition",void 0),(0,i._)([(0,o.Cb)(x.rn)],ze.prototype,"legendEnabled",void 0),(0,i._)([(0,o.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],ze.prototype,"isReference",void 0),(0,i._)([(0,o.Cb)({type:["show","hide"]})],ze.prototype,"listMode",void 0),(0,i._)([(0,o.Cb)()],ze.prototype,"sourceJSON",void 0),(0,i._)([(0,o.Cb)({readOnly:!0})],ze.prototype,"version",void 0),(0,i._)([(0,o.Cb)()],ze.prototype,"title",void 0),(0,i._)([(0,o.Cb)({readOnly:!0,json:{read:!1}})],ze.prototype,"type",void 0),(0,i._)([(0,o.Cb)({type:["ArcGISTiledImageServiceLayer"]})],ze.prototype,"operationalLayerType",void 0),(0,i._)([(0,o.Cb)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy:Ne,writer(e,t,r){t[r]=!e}}}})],ze.prototype,"popupEnabled",void 0),(0,i._)([(0,o.Cb)({type:m.default,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:Ne}}})],ze.prototype,"popupTemplate",void 0),(0,i._)([(0,o.Cb)({readOnly:!0,dependsOn:["title"]})],ze.prototype,"defaultPopupTemplate",null),(0,i._)([(0,o.Cb)({readOnly:!0,type:[v.Z],dependsOn:["rasterInfo"]})],ze.prototype,"fields",null),(0,i._)([(0,o.Cb)({types:b.dr,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:Ne},origins:{"web-scene":{types:b.FK,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],ze.prototype,"renderer",null),(0,i._)([(0,c.r)("renderer")],ze.prototype,"readRenderer",null),ze=(0,i._)([(0,h.j)("esri.layers.ImageryTileLayer")],ze);const je=ze},56700:(e,t,r)=>{"use strict";r.d(t,{Z:()=>w});var i=r(56140),n=(r(95830),r(34926)),s=r(36544),a=(r(68055),r(79881)),o=r(87566),l=r(32656),u=r(10923),c=(r(57002),r(86035),r(73032)),h=r(52937),d=(r(36348),r(35470)),p=r(35326),f=r(54721),m=r(809);let y=0;const g=s.Z.getLogger("esri.layers.Layer");let x=class extends(d.Z.EventedMixin((0,p.I)(m.Z))){constructor(){super(...arguments),this.attributionDataUrl=null,this.fullExtent=new h.Z(-180,-90,180,90,c.Z.WGS84),this.id=Date.now().toString(16)+"-layer-"+y++,this.legendEnabled=!0,this.listMode="show",this.opacity=1,this.parent=null,this.popupEnabled=!0,this.attributionVisible=!0,this.spatialReference=c.Z.WGS84,this.title=null,this.type=null,this.url=null,this.visible=!0}static async fromArcGISServerUrl(e){const t="string"==typeof e?{url:e}:e,i=await r.e(956).then(r.bind(r,50956));try{return await i.fromUrl(t)}catch(e){throw g.error("#fromArcGISServerUrl({ url: '"+t.url+"'})","Failed to create layer from arcgis server url",e),e}}static async fromPortalItem(e){const t="portalItem"in e?e:{portalItem:e},i=await r.e(1204).then(r.bind(r,1204));try{return await i.fromItem(t)}catch(e){const r=t&&t.portalItem,i=r&&r.id||"unset",s=r&&r.portal&&r.portal.url||n.Z.portalUrl;throw g.error("#fromPortalItem()","Failed to create layer from portal item (portal: '"+s+"', id: '"+i+"')",e),e}}initialize(){this.when().catch((e=>{var t,r;s.Z.getLogger(this.declaredClass).error("#load()",`Failed to load layer (title: '${null!=(t=this.title)?t:"no title"}', id: '${null!=(r=this.id)?r:"no id"}')`,{error:e})}))}destroy(){if(this.parent){const e=this,t=this.parent;"layers"in t&&t.layers.includes(e)?t.layers.remove(e):"tables"in t&&t.tables.includes(e)?t.tables.remove(e):"baseLayers"in t&&t.baseLayers.includes(e)?t.baseLayers.remove(e):"baseLayers"in t&&t.referenceLayers.includes(e)&&t.referenceLayers.remove(e)}}get hasAttributionData(){return null!=this.attributionDataUrl}get parsedUrl(){const e=this.url;return e?(0,u.mN)(e):null}async fetchAttributionData(){const e=this.attributionDataUrl;if(this.hasAttributionData&&e)return(await(0,f.default)(e,{query:{f:"json"},responseType:"json"})).data;throw new l.Z("layer:no-attribution-data","Layer does not have attribution data")}};(0,i._)([(0,a.Cb)({type:String})],x.prototype,"attributionDataUrl",void 0),(0,i._)([(0,a.Cb)({type:h.Z})],x.prototype,"fullExtent",void 0),(0,i._)([(0,a.Cb)({readOnly:!0,dependsOn:["attributionDataUrl"]})],x.prototype,"hasAttributionData",null),(0,i._)([(0,a.Cb)({type:String})],x.prototype,"id",void 0),(0,i._)([(0,a.Cb)({type:Boolean,nonNullable:!0})],x.prototype,"legendEnabled",void 0),(0,i._)([(0,a.Cb)({type:["show","hide","hide-children"]})],x.prototype,"listMode",void 0),(0,i._)([(0,a.Cb)({type:Number,range:{min:0,max:1},nonNullable:!0})],x.prototype,"opacity",void 0),(0,i._)([(0,a.Cb)()],x.prototype,"parent",void 0),(0,i._)([(0,a.Cb)({readOnly:!0,dependsOn:["url"]})],x.prototype,"parsedUrl",null),(0,i._)([(0,a.Cb)({type:Boolean})],x.prototype,"popupEnabled",void 0),(0,i._)([(0,a.Cb)({type:Boolean})],x.prototype,"attributionVisible",void 0),(0,i._)([(0,a.Cb)({type:c.Z})],x.prototype,"spatialReference",void 0),(0,i._)([(0,a.Cb)({type:String})],x.prototype,"title",void 0),(0,i._)([(0,a.Cb)({type:String,readOnly:!0,json:{read:!1}})],x.prototype,"type",void 0),(0,i._)([(0,a.Cb)()],x.prototype,"url",void 0),(0,i._)([(0,a.Cb)({type:Boolean,nonNullable:!0})],x.prototype,"visible",void 0),x=(0,i._)([(0,o.j)("esri.layers.Layer")],x);const w=x},57407:(e,t,r)=>{"use strict";r.d(t,{h:()=>a});var i=r(56140),n=(r(95830),r(36544),r(68055),r(79881)),s=r(87566);r(10923),r(57002),r(86035);const a=e=>{let t=class extends e{constructor(){super(...arguments),this.blendMode="normal",this.effect=null}};return(0,i._)([(0,n.Cb)({type:["average","color-burn","color-dodge","color","darken","destination-atop","destination-in","destination-out","destination-over","difference","exclusion","hard-light","hue","invert","lighten","lighter","luminosity","minus","multiply","normal","overlay","plus","reflect","saturation","screen","soft-light","source-atop","source-in","source-out","vivid-light","xor"],nonNullable:!0,json:{read:!1,write:!1,origins:{"web-map":{default:"normal",read:!0,write:!0}}}})],t.prototype,"blendMode",void 0),(0,i._)([(0,n.Cb)()],t.prototype,"effect",void 0),t=(0,i._)([(0,s.j)("esri.layers.mixins.BlendLayer")],t),t}},78910:(e,t,r)=>{"use strict";r.d(t,{q:()=>d});var i=r(56140),n=(r(95830),r(36544),r(68055),r(79881)),s=r(87566),a=r(60538),o=r(32656),l=(r(10923),r(57002),r(86035),r(17771)),u=r(65131);const c={"web-scene/operational-layers":{ArcGISFeatureLayer:!0,ArcGISImageServiceLayer:!0,ArcGISMapServiceLayer:!0,ArcGISSceneServiceLayer:!0,ArcGISTiledElevationServiceLayer:!0,ArcGISTiledImageServiceLayer:!0,ArcGISTiledMapServiceLayer:!0,BuildingSceneLayer:!0,GroupLayer:!0,IntegratedMeshLayer:!0,PointCloudLayer:!0,WebTiledLayer:!0,CSV:!0,VectorTileLayer:!0,WMS:!0,KML:!0,RasterDataLayer:!0},"web-scene/basemap":{ArcGISTiledImageServiceLayer:!0,ArcGISTiledMapServiceLayer:!0,WebTiledLayer:!0,OpenStreetMap:!0,VectorTileLayer:!0,ArcGISImageServiceLayer:!0,WMS:!0,ArcGISMapServiceLayer:!0},"web-scene/ground":{ArcGISTiledElevationServiceLayer:!0,RasterDataElevationLayer:!0},"web-map/operational-layers":{ArcGISImageServiceLayer:!0,ArcGISImageServiceVectorLayer:!0,ArcGISMapServiceLayer:!0,ArcGISStreamLayer:!0,ArcGISTiledImageServiceLayer:!0,ArcGISTiledMapServiceLayer:!0,ArcGISFeatureLayer:!0,BingMapsAerial:!0,BingMapsRoad:!0,BingMapsHybrid:!0,CSV:!0,GeoRSS:!0,GroupLayer:!0,KML:!0,VectorTileLayer:!0,WFS:!0,SubtypeGroupLayer:!0,WMS:!0,WebTiledLayer:!0},"web-map/basemap":{ArcGISImageServiceLayer:!0,ArcGISImageServiceVectorLayer:!0,ArcGISMapServiceLayer:!0,ArcGISTiledImageServiceLayer:!0,ArcGISTiledMapServiceLayer:!0,OpenStreetMap:!0,VectorTileLayer:!0,WMS:!0,WebTiledLayer:!0,BingMapsAerial:!0,BingMapsRoad:!0,BingMapsHybrid:!0},"web-map/tables":{ArcGISFeatureLayer:!0},"portal-item/operational-layers":{ArcGISSceneServiceLayer:!0,PointCloudLayer:!0,BuildingSceneLayer:!0,IntegratedMeshLayer:!0}};var h=r(18152);const d=e=>{let t=class extends e{constructor(){super(...arguments),this.title=null}writeListMode(e,t,r,i){(i&&"ground"===i.layerContainerType||e&&(0,u.df)(this,r,{},i))&&(t[r]=e)}writeOperationalLayerType(e,t,r,i){!e||i&&"tables"===i.layerContainerType||(t.layerType=e)}writeTitle(e,t){t.title=e||"Layer"}read(e,t){t&&(t.layer=this),(0,l.$Z)(this,e,(t=>super.read(e,t)),t)}write(e,t){if(t&&t.origin){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`,r=c[e];let i=r&&r[this.operationalLayerType];if("ArcGISTiledElevationServiceLayer"===this.operationalLayerType&&"web-scene/operational-layers"===e&&(i=!1),!i)return t.messages&&t.messages.push(new o.Z("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this})),null}const r=super.write(e,{...t,layer:this}),i=!!t&&!!t.messages&&!!t.messages.filter((e=>e instanceof o.Z&&"web-document-write:property-required"===e.name)).length;return!this.url&&i?null:r}beforeSave(){}};return(0,i._)([(0,n.Cb)({type:String,json:{write:{ignoreOrigin:!0},origins:{"web-scene":{write:{isRequired:!0,ignoreOrigin:!0}},"portal-item":{write:!1}}}})],t.prototype,"id",void 0),(0,i._)([(0,n.Cb)({json:{write:{ignoreOrigin:!0},origins:{"web-map":{read:!1,write:!1}}}})],t.prototype,"listMode",void 0),(0,i._)([(0,a.c)("listMode")],t.prototype,"writeListMode",null),(0,i._)([(0,n.Cb)({type:String,readOnly:!0,json:{read:!1,write:{target:"layerType",ignoreOrigin:!0},origins:{"portal-item":{write:!1}}}})],t.prototype,"operationalLayerType",void 0),(0,i._)([(0,a.c)("operationalLayerType")],t.prototype,"writeOperationalLayerType",null),(0,i._)([(0,n.Cb)(h.Oh)],t.prototype,"opacity",void 0),(0,i._)([(0,n.Cb)({type:String,json:{write:{ignoreOrigin:!0,allowNull:!0},origins:{"web-scene":{write:{isRequired:!0,ignoreOrigin:!0,allowNull:!0}},"portal-item":{write:!1}}},value:"Layer"})],t.prototype,"title",void 0),(0,i._)([(0,a.c)("title")],t.prototype,"writeTitle",null),(0,i._)([(0,n.Cb)({type:Boolean,json:{name:"visibility",origins:{"web-document":{name:"visibility",default:!0},"portal-item":{name:"visibility",read:{source:["visible","visibility"]}}}}})],t.prototype,"visible",void 0),t=(0,i._)([(0,s.j)("esri.layers.mixins.OperationalLayer")],t),t}},2194:(e,t,r)=>{"use strict";r.d(t,{Q:()=>a});var i=r(56140),n=(r(95830),r(36544),r(68055),r(79881)),s=r(87566);r(10923),r(57002),r(86035);const a=e=>{let t=class extends e{constructor(){super(...arguments),this.refreshInterval=0}refresh(){this.emit("refresh")}};return(0,i._)([(0,n.Cb)({type:Number,cast:e=>e>=.1?e:e<=0?0:.1,json:{write:!0,origins:{"web-document":{write:!0}}}})],t.prototype,"refreshInterval",void 0),t=(0,i._)([(0,s.j)("esri.layers.mixins.RefreshableLayer")],t),t}},10113:(e,t,r)=>{"use strict";r.d(t,{M:()=>a});var i=r(56140),n=(r(95830),r(36544),r(68055),r(79881)),s=r(87566);r(10923),r(57002),r(86035);const a=e=>{let t=class extends e{constructor(){super(...arguments),this.minScale=0,this.maxScale=0}get scaleRangeId(){return`${this.minScale},${this.maxScale}`}};return(0,i._)([(0,n.Cb)({type:Number,nonNullable:!0,json:{write:!0}})],t.prototype,"minScale",void 0),(0,i._)([(0,n.Cb)({type:Number,nonNullable:!0,json:{write:!0}})],t.prototype,"maxScale",void 0),(0,i._)([(0,n.Cb)({readOnly:!0,dependsOn:["minScale","maxScale"]})],t.prototype,"scaleRangeId",null),t=(0,i._)([(0,s.j)("esri.layers.mixins.ScaleRangeLayer")],t),t}},18152:(e,t,r)=>{"use strict";r.d(t,{qG:()=>x,PV:()=>f,iR:()=>h,rn:()=>p,Oh:()=>y,bT:()=>g,C_:()=>c,Lx:()=>m,YI:()=>u,HQ:()=>d});var i=r(65575),n=r(37704),s=r(65131),a=r(3277),o=r(87864),l=r(79710);const u={type:Boolean,value:!0,json:{origins:{"web-scene":{read:{source:["id","url","layerType"],reader(e,t){if(null!=t.screenSizePerspective||"defaults"!==this.originOf("screenSizePerspectiveEnabled"))return t.screenSizePerspective;(0,i.vw)(this).store.set("screenSizePerspectiveEnabled",!1,0)}},write:{ignoreOrigin:!0,target:"screenSizePerspective",writer(e,t,r,i){("defaults"===this.originOf("screenSizePerspectiveEnabled")&&e||(0,s.df)(this,"screenSizePerspectiveEnabled",{},i))&&(t[r]=e)}}}}}},c={type:Boolean,value:!0,json:{name:"disablePopup",read:{reader:(e,t)=>!t.disablePopup},write:{enabled:!0,writer(e,t,r){t[r]=!e}}}},h={type:Boolean,value:!0,json:{name:"showLabels",write:!0}},d={type:String,json:{origins:{"portal-item":{write:!1}},write:{isRequired:!0,ignoreOrigin:!0,writer:n.w}}},p={type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},name:"showLegend",write:!0}},f={value:null,type:l.Z,json:{origins:{service:{name:"elevationInfo",write:!0}},name:"layerDefinition.elevationInfo",write:!0}};function m(e){return{type:e,readOnly:!0,json:{origins:{service:{read:!0}},read:!1}}}const y={type:Number,json:{origins:{"web-document":{default:1,write:!0,read:!0},"portal-item":{write:!0}}}},g={...y,json:{...y.json,origins:{"web-document":{...y.json.origins["web-document"],write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}}}},read:{source:["layerDefinition.drawingInfo.transparency","drawingInfo.transparency"],reader:(e,t,r)=>r&&"service"!==r.origin||!t.drawingInfo||void 0===t.drawingInfo.transparency?t.layerDefinition&&t.layerDefinition.drawingInfo&&void 0!==t.layerDefinition.drawingInfo.transparency?(0,a.b)(t.layerDefinition.drawingInfo.transparency):void 0:(0,a.b)(t.drawingInfo.transparency)}}},x={type:o.Z,dependsOn:["view.timeExtent","layer.timeExtent","layer.timeInfo","layer.timeOffset","layer.timeOffset.value","layer.timeOffset.unit","layer.useViewTime"],readOnly:!0,get(){var e,t;if(null==(e=this.layer)||!e.timeInfo)return null;const r=null==(t=this.view)?void 0:t.timeExtent,i=this.layer.timeExtent,n=this.layer.useViewTime?r&&i?r.intersection(i):r||i:i;if(!n||n.isEmpty)return n;const s=this.layer.timeOffset,a=s?n.offset(-s.value,s.unit):n,o=this._get("timeExtent");return a.equals(o)?o:a}}},53585:(e,t,r)=>{"use strict";r.d(t,{OE:()=>h,Gc:()=>f,Qg:()=>d,Rq:()=>l,gX:()=>p,z2:()=>u,ET:()=>c,Vx:()=>m});var i=r(59472),n=r(61106);r(36348);var s=r(52606);const a=new Map,o=new class{constructor(e=15e3,t=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,t)}decreaseRefCount(e,t){const r=e+"/"+t,i=this._cachedBlocks;if(i.has(r)){const e=i.get(r);return e.refCount--,e.refCount<=0&&(i.delete(r),e.controller&&e.controller.abort()),e.refCount}return 0}getBlock(e,t){const r=e+"/"+t,i=this._cachedBlocks;if(i.has(r)){const e=i.get(r);return e.ts=Date.now(),e.refCount++,i.delete(r),i.set(r,e),e.block}return null}putBlock(e,t,r,i=null){const n=this._cachedBlocks,s=e+"/"+t;if(n.has(s)){const e=n.get(s);e.ts=Date.now(),e.refCount++}else n.set(s,{block:r,ts:Date.now(),refCount:1,controller:i});this.trim(),this.updateTimer()}deleteBlock(e,t){const r=this._cachedBlocks,i=e+"/"+t;r.has(i)&&r.delete(i)}updateMaxSize(e){this._size=e,this.trim()}empty(){this._cachedBlocks.clear(),this.clearTimer()}getCurrentSize(){return this._cachedBlocks.size}updateTimer(){if(null!=this._timer)return;const e=this._cachedBlocks;this._timer=setInterval((()=>{const t=Array.from(e),r=Date.now();for(let i=0;i<t.length&&t[i][1].ts<=r-this._duration;i++)e.delete(t[i][0]);0===e.size&&this.clearTimer()}),this._interval)}trim(){const e=this._cachedBlocks;if(-1===this._size||this._size>=e.size)return;const t=Array.from(e);for(let r=0;r<t.length-this._size;r++)e.delete(t[r][0])}clearTimer(){null!=this._timer&&(clearInterval(this._timer),this._timer=null)}};function l(e,t){return null==t?e:`${e}?sliceId=${t}`}function u(e,t){const r={extent:null,rasterInfo:t,cache:new Map};if(a.has(e)){const t=a.get(e);return t.push(r),t.length-1}return a.set(e,[r]),0}function c(e,t){a.has(e)&&(a.get(e)[t]=null)}function h(e,t,r){if(!a.has(e))return null==t?o.decreaseRefCount(e,r):0;const i=a.get(e);if(null==i[t])return o.decreaseRefCount(e,r);const n=i[t].cache;if(n.has(r)){const e=n.get(r);if(e.refCount--,0===e.refCount){n.delete(r);for(let e=0;e<i.length;e++)i[e]&&i[e].cache.has(r)&&i[e].cache.delete(r);e.controller&&e.controller.abort()}return e.refCount}return 0}function d(e,t,r){if(!a.has(e))return null==t?o.getBlock(e,r):null;const i=a.get(e);if(null==i[t]){for(let e=0;e<i.length;e++)if(i[e]&&i[e].cache.has(r)){const t=i[e].cache.get(r);return t.refCount++,t.block}return o.getBlock(e,r)}const n=i[t].cache;if(n.has(r)){const e=n.get(r);return e.refCount++,e.block}for(let e=0;e<i.length;e++)if(e!==t&&i[e]&&i[e]&&i[e].cache.has(r)){const t=i[e].cache.get(r);return t.refCount++,n.set(r,t),t.block}return null}function p(e,t,r,i,n=null){if(!a.has(e))return void(null==t&&o.putBlock(e,r,i,n));const s=a.get(e);if(null==s[t])return void o.putBlock(e,r,i,n);const l={refCount:1,block:i,isResolved:!1,isRejected:!1,controller:n};i.then((()=>l.isResolved=!0)).catch((()=>l.isRejected=!0)),s[t].cache.set(r,l)}function f(e,t,r){if(!a.has(e))return void(null==t&&o.deleteBlock(e,r));const i=a.get(e);null!=i[t]?i[t].cache.delete(r):o.deleteBlock(e,r)}function m(e,t,r,o,l,u,c=null){const h=function(e,t){if(!a.has(e))return null;const r=a.get(e);return null==r[t]?null:r[t]}(e,t),d=h.extent,{cache:p,rasterInfo:f}=h;if(d&&d.xmin===r.xmin&&d.xmax===r.xmax&&d.ymin===r.ymin&&d.ymax===r.ymax)return;const m=r.clone().normalize(),{spatialReference:y,transform:g}=f,x=new Set;for(let e=0;e<m.length;e++){const t=m[e];if(t.xmax-t.xmin<=o||t.ymax-t.ymin<=o)continue;let r=(0,s.tB)(t,y,c);(0,i.pC)(g)&&(r=g.inverseTransform(r));const a=new n.Z({x:o,y:o,spatialReference:t.spatialReference});if(null===l&&!(l=(0,s.VO)(a,y,t,c)))return;const{pyramidLevel:h,pyramidResolution:d,excessiveReading:p}=(0,s.kr)(l,f,u||"closest");if(p)return;const{storageInfo:w}=f,{origin:b}=w,v={x:Math.max(0,Math.floor((r.xmin-b.x)/d.x)),y:Math.max(0,Math.floor((b.y-r.ymax)/d.y))},I=Math.ceil((r.xmax-r.xmin)/d.x-.1),_=Math.ceil((r.ymax-r.ymin)/d.y-.1),C=h>0?w.pyramidBlockWidth:w.blockWidth,S=h>0?w.pyramidBlockHeight:w.blockHeight,T=1,M=Math.max(0,Math.floor(v.x/C)-T),R=Math.max(0,Math.floor(v.y/S)-T),k=Math.floor((v.x+I-1)/C)+T,D=Math.floor((v.y+_-1)/S)+T;for(let e=R;e<=D;e++)for(let t=M;t<=k;t++)x.add(`${h}/${e}/${t}`)}p.forEach(((e,t)=>{if(!x.has(t)){const e=p.get(t);(null==e||e.isResolved||e.isRejected)&&p.delete(t)}})),h.extent={xmin:r.xmin,ymin:r.ymin,xmax:r.xmax,ymax:r.ymax}}},52606:(e,t,r)=>{"use strict";r.d(t,{vF:()=>x,Qp:()=>y,zD:()=>h,tB:()=>m,nF:()=>f,VO:()=>d,kr:()=>g});var i=r(32656),n=r(27780),s=r(41241),a=r(61106),o=r(52937),l=(r(36348),r(93533)),u=r(17333);const c=function(e,t){const r=(e.isWGS84||e.isWebMercator)&&(t.isWGS84||t.isWebMercator);return!(e.equals(t)||r)};async function h(){if((0,u.kR)()||!(0,u.Gb)())return null;await(0,u.zD)()}function d(e,t,r,n=null){if(e.spatialReference.equals(t))return e;const a=c(e.spatialReference,t);if(a&&!(0,u.kR)())throw new i.Z("rasterprojectionhelper-projectResolution","projection engine is not loaded");const l=r.center,h=new o.Z({xmin:l.x-e.x/2,xmax:l.x+e.x/2,ymin:l.y-e.y/2,ymax:l.y+e.y/2,spatialReference:e.spatialReference}),d=a?(0,u.iV)(h,t,n):(0,s.iV)(h,t);return null==d?null:{x:d.xmax-d.xmin,y:d.ymax-d.ymin}}function p(e,t=.01){return(0,l.c9)(e)?t/(0,l.c9)(e):0}function f(e,t,r=null,a=!0){const o=e.spatialReference;if(o.equals(t))return e;const l=c(o,t);if(l&&!(0,u.kR)())throw new i.Z("rasterprojectionhelper-projectResolution","projection engine is not loaded");const h=l?(0,u.iV)(e,t,r):(0,s.iV)(e,t);if(h&&a&&t.isGeographic){var d,f;const[t,r]=o.isWebMercator?(0,n.C5)(o).origin:null!=(d=null==(f=(0,n.C5)(o))?void 0:f.valid)?d:[],i=p(o);i&&null!=t&&null!=r&&(Math.abs(e.x-t)<i&&Math.abs(180-h.x)<5e-4?h.x-=360:Math.abs(e.x-r)<i&&Math.abs(180+h.x)<5e-4&&(h.x+=360))}return h}function m(e,t,r=null,o=!0){var l,h,d,m;const y=e.spatialReference;if(y.equals(t))return e;const g=c(y,t);if(g&&!(0,u.kR)())throw new i.Z("rasterprojectionhelper-projectExtent","projection engine is not loaded");const x=g?(0,u.iV)(e,t,r):(0,s.iV)(e,t);let[w,b]=null!=(l=null==(h=(0,n.C5)(y))?void 0:h.origin)?l:[];if(x&&o&&y.isWebMercator&&t.isGeographic&&null!=w&&null!=b){const i=.001,n=1e3;if(Math.abs(e.xmin-w)<i&&Math.abs(b-e.xmax)>n&&Math.abs(180-x.xmax)<5e-4){x.xmin=-180;const i=[];i.push(new a.Z(e.xmax,e.ymin,y)),i.push(new a.Z(e.xmax,(e.ymin+e.ymax)/2,y)),i.push(new a.Z(e.xmax,e.ymax,y));const n=i.map((e=>f(e,t,r))).filter((e=>!isNaN(null==e?void 0:e.x))).map((e=>e.x));x.xmax=Math.max.apply(null,n)}if(Math.abs(e.xmax-b)<i&&Math.abs(w-e.xmin)>n&&Math.abs(180+x.xmin)<5e-4){x.xmax=180;const i=[];i.push(new a.Z(e.xmin,e.ymin,y)),i.push(new a.Z(e.xmin,(e.ymin+e.ymax)/2,y)),i.push(new a.Z(e.xmin,e.ymax,y));const n=i.map((e=>f(e,t,r))).filter((e=>!isNaN(null==e?void 0:e.x))).map((e=>e.x));x.xmin=Math.min.apply(null,n)}}[w,b]=t.isWebMercator?(0,n.C5)(t).origin:null!=(d=null==(m=(0,n.C5)(t))?void 0:m.valid)?d:[];const v=p(t);return v&&null!=w&&null!=b&&(Math.abs(x.xmin-w)<v&&(x.xmin=w),Math.abs(x.xmax-b)<v&&(x.xmax=b)),x}function y(e,t,r,s=null,o=null,l=!1,h=[32,32]){var d,p;if(c(e.spatialReference,t.spatialReference)&&!(0,u.kR)())throw new i.Z("rasterprojectionhelper-projectResolution","projection engine is not loaded");if(!(e&&t&&r))return null;const{xmin:m,ymin:y,xmax:g,ymax:x}=e,w=e.spatialReference,b=t.spatialReference,[v,I]=null!=(d=null==(p=(0,n.C5)(w))?void 0:p.valid)?d:[],_={x:h[0]*r.x,y:h[1]*r.y},C={cols:Math.ceil((g-m)/_.x-.1)+1,rows:Math.ceil((x-y)/_.y-.1)+1},S=_.x,T=_.y,M=[];let R,k=!1;for(let e=0;e<C.cols;e++){const r=[];for(let i=0;i<C.rows;i++){let n=f(new a.Z({x:m+S*e,y:x-T*i,spatialReference:w}),b,s);o&&(n=o.inverseTransform(n)),r.push(n),e>0&&l&&n&&R[i]&&null!=v&&n.x<R[i].x&&(n.x+=I-v),n?(M.push((n.x-t.xmin)/(t.xmax-t.xmin)),M.push((t.ymax-n.y)/(t.ymax-t.ymin))):(M.push(NaN),M.push(NaN),k=!0)}R=r}const D=function(e,t){const r=(e[0]+e[4]+e[4*t.cols]+e[4*t.cols+4])/4,i=(e[1]+e[5]+e[4*t.rows+1]+e[4*t.rows+5])/4;return[Math.abs(r-e[2*t.rows+2]),Math.abs(i-e[2*t.rows+3])]}(M,C),L=new Float32Array((C.cols-1)*(C.rows-1)*2*6),F=new Float32Array([-0,-1,1,-1,1,-0,1,-0,-0]),O=new Float32Array([-1,1,0,0,-1,1,1,0,0]);for(let e=0;e<C.cols-1;e++){for(let t=0;t<C.rows-1;t++){let r=e*C.rows*2+2*t;const i=M[r],n=M[r+1],s=M[r+2],a=M[r+3];r+=2*C.rows;const o=M[r],l=M[r+1],u=M[r+2],c=M[r+3];let h=0,d=12*(t*(C.cols-1)+e);for(let e=0;e<3;e++)L[d++]=F[h++]*i+F[h++]*s+F[h++]*u;h=0;for(let e=0;e<3;e++)L[d++]=F[h++]*n+F[h++]*a+F[h++]*c;h=0;for(let e=0;e<3;e++)L[d++]=O[h++]*i+O[h++]*o+O[h++]*u;h=0;for(let e=0;e<3;e++)L[d++]=O[h++]*n+O[h++]*l+O[h++]*c}if(k)for(let e=0;e<L.length;e++)isNaN(L[e])&&(L[e]=-1)}return{offsets:M,error:D,coefficients:L,spacing:h,size:[C.cols-1,C.rows-1]}}function g(e,t,r){const i=Math.log(e.x/t.pixelSize.x)/Math.LN2,n=Math.log(e.y/t.pixelSize.y)/Math.LN2,s=t.storageInfo.maximumPyramidLevel||0;let o="down"===r?Math.floor(Math.min(i,n)):"up"===r?Math.ceil(Math.max(i,n)):Math.round((i+n)/2),l=!1;o<0?o=0:o>s&&(l=o>s+3,o=s);const u=Math.pow(2,o);return{pyramidLevel:o,pyramidResolution:new a.Z({x:u*t.nativePixelSize.x,y:u*t.nativePixelSize.y,spatialReference:t.spatialReference}),excessiveReading:l}}function x(e,t,r=512,i=!0){const{extent:n,spatialReference:s,pixelSize:o}=e,u=d(new a.Z({x:o.x,y:o.y,spatialReference:s}),t,n);if(null==u)return{projectedPixelSize:null,scales:null,srcResolutions:null};const c=(u.x+u.y)/2,h=(0,l.c9)(t),p=c*h*96*39.37,f=t.isGeographic?512/r*295828763.7958547:512/r*591657527.591555;let y=!1;if(i&&(t.isGeographic||t.isWebMercator)){const e=m(n,t);y=e.xmin*e.xmax<0}let g,x=p;if(y){x=f;const e=x/(96*h*39.37);g=d(new a.Z({x:e,y:e,spatialReference:t}),s,n)}else{g={x:o.x,y:o.y};const t=Math.ceil(Math.log(Math.min(e.width,e.height)/32)/Math.LN2);let r=0;for(;x<.5005*f&&r<t;)r++,x*=2,g.x*=2,g.y*=2;Math.max(x,f)/Math.min(x,f)<=1.001&&(x=f)}const w=[],b=[],v=Math.min(70.5310735,p)/1.001;for(;x>=v;)w.push(x),b.push({x:g.x,y:g.y}),x/=2,g.x/=2,g.y/=2;return{projectedPixelSize:u,scales:w,srcResolutions:b}}},98034:(e,t,r)=>{"use strict";r.d(t,{HA:()=>n,fM:()=>l,Nm:()=>o,vU:()=>a,JE:()=>u});r(95830);var i=r(56274);function n(e){return e}const s={milliseconds:{getter:"getMilliseconds",setter:"setMilliseconds",multiplier:1},seconds:{getter:"getSeconds",setter:"setSeconds",multiplier:1},minutes:{getter:"getMinutes",setter:"setMinutes",multiplier:1},hours:{getter:"getHours",setter:"setHours",multiplier:1},days:{getter:"getDate",setter:"setDate",multiplier:1},weeks:{getter:"getDate",setter:"setDate",multiplier:7},months:{getter:"getMonth",setter:"setMonth",multiplier:1},years:{getter:"getFullYear",setter:"setFullYear",multiplier:1},decades:{getter:"getFullYear",setter:"setFullYear",multiplier:10},centuries:{getter:"getFullYear",setter:"setFullYear",multiplier:100}},a=(0,i.wY)()({esriTimeUnitsMilliseconds:"milliseconds",esriTimeUnitsSeconds:"seconds",esriTimeUnitsMinutes:"minutes",esriTimeUnitsHours:"hours",esriTimeUnitsDays:"days",esriTimeUnitsWeeks:"weeks",esriTimeUnitsMonths:"months",esriTimeUnitsYears:"years",esriTimeUnitsDecades:"decades",esriTimeUnitsCenturies:"centuries",esriTimeUnitsUnknown:null});function o(e,t,r){const i=new Date(e.getTime());if(t&&r){const e=s[r],{getter:n,setter:a,multiplier:o}=e;i[a](i[n]()+t*o)}return i}const l={milliseconds:1,seconds:1e3,minutes:6e4,hours:36e5,days:864e5,weeks:6048e5,months:26784e5,years:31536e6,decades:31536e7,centuries:31536e8};function u(e,t){switch(t){case"milliseconds":return new Date(e.getTime());case"seconds":return new Date(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours(),e.getMinutes(),e.getSeconds());case"minutes":return new Date(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours(),e.getMinutes());case"hours":return new Date(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours());case"days":return new Date(e.getFullYear(),e.getMonth(),e.getDate());case"weeks":return new Date(e.getFullYear(),e.getMonth(),e.getDate()-e.getDay());case"months":return new Date(e.getFullYear(),e.getMonth(),1);case"years":return new Date(e.getFullYear(),0,1);case"decades":return new Date(e.getFullYear()-e.getFullYear()%10,0,1);case"centuries":return new Date(e.getFullYear()-e.getFullYear()%100,0,1);default:return null}}},79710:(e,t,r)=>{"use strict";r.d(t,{Z:()=>b});var i,n=r(56140),s=(r(95830),r(59472)),a=(r(36544),r(68055),r(79881)),o=r(56274),l=r(30590),u=r(87566),c=r(60538),h=(r(10923),r(57002),r(86035),r(58385)),d=r(4665);let p=i=class extends h.wq{async collectRequiredFields(e,t){return(0,d.io)(e,t,this.expression)}clone(){return new i({expression:this.expression,title:this.title})}};(0,n._)([(0,a.Cb)({type:String,json:{write:!0}})],p.prototype,"expression",void 0),(0,n._)([(0,a.Cb)({type:String,json:{write:!0}})],p.prototype,"title",void 0),p=i=(0,n._)([(0,u.j)("esri.layers.support.FeatureExpressionInfo")],p);const f=p;var m,y=r(98160);const g=(0,o.wY)()({onTheGround:"on-the-ground",relativeToGround:"relative-to-ground",relativeToScene:"relative-to-scene",absoluteHeight:"absolute-height"}),x=new o.Xn({foot:"feet",kilometer:"kilometers",meter:"meters",mile:"miles","us-foot":"us-feet",yard:"yards"});let w=m=class extends h.wq{constructor(){super(...arguments),this.offset=null}readFeatureExpressionInfo(e,t){return null!=e?e:t.featureExpression&&0===t.featureExpression.value?{expression:"0"}:void 0}writeFeatureExpressionInfo(e,t,r,i){t[r]=e.write(null,i),"0"===e.expression&&(t.featureExpression={value:0})}get mode(){return this._isOverridden("mode")?this._get("mode"):(0,s.pC)(this.offset)||this.featureExpressionInfo?"relative-to-ground":"on-the-ground"}set mode(e){this._override("mode",e)}set unit(e){this._set("unit",e)}write(e,t){return this.offset||this.mode||this.featureExpressionInfo||this.unit?super.write(e,t):null}clone(){return new m({mode:this.mode,offset:this.offset,featureExpressionInfo:this.featureExpressionInfo?this.featureExpressionInfo.clone():void 0,unit:this.unit})}};(0,n._)([(0,a.Cb)({type:f,json:{write:!0}})],w.prototype,"featureExpressionInfo",void 0),(0,n._)([(0,l.r)("featureExpressionInfo",["featureExpressionInfo","featureExpression"])],w.prototype,"readFeatureExpressionInfo",null),(0,n._)([(0,c.c)("featureExpressionInfo",{featureExpressionInfo:{type:f},"featureExpression.value":{type:[0]}})],w.prototype,"writeFeatureExpressionInfo",null),(0,n._)([(0,a.Cb)({type:g.apiValues,dependsOn:["offset","featureExpressionInfo"],nonNullable:!0,json:{type:g.jsonValues,read:g.read,write:{writer:g.write,isRequired:!0}}})],w.prototype,"mode",null),(0,n._)([(0,a.Cb)({type:Number,json:{write:!0}})],w.prototype,"offset",void 0),(0,n._)([(0,a.Cb)({type:y.f9,json:{type:String,read:x.read,write:x.write}})],w.prototype,"unit",null),w=m=(0,n._)([(0,u.j)("esri.layers.support.ElevationInfo")],w);const b=w},98160:(e,t,r)=>{"use strict";r.d(t,{Z7:()=>s,f9:()=>a,lt:()=>n});var i=r(2961);function n(e){return null!=i.a[e]}function s(e){return 1/(i.a[e]||1)}const a=function(){const e=Object.keys(i.a);return e.sort(),e}()}}]);
//# sourceMappingURL=9076.js.map