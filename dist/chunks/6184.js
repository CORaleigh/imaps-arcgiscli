(self.webpackChunkimaps=self.webpackChunkimaps||[]).push([[6184],{66184:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>T});var s,l=r(56140),o=(r(95830),r(59472)),i=(r(36544),r(68055)),n=r(79881),a=r(30590),u=r(87566),y=r(60538),p=r(10923),f=(r(57002),r(86035),r(39105)),h=r(73032),d=r(52937),c=(r(36348),r(83477)),b=r(78452),m=r(56700),v=r(43072),g=r(18152),S=r(78910),_=r(57407),C=r(33716),w=r(2194),E=r(10113),k=r(14279),x=r(60263),O=r(58385),I=r(35470),G=r(809),L=r(80621);let P=s=class extends(I.Z.EventedMixin((0,O.eC)(G.Z))){constructor(){super(...arguments),this._sublayersHandles=null,this.description=null,this.id=null,this.networkLink=null,this.title=null,this.sourceJSON=null,this.fullExtent=null}initialize(){(0,L.whenOnce)(this,"networkLink").then((()=>(0,L.whenTrueOnce)(this,"visible"))).then((()=>this.load()))}load(e){if(!this.networkLink)return;const t=(0,o.pC)(e)?e.signal:null,r=this._fetchService(this._get("networkLink").href,t).then((e=>{const t=(0,k.lm)(e.sublayers);this.fullExtent=d.Z.fromJSON(t),this.sourceJSON=e;const r=(0,i.se)(c.Z.ofType(s),(0,k.j5)(s,e));this.sublayers?this.sublayers.addMany(r):this.sublayers=r,this.layer.emit("sublayer-update"),this.layer&&this.layer.notifyChange("visibleSublayers")}));return this.addResolvingPromise(r),(0,f.resolve)(this)}set sublayers(e){const t=this._get("sublayers");t&&(t.forEach((e=>{e.parent=null,e.layer=null})),this._sublayersHandles.forEach((e=>e.remove())),this._sublayersHandles=null),e&&(e.forEach((e=>{e.parent=this,e.layer=this.layer})),this._sublayersHandles=[e.on("after-add",(({item:e})=>{e.parent=this,e.layer=this.layer})),e.on("after-remove",(({item:e})=>{e.parent=null,e.layer=null}))]),this._set("sublayers",e)}castSublayers(e){return(0,i.se)(c.Z.ofType(s),e)}get visible(){return this._get("visible")}set visible(e){this._get("visible")!==e&&(this._set("visible",e),this.layer&&this.layer.notifyChange("visibleSublayers"))}readVisible(e,t){return!!t.visibility}set layer(e){this._set("layer",e),this.sublayers&&this.sublayers.forEach((t=>t.layer=e))}_fetchService(e,t){return(0,k.CS)(e,this.layer.outSpatialReference,this.layer.refreshInterval,t).then((e=>(0,k.Cw)(e.data)))}};(0,l._)([(0,n.Cb)()],P.prototype,"description",void 0),(0,l._)([(0,n.Cb)()],P.prototype,"id",void 0),(0,l._)([(0,n.Cb)({readOnly:!0,value:null})],P.prototype,"networkLink",void 0),(0,l._)([(0,n.Cb)({json:{write:{allowNull:!0}}})],P.prototype,"parent",void 0),(0,l._)([(0,n.Cb)({value:null,json:{write:{allowNull:!0}}})],P.prototype,"sublayers",null),(0,l._)([(0,x.p)("sublayers")],P.prototype,"castSublayers",null),(0,l._)([(0,n.Cb)({value:null,json:{read:{source:"name"}}})],P.prototype,"title",void 0),(0,l._)([(0,n.Cb)({value:!0})],P.prototype,"visible",null),(0,l._)([(0,a.r)("visible",["visibility"])],P.prototype,"readVisible",null),(0,l._)([(0,n.Cb)()],P.prototype,"sourceJSON",void 0),(0,l._)([(0,n.Cb)({value:null})],P.prototype,"layer",null),(0,l._)([(0,n.Cb)({type:d.Z})],P.prototype,"fullExtent",void 0),P=s=(0,l._)([(0,u.j)("esri.layers.support.KMLSublayer")],P);const F=P,M=["kml","xml"];let j=class extends((0,_.h)((0,w.Q)((0,E.M)((0,S.q)((0,C.I)((0,v.R)(m.Z))))))){constructor(...e){super(...e),this._visibleFolders=[],this.allSublayers=new b.Z({root:this,rootCollectionNames:["sublayers"],getChildrenFunction:e=>e.sublayers}),this.outSpatialReference=h.Z.WGS84,this.path=null,this.legendEnabled=!1,this.operationalLayerType="KML",this.sublayers=null,this.type="kml",this.url=null}initialize(){this.watch("sublayers",((e,t)=>{t&&t.forEach((e=>{e.parent=null,e.layer=null})),e&&e.forEach((e=>{e.parent=this,e.layer=this}))}),!0),this.on("sublayer-update",(()=>this.notifyChange("fullExtent")))}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}readSublayersFromItemOrWebMap(e,t){this._visibleFolders=t.visibleFolders}readSublayers(e,t,r){return(0,k.j5)(F,t,r,this._visibleFolders)}writeSublayers(e,t){const r=[],s=e.toArray();for(;s.length;){const e=s[0];e.networkLink||(e.visible&&r.push(e.id),e.sublayers&&s.push(...e.sublayers.toArray())),s.shift()}t.visibleFolders=r}get title(){const e=this._get("title");return e&&"defaults"!==this.originOf("title")?e:this.url?(0,p.vt)(this.url,M)||"KML":e||""}set title(e){this._set("title",e)}get visibleSublayers(){const e=this.sublayers,t=[],r=e=>{e.visible&&(t.push(e),e.sublayers&&e.sublayers.forEach(r))};return e&&e.forEach(r),t}get fullExtent(){return this._recomputeFullExtent()}load(e){const t=(0,o.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["KML"]},e).then((()=>this._fetchService(t)))),(0,f.resolve)(this)}async _fetchService(e){const t=await(0,f.resolve)().then((()=>this.resourceInfo?{ssl:!1,data:this.resourceInfo}:(0,k.CS)(this.url,this.outSpatialReference,this.refreshInterval,e))),r=(0,k.Cw)(t.data);r&&this.read(r,{origin:"service"})}_recomputeFullExtent(){let e=null;this.extent&&(e=this.extent.clone());const t=r=>{if(r.sublayers)for(const s of r.sublayers.items)t(s),s.visible&&s.fullExtent&&(e?e.union(s.fullExtent):e=s.fullExtent.clone())};return t(this),e}};(0,l._)([(0,n.Cb)({readOnly:!0})],j.prototype,"allSublayers",void 0),(0,l._)([(0,n.Cb)({type:h.Z})],j.prototype,"outSpatialReference",void 0),(0,l._)([(0,n.Cb)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],j.prototype,"path",void 0),(0,l._)([(0,n.Cb)({readOnly:!0,json:{read:!1,write:!1}})],j.prototype,"legendEnabled",void 0),(0,l._)([(0,n.Cb)({type:["show","hide","hide-children"]})],j.prototype,"listMode",void 0),(0,l._)([(0,n.Cb)({type:["KML"]})],j.prototype,"operationalLayerType",void 0),(0,l._)([(0,n.Cb)({type:c.Z.ofType(F),json:{write:{ignoreOrigin:!0}}})],j.prototype,"sublayers",void 0),(0,l._)([(0,a.r)(["web-map","portal-item"],"sublayers",["visibleFolders"])],j.prototype,"readSublayersFromItemOrWebMap",null),(0,l._)([(0,a.r)("service","sublayers",["sublayers"])],j.prototype,"readSublayers",null),(0,l._)([(0,y.c)("sublayers")],j.prototype,"writeSublayers",null),(0,l._)([(0,n.Cb)({readOnly:!0,json:{read:!1}})],j.prototype,"type",void 0),(0,l._)([(0,n.Cb)({json:{origins:{"web-map":{read:{source:"title"}}},write:{ignoreOrigin:!0}},dependsOn:["url","parsedUrl"]})],j.prototype,"title",null),(0,l._)([(0,n.Cb)(g.HQ)],j.prototype,"url",void 0),(0,l._)([(0,n.Cb)({readOnly:!0,dependsOn:["sublayers"]})],j.prototype,"visibleSublayers",null),(0,l._)([(0,n.Cb)({type:d.Z})],j.prototype,"extent",void 0),(0,l._)([(0,n.Cb)({dependsOn:["extent"]})],j.prototype,"fullExtent",null),j=(0,l._)([(0,u.j)("esri.layers.KMLLayer")],j);const T=j},14279:(e,t,r)=>{"use strict";r.d(t,{lm:()=>S,CS:()=>b,Yu:()=>g,Cw:()=>c,j5:()=>m});var s=r(82550),l=r(34926),o=r(10923),i=r(73032),n=r(6513),a=r(58484),u=r(23838),y=r(54721),p=r(142),f=r(76194),h=r(69996);const d={esriGeometryPoint:"points",esriGeometryPolyline:"polylines",esriGeometryPolygon:"polygons"};function c(e){const t=e.folders||[],r=t.slice(),l=new Map,o=new Map,i=new Map,n=new Map,a=new Map,u={esriGeometryPoint:o,esriGeometryPolyline:i,esriGeometryPolygon:n};(e.featureCollection&&e.featureCollection.layers||[]).forEach((e=>{const t=(0,s.d9)(e);t.featureSet.features=[];const r=e.featureSet.geometryType;l.set(r,t);const a=e.layerDefinition.objectIdField;"esriGeometryPoint"===r?v(o,a,e.featureSet.features):"esriGeometryPolyline"===r?v(i,a,e.featureSet.features):"esriGeometryPolygon"===r&&v(n,a,e.featureSet.features)})),e.groundOverlays&&e.groundOverlays.forEach((e=>{a.set(e.id,e)})),t.forEach((t=>{t.networkLinkIds.forEach((s=>{const l=function(e,t,r){const s=function(e,t){let r;return t.some((t=>t.id===e&&(r=t,!0))),r}(e,r);return s&&(s.parentFolderId=t,s.networkLink=s),s}(s,t.id,e.networkLinks);l&&r.push(l)}))})),r.forEach((e=>{e.featureInfos&&(e.points=(0,s.d9)(l.get("esriGeometryPoint")),e.polylines=(0,s.d9)(l.get("esriGeometryPolyline")),e.polygons=(0,s.d9)(l.get("esriGeometryPolygon")),e.mapImages=[],e.featureInfos.map((t=>{switch(t.type){case"esriGeometryPoint":case"esriGeometryPolyline":case"esriGeometryPolygon":{const r=u[t.type].get(t.id);r&&e[d[t.type]].featureSet.features.push(r);break}case"GroundOverlay":{const r=a.get(t.id);r&&e.mapImages.push(r);break}}})),e.fullExtent=S([e]))}));const y=S(r);return{folders:t,sublayers:r,extent:y}}function b(e,t,r,s){const i=u.id&&u.id.findCredential(e);e=(0,o.fl)(e,{token:i&&i.token});const n=l.Z.kmlServiceUrl;return(0,y.default)(n,{query:{url:e,model:"simple",folders:"",refresh:0!==r||void 0,outSR:JSON.stringify(t)},responseType:"json",signal:s})}function m(e,t,r=null,s=[]){const l=[],o={},i=t.sublayers,n=t.folders.map((e=>e.id));return i.forEach((t=>{const i=new e;if(r?i.read(t,r):i.read(t),s.length&&n.indexOf(i.id)>-1&&(i.visible=-1!==s.indexOf(i.id)),o[t.id]=i,null!=t.parentFolderId&&-1!==t.parentFolderId){const e=o[t.parentFolderId];e.sublayers||(e.sublayers=[]),e.sublayers.unshift(i)}else l.unshift(i)})),l}function v(e,t,r){r.forEach((r=>{e.set(r.attributes[t],r)}))}async function g(e){const t=f.default.fromJSON(e.featureSet).features,r=e.layerDefinition,s=(0,p.im)(r.drawingInfo.renderer),l=a.default.fromJSON(e.popupInfo),o=[];for(const e of t){const t=await s.getSymbolAsync(e);e.symbol=t,e.popupTemplate=l,e.visible=!0,o.push(e)}return o}function S(e){const t=(0,h.Ue)(),r=(0,h.Ue)(h.Gv);for(const s of e){if(s.polygons&&s.polygons.featureSet&&s.polygons.featureSet.features)for(const e of s.polygons.featureSet.features)(0,n.Yg)(t,e.geometry),(0,h.TC)(r,t);if(s.polylines&&s.polylines.featureSet&&s.polylines.featureSet.features)for(const e of s.polylines.featureSet.features)(0,n.Yg)(t,e.geometry),(0,h.TC)(r,t);if(s.points&&s.points.featureSet&&s.points.featureSet.features)for(const e of s.points.featureSet.features)(0,n.Yg)(t,e.geometry),(0,h.TC)(r,t);if(s.mapImages)for(const e of s.mapImages)(0,n.Yg)(t,e.extent),(0,h.TC)(r,t)}return(0,h.fS)(r,h.Gv)?null:{xmin:r[0],ymin:r[1],zmin:r[2],xmax:r[3],ymax:r[4],zmax:r[5],spatialReference:i.Z.WGS84}}}}]);
//# sourceMappingURL=6184.js.map