(self.webpackChunkimaps=self.webpackChunkimaps||[]).push([[5393],{57212:(e,t,r)=>{"use strict";r.d(t,{i:()=>c});var n=r(68055),s=r(56885),i=r(54721),o=r(52411),a=r(66849),l=r(43223);const u=(0,n.se)(o.Z);async function c(e,t,r){t=u(t);const n=(0,a.en)(e),o={...n.query,f:"json",...t.toJSON()},c=t.outSpatialReference,f=(0,s.Ji)(t.geometries[0]),N=(0,a.lA)(o,r);return(0,i.default)(n.path+"/project",N).then((({data:{geometries:e}})=>(0,l.o)(e,f,c)))}},88676:(e,t,r)=>{"use strict";r.d(t,{s:()=>n});const n=new(r(56274).Xn)({MGRS:"mgrs",USNG:"usng",UTM:"utm",GeoRef:"geo-ref",GARS:"gars",DMS:"dms",DDM:"ddm",DD:"dd"})},43223:(e,t,r)=>{"use strict";r.d(t,{o:()=>i,F:()=>s});var n=r(56885);function s(e){return{geometryType:(0,n.Ji)(e[0]),geometries:e.map((e=>e.toJSON()))}}function i(e,t,r){const s=(0,n.q9)(t);return e.map((e=>{const t=s.fromJSON(e);return t.spatialReference=r,t}))}},66849:(e,t,r)=>{"use strict";r.d(t,{lA:()=>s,cv:()=>o,en:()=>i});var n=r(10923);function s(e,t){let r={query:e};return t&&(r={...t,...r}),r}function i(e){return"string"==typeof e?(0,n.mN)(e):e}function o(e,t,r){const n={};for(const s in e){if("declaredClass"===s)continue;const i=e[s];if(null!=i&&"function"!=typeof i)if(Array.isArray(i)){n[s]=[];for(let e=0;e<i.length;e++)n[s][e]=o(i[e])}else if("object"==typeof i)if(i.toJSON){const e=i.toJSON(r&&r[s]);n[s]=t?e:JSON.stringify(e)}else n[s]=t?i:JSON.stringify(i);else n[s]=i}return n}},88201:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>E});var n=r(56140),s=(r(95830),r(36544),r(68055),r(79881)),i=r(87566),o=r(10923),a=(r(57002),r(86035),r(95986)),l=r(54721),u=r(66849);var c=r(53817),f=(r(36348),r(43223));var N=r(56885);var p=r(88676);var y=r(61246),d=r(65979);var m=r(20775),_=r(63685);var g=r(12923),T=r(74911);var S=r(57212),I=r(39943),O=r(92947);var R=r(93833),h=r(41673),U=r(23986);let A=class extends a.Z{constructor(e){super(e),this.url=null}areasAndLengths(e,t){return async function(e,t,r){const n=(0,u.en)(e),s={...n.query,f:"json",...t.toJSON()},i=(0,u.lA)(s,r);return(0,l.default)(n.path+"/areasAndLengths",i).then((e=>e.data))}(this.url,e,t)}autoComplete(e,t,r){return async function(e,t,r,n){const s=t[0].spatialReference,i=(0,u.en)(e),o={...i.query,f:"json",sr:JSON.stringify(s.toJSON()),polygons:JSON.stringify((0,f.F)(t).geometries),polylines:JSON.stringify((0,f.F)(r).geometries)},a=(0,u.lA)(o,n);return(0,l.default)(i.path+"/autoComplete",a).then((({data:e})=>(e.geometries||[]).map((({rings:e})=>new c.Z({spatialReference:s,rings:e})))))}(this.url,e,t,r)}buffer(e,t){return async function(e,t,r){const n=(0,u.en)(e),s={...n.query,f:"json",...t.toJSON()},i=t.outSpatialReference||t.geometries[0].spatialReference,o=(0,u.lA)(s,r);return(0,l.default)(n.path+"/buffer",o).then((e=>(e.data.geometries||[]).map((({rings:e})=>new c.Z({spatialReference:i,rings:e})))))}(this.url,e,t)}convexHull(e,t){return async function(e,t,r){const n=t[0].spatialReference,s=(0,u.en)(e),i={...s.query,f:"json",sr:JSON.stringify(n.toJSON()),geometries:JSON.stringify((0,f.F)(t))},o=(0,u.lA)(i,r);return(0,l.default)(s.path+"/convexHull",o).then((({data:e})=>(0,N.im)(e.geometry).set({spatialReference:n})))}(this.url,e,t)}cut(e,t,r){return async function(e,t,r,n){const s=(0,u.en)(e),i=t[0].spatialReference,o={...n,query:{...s.query,f:"json",sr:JSON.stringify(i),target:JSON.stringify({geometryType:(0,N.Ji)(t[0]),geometries:t}),cutter:JSON.stringify(r)}},a=await(0,l.default)(s.path+"/cut",o),{cutIndexes:c,geometries:f=[]}=a.data;return{cutIndexes:c,geometries:f.map((e=>{const t=(0,N.im)(e);return t.spatialReference=i,t}))}}(this.url,e,t,r)}densify(e,t){return async function(e,t,r){const n=t.geometries[0].spatialReference,s=(0,u.en)(e),i={...s.query,f:"json",...t.toJSON()},o=(0,u.lA)(i,r);return(0,l.default)(s.path+"/densify",o).then((({data:e})=>(e.geometries||[]).map((e=>(0,N.im)(e).set({spatialReference:n})))))}(this.url,e,t)}difference(e,t,r){return async function(e,t,r,n){const s=t[0].spatialReference,i=(0,u.en)(e);let o={query:{...i.query,f:"json",sr:JSON.stringify(s.toJSON()),geometries:JSON.stringify((0,f.F)(t)),geometry:JSON.stringify({geometryType:(0,N.Ji)(r),geometry:r.toJSON()})}};return n&&(o={...n,...o}),(0,l.default)(i.path+"/difference",o).then((({data:e})=>(e.geometries||[]).map((e=>(0,N.im)(e).set({spatialReference:s})))))}(this.url,e,t,r)}distance(e,t){return async function(e,t,r){const n=(0,u.en)(e),s={...n.query,f:"json",...t.toJSON()},i=(0,u.lA)(s,r);return(0,l.default)(n.path+"/distance",i).then((({data:e})=>e&&e.distance))}(this.url,e,t)}fromGeoCoordinateString(e,t){return async function(e,t,r){const n={};null!=t.sr&&"object"==typeof t.sr?n.sr=t.sr.wkid||JSON.stringify(t.sr):n.sr=t.sr,n.strings=JSON.stringify(t.strings);const s=t.conversionType||"mgrs";n.conversionType=p.s.toJSON(s),n.conversionMode=t.conversionMode;const i=(0,u.en)(e),o={...i.query,f:"json",...n},a=(0,u.lA)(o,r);return(0,l.default)(i.path+"/fromGeoCoordinateString",a).then((({data:e})=>e.coordinates))}(this.url,e,t)}generalize(e,t){return async function(e,t,r){const n=(t=d.Z.from(t)).toJSON(),s=(0,y.G)(t),i=(0,u.en)(e),o={...i.query,f:"json",...s},a=n.geometries[0].spatialReference,c=(0,u.lA)(o,r);return(0,l.default)(i.path+"/generalize",c).then((({data:e})=>(e.geometries||[]).map((e=>(0,N.im)(e).set({spatialReference:a})))))}(this.url,e,t)}intersect(e,t,r){return async function(e,t,r,n){const s=t[0].spatialReference,i=(0,u.en)(e),o={...i.query,f:"json",sr:JSON.stringify(s.toJSON()),geometries:JSON.stringify((0,f.F)(t)),geometry:JSON.stringify({geometryType:(0,N.Ji)(r),geometry:r.toJSON()})},a=(0,u.lA)(o,n);return(0,l.default)(i.path+"/intersect",a).then((({data:e})=>(e.geometries||[]).map((e=>(0,N.im)(e).set({spatialReference:s})))))}(this.url,e,t,r)}labelPoints(e,t){return function(e,t,r){const n=t.map((e=>e.toJSON())),s=t[0].spatialReference,i=(0,u.en)(e),o={...i.query,f:"json",sr:s.wkid?s.wkid:JSON.stringify(s.toJSON()),polygons:JSON.stringify(n)},a=(0,u.lA)(o,r);return(0,l.default)(i.path+"/labelPoints",a).then((({data:e})=>(e.labelPoints||[]).map((e=>(0,N.im)(e).set({spatialReference:s})))))}(this.url,e,t)}lengths(e,t){return async function(e,t,r){t=_.Z.from(t);const n=(0,m.u)(t),s=(0,u.en)(e),i={...s.query,f:"json",...n},o=(0,u.lA)(i,r);return(0,l.default)(s.path+"/lengths",o).then((({data:e})=>e))}(this.url,e,t)}offset(e,t){return async function(e,t,r){t=T.Z.from(t);const n=(0,g.l)(t),s=(0,u.en)(e),i={...s.query,f:"json",...n},o=t.geometries[0].spatialReference,a=(0,u.lA)(i,r);return(0,l.default)(s.path+"/offset",a).then((({data:e})=>(e.geometries||[]).map((e=>(0,N.im)(e).set({spatialReference:o})))))}(this.url,e,t)}project(e,t){return(0,S.i)(this.url,e,t)}relation(e,t){return async function(e,t,r){t=O.Z.from(t);const n=(0,I.c)(t),s=(0,u.en)(e),i={...s.query,f:"json",...n},o=(0,u.lA)(i,r);return(0,l.default)(s.path+"/relation",o).then((({data:e})=>e.relations))}(this.url,e,t)}reshape(e,t,r){return async function(e,t,r,n){const s=t.spatialReference,i=(0,u.en)(e),o={...i.query,f:"json",sr:JSON.stringify(s.toJSON()),target:JSON.stringify({geometryType:(0,N.Ji)(t),geometry:t.toJSON()}),reshaper:JSON.stringify(r.toJSON())},a=(0,u.lA)(o,n);return(0,l.default)(i.path+"/reshape",a).then((({data:e})=>(0,N.im)(e.geometry).set({spatialReference:s})))}(this.url,e,t,r)}simplify(e,t){return async function(e,t,r){const n="string"==typeof e?(0,o.mN)(e):e,s=t[0].spatialReference,i=(0,N.Ji)(t[0]),a={...r,query:{...n.query,f:"json",sr:s.wkid?s.wkid:JSON.stringify(s),geometries:JSON.stringify((0,f.F)(t))}},{data:u}=await(0,l.default)(n.path+"/simplify",a);return(0,f.o)(u.geometries,i,s)}(this.url,e,t)}toGeoCoordinateString(e,t){return async function(e,t,r){const n={};null!=t.sr&&"object"==typeof t.sr?n.sr=t.sr.wkid||JSON.stringify(t.sr):n.sr=t.sr,n.coordinates=JSON.stringify(t.coordinates);const s=t.conversionType||"mgrs";n.conversionType=p.s.toJSON(s),n.conversionMode=t.conversionMode,n.numOfDigits=t.numOfDigits,n.rounding=t.rounding,n.addSpaces=t.addSpaces;const i=(0,u.en)(e),o={...i.query,f:"json",...n},a=(0,u.lA)(o,r);return(0,l.default)(i.path+"/toGeoCoordinateString",a).then((({data:e})=>e.strings))}(this.url,e,t)}trimExtend(e,t){return async function(e,t,r){t=U.Z.from(t);const n=(0,h.n)(t),s=(0,u.en)(e),i={...s.query,f:"json",...n},o=t.sr,a=(0,u.lA)(i,r);return(0,l.default)(s.path+"/trimExtend",a).then((({data:e})=>(e.geometries||[]).map((({paths:e})=>new R.Z({spatialReference:o,paths:e})))))}(this.url,e,t)}union(e,t){return async function(e,t,r){const n=t[0].spatialReference,s=(0,u.en)(e),i={...s.query,f:"json",sr:JSON.stringify(n.toJSON()),geometries:JSON.stringify((0,f.F)(t))},o=(0,u.lA)(i,r);return(0,l.default)(s.path+"/union",o).then((({data:e})=>(0,N.im)(e.geometry).set({spatialReference:n})))}(this.url,e,t)}};A.UNIT_METER=9001,A.UNIT_GERMAN_METER=9031,A.UNIT_FOOT=9002,A.UNIT_SURVEY_FOOT=9003,A.UNIT_CLARKE_FOOT=9005,A.UNIT_FATHOM=9014,A.UNIT_NAUTICAL_MILE=9030,A.UNIT_SURVEY_CHAIN=9033,A.UNIT_SURVEY_LINK=9034,A.UNIT_SURVEY_MILE=9035,A.UNIT_KILOMETER=9036,A.UNIT_CLARKE_YARD=9037,A.UNIT_CLARKE_CHAIN=9038,A.UNIT_CLARKE_LINK=9039,A.UNIT_SEARS_YARD=9040,A.UNIT_SEARS_FOOT=9041,A.UNIT_SEARS_CHAIN=9042,A.UNIT_SEARS_LINK=9043,A.UNIT_BENOIT_1895A_YARD=9050,A.UNIT_BENOIT_1895A_FOOT=9051,A.UNIT_BENOIT_1895A_CHAIN=9052,A.UNIT_BENOIT_1895A_LINK=9053,A.UNIT_BENOIT_1895B_YARD=9060,A.UNIT_BENOIT_1895B_FOOT=9061,A.UNIT_BENOIT_1895B_CHAIN=9062,A.UNIT_BENOIT_1895B_LINK=9063,A.UNIT_INDIAN_FOOT=9080,A.UNIT_INDIAN_1937_FOOT=9081,A.UNIT_INDIAN_1962_FOOT=9082,A.UNIT_INDIAN_1975_FOOT=9083,A.UNIT_INDIAN_YARD=9084,A.UNIT_INDIAN_1937_YARD=9085,A.UNIT_INDIAN_1962_YARD=9086,A.UNIT_INDIAN_1975_YARD=9087,A.UNIT_FOOT_1865=9070,A.UNIT_RADIAN=9101,A.UNIT_DEGREE=9102,A.UNIT_ARCMINUTE=9103,A.UNIT_ARCSECOND=9104,A.UNIT_GRAD=9105,A.UNIT_GON=9106,A.UNIT_MICRORADIAN=9109,A.UNIT_ARCMINUTE_CENTESIMAL=9112,A.UNIT_ARCSECOND_CENTESIMAL=9113,A.UNIT_MIL6400=9114,A.UNIT_BRITISH_1936_FOOT=9095,A.UNIT_GOLDCOAST_FOOT=9094,A.UNIT_INTERNATIONAL_CHAIN=109003,A.UNIT_INTERNATIONAL_LINK=109004,A.UNIT_INTERNATIONAL_YARD=109001,A.UNIT_STATUTE_MILE=9093,A.UNIT_SURVEY_YARD=109002,A.UNIT_50KILOMETER_LENGTH=109030,A.UNIT_150KILOMETER_LENGTH=109031,A.UNIT_DECIMETER=109005,A.UNIT_CENTIMETER=109006,A.UNIT_MILLIMETER=109007,A.UNIT_INTERNATIONAL_INCH=109008,A.UNIT_US_SURVEY_INCH=109009,A.UNIT_INTERNATIONAL_ROD=109010,A.UNIT_US_SURVEY_ROD=109011,A.UNIT_US_NAUTICAL_MILE=109012,A.UNIT_UK_NAUTICAL_MILE=109013,A.UNIT_SQUARE_INCHES="esriSquareInches",A.UNIT_SQUARE_FEET="esriSquareFeet",A.UNIT_SQUARE_YARDS="esriSquareYards",A.UNIT_ACRES="esriAcres",A.UNIT_SQUARE_MILES="esriSquareMiles",A.UNIT_SQUARE_MILLIMETERS="esriSquareMillimeters",A.UNIT_SQUARE_CENTIMETERS="esriSquareCentimeters",A.UNIT_SQUARE_DECIMETERS="esriSquareDecimeters",A.UNIT_SQUARE_METERS="esriSquareMeters",A.UNIT_ARES="esriAres",A.UNIT_HECTARES="esriHectares",A.UNIT_SQUARE_KILOMETERS="esriSquareKilometers",(0,n._)([(0,s.Cb)()],A.prototype,"url",void 0),A=(0,n._)([(0,i.j)("esri.tasks.GeometryService")],A);const E=A},95986:(e,t,r)=>{"use strict";r.d(t,{Z:()=>u});var n=r(56140),s=(r(95830),r(36544),r(68055),r(79881)),i=r(87566),o=r(10923),a=(r(57002),r(86035),r(82677));let l=class extends a.default{constructor(...e){super(...e),this.requestOptions=null,this.url=null}normalizeCtorArgs(e,t){return"string"!=typeof e?e:{url:e,...t}}get parsedUrl(){return this._parseUrl(this.url)}_parseUrl(e){return e?(0,o.mN)(e):null}_encode(e,t,r){const n={};for(const s in e){if("declaredClass"===s)continue;const i=e[s];if(null!=i&&"function"!=typeof i)if(Array.isArray(i)){n[s]=[];for(let e=0;e<i.length;e++)n[s][e]=this._encode(i[e])}else if("object"==typeof i)if(i.toJSON){const e=i.toJSON(r&&r[s]);n[s]=t?e:JSON.stringify(e)}else n[s]=t?i:JSON.stringify(i);else n[s]=i}return n}};(0,n._)([(0,s.Cb)({readOnly:!0,dependsOn:["url"]})],l.prototype,"parsedUrl",null),(0,n._)([(0,s.Cb)()],l.prototype,"requestOptions",void 0),(0,n._)([(0,s.Cb)({type:String})],l.prototype,"url",void 0),l=(0,n._)([(0,i.j)("esri.tasks.Task")],l);const u=l},61246:(e,t,r)=>{"use strict";r.d(t,{G:()=>o});var n=r(56274),s=r(56885);const i=new n.Xn({109006:"centimeters",9102:"decimal-degrees",109005:"decimeters",9002:"feet",109009:"inches",9036:"kilometers",9001:"meters",9035:"miles",109007:"millimeters",109012:"nautical-miles",9096:"yards"});function o(e){const{geometries:t,deviationUnit:r,maxDeviation:n}=e.toJSON(),o={maxDeviation:n};return t&&t.length&&(o.geometries=JSON.stringify({geometryType:(0,s.Ji)(t[0]),geometries:t}),o.sr=JSON.stringify(t[0].spatialReference)),i.write(r,o,"deviationUnit"),o}},20775:(e,t,r)=>{"use strict";r.d(t,{u:()=>s});const n=new(r(56274).Xn)({preserveShape:"preserve-shape"});function s(e){const{polylines:t,lengthUnit:r,geodesic:s,calculationType:i}=e.toJSON(),o={};o.polylines=JSON.stringify(t);const a=e.polylines[0].spatialReference;return o.sr=a.wkid?a.wkid:JSON.stringify(a.toJSON()),r&&(o.lengthUnit=r),s&&(o.geodesic=s),i&&(o.calculationType=n.toJSON(i)),o}},12923:(e,t,r)=>{"use strict";r.d(t,{l:()=>a});var n=r(56274),s=r(56885);const i=new n.Xn({esriGeometryOffsetBevelled:"bevelled",esriGeometryOffsetMitered:"mitered",esriGeometryOffsetRounded:"rounded"}),o=new n.Xn({9001:"meters",9002:"feet",9036:"kilometers",9093:"miles",109012:"nautical-miles",109001:"yards"});function a(e){const{geometries:t,bevelRatio:r,offsetDistance:n,offsetHow:a,offsetUnit:l}=e.toJSON(),u={bevelRatio:r,offsetDistance:n};return t&&t.length&&(u.geometries=JSON.stringify({geometryType:(0,s.Ji)(t[0]),geometries:t}),u.sr=JSON.stringify(t[0].spatialReference)),a&&(u.offsetHow=i.toJSON(a)),l&&(u.offsetUnit=o.toJSON(l)),u}},39943:(e,t,r)=>{"use strict";r.d(t,{c:()=>o});var n=r(56274),s=r(56885);const i=new n.Xn({esriGeometryRelationCross:"cross",esriGeometryRelationDisjoint:"disjoint",esriGeometryRelationIn:"in",esriGeometryRelationInteriorIntersection:"interior-intersection",esriGeometryRelationIntersection:"intersection",esriGeometryRelationLineCoincidence:"line-coincidence",esriGeometryRelationLineTouch:"line-touch",esriGeometryRelationOverlap:"overlap",esriGeometryRelationPointTouch:"point-touch",esriGeometryRelationTouch:"touch",esriGeometryRelationWithin:"within",esriGeometryRelationRelation:"relation"});function o(e){const{geometries1:t,geometries2:r,relation:n,relationParameter:o}=e.toJSON(),a={};if(t&&t.length){a.geometries1=JSON.stringify({geometryType:(0,s.Ji)(t[0]),geometries:t});const e=t[0].spatialReference;a.sr=e.wkid?e.wkid:JSON.stringify(e)}return r&&r.length>0&&(a.geometries2=JSON.stringify({geometryType:(0,s.Ji)(r[0]),geometries:r})),n&&(a.relation=i.toJSON(n)),o&&(a.relationParam=o),a}},41673:(e,t,r)=>{"use strict";r.d(t,{n:()=>s});const n=new(r(56274).Xn)({0:"default-curve-extension",1:"relocate-ends",2:"keep-end-attributes",4:"no-end-attributes",8:"no-extend-at-from",16:"no-extend-at-to"});function s(e){const{extendHow:t,polylines:r,trimExtendTo:s}=e.toJSON(),i={};return i.extendHow=n.toJSON(t),r&&r.length&&(i.polylines=JSON.stringify(r),i.sr=JSON.stringify(r[0].spatialReference)),s&&(i.trimExtendTo=JSON.stringify(s)),i}},65979:(e,t,r)=>{"use strict";r.d(t,{Z:()=>c});var n=r(56140),s=(r(95830),r(36544),r(68055)),i=r(79881),o=r(87566),a=(r(10923),r(57002),r(86035),r(58385)),l=r(56885);let u=class extends a.wq{constructor(e){super(e),this.deviationUnit=null,this.geometries=null,this.maxDeviation=null}};(0,n._)([(0,i.Cb)({type:String,json:{write:!0}})],u.prototype,"deviationUnit",void 0),(0,n._)([(0,i.Cb)({json:{read:{reader:e=>e?e.map((e=>(0,l.im)(e))):null},write:{writer:(e,t)=>{t.geometries=e.map((e=>e.toJSON()))}}}})],u.prototype,"geometries",void 0),(0,n._)([(0,i.Cb)({type:Number,json:{write:!0}})],u.prototype,"maxDeviation",void 0),u=(0,n._)([(0,o.j)("esri.tasks.support.GeneralizeParameters")],u),u.from=(0,s.se)(u);const c=u},63685:(e,t,r)=>{"use strict";r.d(t,{Z:()=>f});var n=r(56140),s=(r(95830),r(36544),r(68055)),i=r(79881),o=r(87566),a=(r(10923),r(57002),r(86035),r(58385)),l=r(93833),u=r(56885);r(36348);let c=class extends a.wq{constructor(e){super(e),this.calculationType=null,this.geodesic=null,this.lengthUnit=null,this.polylines=null}};(0,n._)([(0,i.Cb)({type:String,json:{write:!0}})],c.prototype,"calculationType",void 0),(0,n._)([(0,i.Cb)({type:Boolean,json:{write:!0}})],c.prototype,"geodesic",void 0),(0,n._)([(0,i.Cb)({json:{write:!0}})],c.prototype,"lengthUnit",void 0),(0,n._)([(0,i.Cb)({type:[l.Z],json:{read:{reader:e=>e?e.map((e=>(0,u.im)(e))):null},write:{writer:(e,t)=>{t.polylines=e.map((e=>e.toJSON()))}}}})],c.prototype,"polylines",void 0),c=(0,n._)([(0,o.j)("esri.tasks.support.LengthsParameters")],c),c.from=(0,s.se)(c);const f=c},74911:(e,t,r)=>{"use strict";r.d(t,{Z:()=>c});var n=r(56140),s=(r(95830),r(36544),r(68055)),i=r(79881),o=r(87566),a=(r(10923),r(57002),r(86035),r(58385)),l=r(56885);let u=class extends a.wq{constructor(e){super(e),this.bevelRatio=null,this.geometries=null,this.offsetDistance=null,this.offsetHow=null,this.offsetUnit=null}};(0,n._)([(0,i.Cb)({type:Number,json:{write:!0}})],u.prototype,"bevelRatio",void 0),(0,n._)([(0,i.Cb)({json:{read:{reader:e=>e?e.map((e=>(0,l.im)(e))):null},write:{writer:(e,t)=>{t.geometries=e.map((e=>e.toJSON()))}}}})],u.prototype,"geometries",void 0),(0,n._)([(0,i.Cb)({type:Number,json:{write:!0}})],u.prototype,"offsetDistance",void 0),(0,n._)([(0,i.Cb)({type:String,json:{write:!0}})],u.prototype,"offsetHow",void 0),(0,n._)([(0,i.Cb)({type:String,json:{write:!0}})],u.prototype,"offsetUnit",void 0),u=(0,n._)([(0,o.j)("esri.tasks.support.OffsetParameters")],u),u.from=(0,s.se)(u);const c=u},92947:(e,t,r)=>{"use strict";r.d(t,{Z:()=>c});var n=r(56140),s=(r(95830),r(36544),r(68055)),i=r(79881),o=r(87566),a=(r(10923),r(57002),r(86035),r(58385)),l=r(56885);let u=class extends a.wq{constructor(e){super(e),this.geometries1=null,this.geometries2=null,this.relation=null,this.relationParameter=null}};(0,n._)([(0,i.Cb)({json:{read:{reader:e=>e?e.map((e=>(0,l.im)(e))):null},write:{writer:(e,t)=>{t.geometries1=e.map((e=>e.toJSON()))}}}})],u.prototype,"geometries1",void 0),(0,n._)([(0,i.Cb)({json:{read:{reader:e=>e?e.map((e=>(0,l.im)(e))):null},write:{writer:(e,t)=>{t.geometries2=e.map((e=>e.toJSON()))}}}})],u.prototype,"geometries2",void 0),(0,n._)([(0,i.Cb)({type:String,json:{write:!0}})],u.prototype,"relation",void 0),(0,n._)([(0,i.Cb)({type:String,json:{write:!0}})],u.prototype,"relationParameter",void 0),u=(0,n._)([(0,o.j)("esri.tasks.support.RelationParameters")],u),u.from=(0,s.se)(u);const c=u},23986:(e,t,r)=>{"use strict";r.d(t,{Z:()=>f});var n=r(56140),s=(r(95830),r(36544),r(68055)),i=r(79881),o=r(87566),a=(r(10923),r(57002),r(86035),r(58385)),l=r(93833),u=r(56885);r(36348);let c=class extends a.wq{constructor(e){super(e),this.extendHow="default-curve-extension",this.polylines=null,this.trimExtendTo=null}};(0,n._)([(0,i.Cb)({type:String,json:{write:!0}})],c.prototype,"extendHow",void 0),(0,n._)([(0,i.Cb)({type:[l.Z],json:{read:{reader:e=>e?e.map((e=>(0,u.im)(e))):null},write:{writer:(e,t)=>{t.polylines=e.map((e=>e.toJSON()))}}}})],c.prototype,"polylines",void 0),(0,n._)([(0,i.Cb)({json:{read:{reader:e=>e?(0,u.im)(e):null},write:{writer:(e,t)=>{t.trimExtendTo=e.toJSON()}}}})],c.prototype,"trimExtendTo",void 0),c=(0,n._)([(0,o.j)("esri.tasks.support.TrimExtendParameters")],c),c.from=(0,s.se)(c);const f=c}}]);
//# sourceMappingURL=5393.js.map