(self.webpackChunkimaps=self.webpackChunkimaps||[]).push([[5596,2756],{83873:(t,e,i)=>{"use strict";function s(t,e){return e?"xoffset"in e&&e.xoffset?Math.max(t,Math.abs(e.xoffset)):"yoffset"in e&&e.yoffset?Math.max(t,Math.abs(e.yoffset||0)):t:t}function r(t,e){return"number"==typeof t?t:t&&t.stops&&t.stops.length?function(t){let e=0,i=0;for(let s=0;s<t.length;s++){const r=t[s].size;"number"==typeof r&&(e+=r,i++)}return e/i}(t.stops):e}function o(t){const e=t&&t.renderer,i="touch"===(t&&t.event&&t.event.pointerType)?9:6;if(!e)return i;const o="visualVariables"in e?function(t,e){if(!e)return t;const i=e.filter((t=>"size"===t.type)).map((e=>{const{maxSize:i,minSize:s}=e;return(r(i,t)+r(s,t))/2}));let s=0;const o=i.length;if(0===o)return t;for(let t=0;t<o;t++)s+=i[t];const h=Math.floor(s/o);return Math.max(h,t)}(i,e.visualVariables):i;if("simple"===e.type)return s(o,e.symbol);if("unique-value"===e.type){let t=o;return e.uniqueValueInfos.forEach((e=>{t=s(t,e.symbol)})),t}if("class-breaks"===e.type){let t=o;return e.classBreakInfos.forEach((e=>{t=s(t,e.symbol)})),t}return e.type,o}i.d(e,{k:()=>o})},32756:(t,e,i)=>{"use strict";i.r(e),i.d(e,{default:()=>S});var s=i(56140),r=(i(95830),i(82550)),o=i(59472),h=(i(36544),i(68055),i(79881)),a=i(87566),n=(i(10923),i(57002),i(86035),i(35470)),c=i(59691),l=i(80621),p=i(69948),d=i(2887),v=i(70778),u=i(65865);class y{constructor(t,e,i,s,r){this.graphic=t,this.index=e,this.x=i,this.y=s,this.viewEvent=r,this.type="graphic-click"}}class _{constructor(t,e,i,s,r){this.graphic=t,this.index=e,this.x=i,this.y=s,this.viewEvent=r,this.type="graphic-double-click"}}class g{constructor(t,e,i,s,r,o,h,a,n,c){this.graphic=t,this.allGraphics=e,this.index=i,this.x=s,this.y=r,this.dx=o,this.dy=h,this.totalDx=a,this.totalDy=n,this.viewEvent=c,this.defaultPrevented=!1,this.type="graphic-move-start"}preventDefault(){this.defaultPrevented=!0}}class m{constructor(t,e,i,s,r,o,h,a,n,c){this.graphic=t,this.allGraphics=e,this.index=i,this.x=s,this.y=r,this.dx=o,this.dy=h,this.totalDx=a,this.totalDy=n,this.viewEvent=c,this.defaultPrevented=!1,this.type="graphic-move"}preventDefault(){this.defaultPrevented=!0}}class b{constructor(t,e,i,s,r,o,h,a,n,c){this.graphic=t,this.allGraphics=e,this.index=i,this.x=s,this.y=r,this.dx=o,this.dy=h,this.totalDx=a,this.totalDy=n,this.viewEvent=c,this.defaultPrevented=!1,this.type="graphic-move-stop"}preventDefault(){this.defaultPrevented=!0}}class f{constructor(t,e,i,s,r){this.graphic=t,this.index=e,this.x=i,this.y=s,this.viewEvent=r,this.type="graphic-pointer-over"}}class G{constructor(t,e,i,s,r){this.graphic=t,this.index=e,this.x=i,this.y=s,this.viewEvent=r,this.type="graphic-pointer-out"}}class x{constructor(t,e,i,s,r){this.graphic=t,this.index=e,this.x=i,this.y=s,this.viewEvent=r,this.type="graphic-pointer-down"}}class w{constructor(t,e,i,s,r){this.graphic=t,this.index=e,this.x=i,this.y=s,this.viewEvent=r,this.type="graphic-pointer-up"}}let C=class extends n.Z.EventedAccessor{constructor(t){super(t),this._activeGraphic=null,this._dragEvent=null,this._handles=new c.Z,this._hoverGraphic=null,this._initialDragGeometry=null,this._viewHandles=new c.Z,this._manipulators=[],this.type="graphic-mover",this.callbacks={onGraphicClick(){},onGraphicDoubleClick(){},onGraphicMoveStart(){},onGraphicMove(){},onGraphicMoveStop(){},onGraphicPointerOver(){},onGraphicPointerOut(){},onGraphicPointerDown(){},onGraphicPointerUp(){}},this.enableMoveAllGraphics=!1,this.graphics=[],this.view=null}initialize(){this._setUpManipulators(),this._handles.add([(0,l.watch)(this,["graphics","graphics.length"],(()=>{this._setUpManipulators()})),(0,l.whenOnce)(this,"view.ready",(()=>{this._viewHandles.add([this.view.on("immediate-click",(t=>this._clickHandler(t)),p.f.TOOL),this.view.on("double-click",(t=>this._doubleClickHandler(t)),p.f.TOOL),this.view.on("pointer-down",(t=>this._pointerDownHandler(t)),p.f.TOOL),this.view.on("pointer-move",(t=>this._pointerMoveHandler(t)),p.f.TOOL),this.view.on("pointer-up",(t=>this._pointerUpHandler(t)),p.f.TOOL),this.view.on("drag",(t=>this._dragHandler(t)),p.f.TOOL),this.view.on("key-down",(t=>this._keyDownHandler(t)),p.f.TOOL)])}))])}destroy(){this.reset(),this._manipulators.forEach((t=>t.destroy())),this._manipulators=null,this._viewHandles.removeAll(),this._handles.removeAll()}get state(){const t=!!this.get("view.ready"),e=!!this.get("graphics.length"),i=this._activeGraphic;return t&&e?i?"moving":"active":t?"ready":"disabled"}reset(){this._activeGraphic=null,this._hoverGraphic=null,this._dragEvent=null}updateGeometry(t,e){const i=this.graphics[t];i&&i.set("geometry",e)}_clickHandler(t){const e=this._findTargetGraphic((0,d.vT)(t));if(e){const i=new y(e,this.graphics.indexOf(e),t.x,t.y,t);this.emit("graphic-click",i),this.callbacks.onGraphicClick&&this.callbacks.onGraphicClick(i)}}_doubleClickHandler(t){const e=this._findTargetGraphic((0,d.vT)(t));if(e){const i=new _(e,this.graphics.indexOf(e),t.x,t.y,t);this.emit("graphic-double-click",i),this.callbacks.onGraphicDoubleClick&&this.callbacks.onGraphicDoubleClick(i)}}_pointerDownHandler(t){const e=this._findTargetGraphic((0,d.vT)(t));if(e){this._activeGraphic=e;const{x:i,y:s}=t,r=new x(e,this.graphics.indexOf(e),i,s,t);this.emit("graphic-pointer-down",r),this.callbacks.onGraphicPointerDown&&this.callbacks.onGraphicPointerDown(r)}else this._activeGraphic=null}_pointerUpHandler(t){if(this._activeGraphic){const{x:e,y:i}=t,s=this.graphics.indexOf(this._activeGraphic),r=new w(this._activeGraphic,s,e,i,t);this.emit("graphic-pointer-up",r),this.callbacks.onGraphicPointerUp&&this.callbacks.onGraphicPointerUp(r)}}_pointerMoveHandler(t){if(this._dragEvent)return;const e=this._findTargetGraphic((0,d.vT)(t));if(e){const{x:i,y:s}=t;if(this._hoverGraphic){if(this._hoverGraphic===e)return;const r=this.graphics.indexOf(this._hoverGraphic),o=new G(this.graphics[r],r,i,s,t);this._hoverGraphic=null,this.emit("graphic-pointer-out",o),this.callbacks.onGraphicPointerOut&&this.callbacks.onGraphicPointerOut(o)}const r=this.graphics.indexOf(e),o=new f(e,r,i,s,t);return this._hoverGraphic=e,this.emit("graphic-pointer-over",o),void(this.callbacks.onGraphicPointerOver&&this.callbacks.onGraphicPointerOver(o))}if(this._hoverGraphic){const{x:e,y:i}=t,s=this.graphics.indexOf(this._hoverGraphic),r=new G(this.graphics[s],s,e,i,t);this._hoverGraphic=null,this.emit("graphic-pointer-out",r),this.callbacks.onGraphicPointerOut&&this.callbacks.onGraphicPointerOut(r)}}_dragHandler(t){if("start"!==t.action&&!this._dragEvent||!this._activeGraphic||!this._activeGraphic.geometry)return;t.stopPropagation();const{action:e,x:i,y:s}=t,o=this.graphics.indexOf(this._activeGraphic),h=this._activeGraphic.geometry,a=this._dragEvent?i-this._dragEvent.x:0,n=this._dragEvent?s-this._dragEvent.y:0,c=i-t.origin.x,l=s-t.origin.y;if(this._activeGraphic.geometry=(0,v.e7)(h,a,n,this.view),this.enableMoveAllGraphics&&this.graphics.forEach((t=>{t!==this._activeGraphic&&(t.geometry=(0,v.e7)(t.geometry,a,n,this.view))})),this._dragEvent=t,"start"===e){this._initialDragGeometry=(0,r.d9)(h);const e=new g(this._activeGraphic,this.graphics,o,i,s,a,n,c,l,t);this.emit("graphic-move-start",e),this.callbacks.onGraphicMoveStart&&this.callbacks.onGraphicMoveStart(e),e.defaultPrevented&&this._activeGraphic.set("geometry",h)}else if("update"===e){const e=new m(this._activeGraphic,this.graphics,o,i,s,a,n,c,l,t);this.emit("graphic-move",e),this.callbacks.onGraphicMove&&this.callbacks.onGraphicMove(e),e.defaultPrevented&&this._activeGraphic.set("geometry",h)}else{const e=new b(this._activeGraphic,this.graphics,o,i,s,a,n,c,l,t);this._dragEvent=null,this._activeGraphic=null,this.emit("graphic-move-stop",e),this.callbacks.onGraphicMoveStop&&this.callbacks.onGraphicMoveStop(e),e.defaultPrevented&&this.graphics[o].set("geometry",this._initialDragGeometry),this._initialDragGeometry=null}}_keyDownHandler(t){"a"!==t.key&&"d"!==t.key&&"n"!==t.key||"moving"!==this.state||t.stopPropagation()}_findTargetGraphic(t){let e=null,i=Number.MAX_VALUE;return this._manipulators.forEach((s=>{const r=s.intersectionDistance(t);(0,o.pC)(r)&&r<i&&(i=r,e=s.graphic)})),e}_setUpManipulators(){const{graphics:t,view:e}=this;this._manipulators.forEach((t=>t.destroy())),this._manipulators=null!=t&&t.length?t.map((t=>new u.L({graphic:t,view:e}))):[]}};(0,s._)([(0,h.Cb)()],C.prototype,"_activeGraphic",void 0),(0,s._)([(0,h.Cb)({readOnly:!0})],C.prototype,"type",void 0),(0,s._)([(0,h.Cb)()],C.prototype,"callbacks",void 0),(0,s._)([(0,h.Cb)()],C.prototype,"enableMoveAllGraphics",void 0),(0,s._)([(0,h.Cb)()],C.prototype,"graphics",void 0),(0,s._)([(0,h.Cb)({dependsOn:["view.ready","graphics.length","_activeGraphic"],readOnly:!0})],C.prototype,"state",null),(0,s._)([(0,h.Cb)()],C.prototype,"view",void 0),C=(0,s._)([(0,a.j)("esri.views.draw.support.GraphicMover")],C);const S=C},45596:(t,e,i)=>{"use strict";i.r(e),i.d(e,{default:()=>P});var s=i(56140),r=(i(95830),i(59472)),o=(i(36544),i(68055),i(79881)),h=i(87566),a=(i(10923),i(57002),i(86035),i(61106)),n=i(92232),c=(i(36348),i(35470)),l=i(88083),p=i(15988),d=i(59691),v=i(80621),u=i(69948),y=i(70778),_=i(24591),g=i(32756),m=i(44883);class b{constructor(t,e,i){this.graphic=t,this.mover=e,this.selected=i,this.type="reshape-start"}}class f{constructor(t,e,i){this.graphic=t,this.mover=e,this.selected=i,this.type="reshape"}}class G{constructor(t,e,i){this.graphic=t,this.mover=e,this.selected=i,this.type="reshape-stop"}}class x{constructor(t,e,i){this.mover=t,this.dx=e,this.dy=i,this.type="move-start"}}class w{constructor(t,e,i){this.mover=t,this.dx=e,this.dy=i,this.type="move"}}class C{constructor(t,e,i){this.mover=t,this.dx=e,this.dy=i,this.type="move-stop"}}class S{constructor(t){this.added=t,this.type="vertex-select"}}class k{constructor(t){this.removed=t,this.type="vertex-deselect"}}class M{constructor(t,e,i,s){this.added=t,this.graphic=e,this.oldGraphic=i,this.vertices=s,this.type="vertex-add"}}class H{constructor(t,e,i,s){this.removed=t,this.graphic=e,this.oldGraphic=i,this.vertices=s,this.type="vertex-remove"}}const O={removeVertex:["Backspace","Delete"]},E=m.X.reshapeGraphics,D={vertices:{default:new l.Z({style:"circle",size:E.vertex.size,color:E.vertex.color,outline:{color:E.vertex.outlineColor,width:1}}),hover:new l.Z({style:"circle",size:E.vertex.hoverSize,color:E.vertex.hoverColor,outline:{color:E.vertex.hoverOutlineColor,width:1}}),selected:new l.Z({style:"circle",size:E.selected.size,color:E.selected.color,outline:{color:E.selected.outlineColor,width:1}})},midpoints:{default:new l.Z({style:"circle",size:E.midpoint.size,color:E.midpoint.color,outline:{color:E.midpoint.outlineColor,width:1}}),hover:new l.Z({style:"circle",size:E.midpoint.size,color:E.midpoint.color,outline:{color:E.midpoint.outlineColor,width:1}})}};let I=class extends c.Z.EventedAccessor{constructor(t){super(t),this._handles=new d.Z,this._graphicAttributes={esriSketchTool:"box"},this._mover=null,this._viewHandles=new d.Z,this._totalDx=0,this._totalDy=0,this.callbacks={onReshapeStart(){},onReshape(){},onReshapeStop(){},onMoveStart(){},onMove(){},onMoveStop(){},onGraphicClick(){}},this.enableMidpoints=!0,this.graphic=null,this.handleGraphics=[],this.layer=null,this.midpointGraphics=[],this.midpointSymbol=new l.Z({style:"circle",size:6,color:[200,200,200],outline:{color:[100,100,100],width:1}}),this.selectedHandles=[],this.type="reshape",this.view=null}initialize(){this._setup(),this._handles.add([(0,v.whenOnce)(this,"view.ready",(()=>{const{layer:t,view:e}=this;(0,_.p)(e,t),this._viewHandles.add([e.on("key-down",(t=>this._keyDownHandler(t)),u.f.TOOL)])})),(0,v.pausable)(this,"graphic",(()=>this.refresh())),(0,v.pausable)(this,"layer",((t,e)=>{e&&(this._clearSelection(),this._resetGraphics(e)),this.refresh()})),(0,v.pausable)(this,"enableMidpoints",(()=>{this.refresh()}))])}destroy(){this._reset(),this._mover&&this._mover.destroy(),this._mover=null,this._handles.removeAll(),this._handles=null,this._viewHandles.removeAll(),this._viewHandles=null}get state(){const t=!!this.get("view.ready"),e=!(!this.get("graphic")||!this.get("layer"));return t&&e?"active":t?"ready":"disabled"}set symbols(t){const{midpoints:e=D.midpoints,vertices:i=D.vertices}=t||{};this._set("symbols",{midpoints:e,vertices:i})}isUIGraphic(t){const e=[];return this.graphic&&e.push(this.graphic),e.concat(this.handleGraphics,this.midpointGraphics),e.length&&e.includes(t)}refresh(){this._reset(),this._setup()}reset(){this.graphic=null}clearSelection(){this._clearSelection()}removeSelectedHandles(){this.selectedHandles.length&&this._removeVertex(this.selectedHandles)}_setup(){this.graphic&&this.layer&&(this._setupGraphics(),this._setupMover())}_reset(){this._clearSelection(),this._resetGraphicStateVars(),this._resetGraphics(),this._mover&&this._mover.destroy(),this._mover=null,this.view.cursor="default"}_resetGraphicStateVars(){this._totalDx=0,this._totalDy=0}_resetGraphics(t){const e=t||this.layer;e&&(e.removeMany(this.handleGraphics),e.removeMany(this.midpointGraphics)),this.handleGraphics.forEach((t=>t.destroy())),this.midpointGraphics.forEach((t=>t.destroy())),this._set("handleGraphics",[]),this._set("midpointGraphics",[]),this._set("selectedHandles",[])}_setupGraphics(){const t=(0,r.Wg)(this.graphic.geometry),e=(0,n.nA)(t.clone());if("polygon"===t.type)for(const t of e){const e=t[t.length-1];t[0][0]===e[0]&&t[0][1]===e[1]&&t.length>2&&t.pop()}this._set("handleGraphics",this._createHandleGraphics(e)),this.enableMidpoints&&this._set("midpointGraphics",this._createMidpointGraphics(e)),this._saveRelatedIndices(this.handleGraphics),this.layer.addMany(this.midpointGraphics),this.layer.addMany(this.handleGraphics)}_createHandleGraphics(t){const{_graphicAttributes:e,symbols:i,view:{spatialReference:s}}=this,r=[];return null==t||t.forEach(((t,o)=>{t.forEach(((t,h)=>{var n;const[c,l]=t;r.push(new p.Z({geometry:new a.Z({x:c,y:l,spatialReference:s}),symbol:null==i||null==(n=i.vertices)?void 0:n.default,attributes:{...e,pathIndex:o,pointIndex:h}}))}))})),r}_createMidpointGraphics(t){const{_graphicAttributes:e,symbols:i,view:{spatialReference:s}}=this,o=[];return null==t||t.forEach(((t,h)=>{t.forEach(((c,l)=>{const[d,v]=c,u=t[l+1]?l+1:0;if("polygon"===(0,r.U2)(this.graphic.geometry,"type")||0!==u){const[r,c]=t[u],[y,_]=(0,n.Gi)([d,v],[r,c]);o.push(new p.Z({geometry:new a.Z({x:y,y:_,spatialReference:s}),symbol:i.midpoints.default,attributes:{...e,pathIndex:h,pointIndexStart:l,pointIndexEnd:u}}))}}))})),o}_saveRelatedIndices(t){if(!t)return;const e=t.map((({geometry:t})=>({x:t.x,y:t.y})));for(let i=0;i<e.length;i++){const s=[];for(let t=0;t<e.length;t++){if(i===t)continue;const r=e[i],o=e[t];r.x===o.x&&r.y===o.y&&s.push(t)}t[i].attributes.relatedGraphicIndices=s}}_setupMover(){this._mover=new g.default({enableMoveAllGraphics:!1,graphics:[].concat(this.handleGraphics,this.midpointGraphics,this.graphic),view:this.view,callbacks:{onGraphicClick:t=>this._onGraphicClickCallback(t),onGraphicMoveStart:t=>this._onGraphicMoveStartCallback(t),onGraphicMove:t=>this._onGraphicMoveCallback(t),onGraphicMoveStop:t=>this._onGraphicMoveStopCallback(t),onGraphicPointerOver:t=>this._onGraphicPointerOverCallback(t),onGraphicPointerOut:t=>this._onGraphicPointerOutCallback(t)}})}_onGraphicClickCallback(t){t.viewEvent.stopPropagation();const e=t.graphic;if(e===this.graphic)this.clearSelection(),this.emit("graphic-click",t),this.callbacks.onGraphicClick&&this.callbacks.onGraphicClick(t);else if(this._isMidpoint(e)){if(2===t.viewEvent.button)return;const i=this.graphic.clone(),s=this._createHandleFromMidpoint(e);this.refresh(),this._emitVertexAddEvent([e],i,s)}else this._isHandle(e)&&(t.viewEvent.stopPropagation(),2===t.viewEvent.button?this._removeVertex(e):(t.viewEvent.native.shiftKey||this._clearSelection(),this.selectedHandles.includes(e)?this._removeFromSelection(e,!0):this._addToSelection(e)))}_onGraphicMoveStartCallback(t){const e=t.graphic;if(this._resetGraphicStateVars(),e===this.graphic){const{dx:e,dy:i}=t;return this.handleGraphics.forEach((t=>t.visible=!1)),this.midpointGraphics.forEach((t=>t.visible=!1)),this._clearSelection(),void this._emitMoveStartEvent(e,i)}if(this._isMidpoint(e)){this._clearSelection();const t=this.graphic.clone(),i=this._createHandleFromMidpoint(e);this._emitVertexAddEvent([e],t,i),this._addToSelection(e)}else this.selectedHandles.includes(e)||(this._clearSelection(),this._addToSelection(e));this._emitReshapeStartEvent(e)}_onGraphicMoveCallback(t){const{graphic:e,dx:i,dy:s}=t;this._totalDx+=i,this._totalDy+=s,e===this.graphic?this._emitMoveEvent(i,s):(this._syncGeometryAfterHandleMove(e,i,s),this._emitReshapeEvent(e))}_onGraphicMoveStopCallback(t){const{graphic:e,dx:i,dy:s}=t;if(this._totalDx+=i,this._totalDy+=s,e===this.graphic){for(const t of[].concat(this.handleGraphics,this.midpointGraphics))t.visible=!0;this._syncGraphicsWithGeometry(),this._emitMoveStopEvent()}else this._syncGeometryAfterHandleMove(e,i,s),this._isMidpoint(e)&&this.refresh(),this._emitReshapeStopEvent(e);this._resetGraphicStateVars()}_syncGraphicsWithGeometry(){const t=this.graphic.geometry,e="polyline"===t.type?t.paths:t.rings;this._updateHandleGraphicLocations(e),this._updateMidpointGraphicLocations(e)}_updateHandleGraphicLocations(t){for(const e of this.handleGraphics){const{pathIndex:i,pointIndex:s}=e.attributes,[r,o]=t[i][s];e.set("geometry",new a.Z(r,o,this.view.spatialReference))}}_updateMidpointGraphicLocations(t){for(const e of this.midpointGraphics){const{pathIndex:i,pointIndexStart:s,pointIndexEnd:r}=e.attributes,[o,h]=t[i][s],[c,l]=t[i][r],[p,d]=(0,n.Gi)([o,h],[c,l]);e.geometry=new a.Z({x:p,y:d,spatialReference:this.view.spatialReference})}}_syncGeometryAfterHandleMove(t,e,i){const s=(0,r.Wg)(this.graphic.geometry).clone(),o="polyline"===s.type?s.paths:s.rings,{pathIndex:h,pointIndex:a}=t.attributes,{x:n,y:c}=t.geometry,l=o[h].length-1;if(o[h][a]=[n,c],"polygon"===s.type&&(0===a?o[h][l]=[n,c]:a===l&&(o[h][0]=[n,c])),this._isHandle(t)){const{relatedGraphicIndices:r}=t.attributes;for(const e of r){const i=this.handleGraphics[e],{pathIndex:s,pointIndex:r}=i.attributes;o[s][r]=[n,c],i.geometry=t.geometry}for(const r of this.selectedHandles)if(r!==t){const{pathIndex:t,pointIndex:h,relatedGraphicIndices:a}=r.attributes,n=(0,y.e7)(r.geometry,e,i,this.view),c=o[t].length-1;o[t][h]=[n.x,n.y],r.geometry=n,"polygon"===s.type&&(0===h?o[t][c]=[n.x,n.y]:h===c&&(o[t][0]=[n.x,n.y]));for(const t of a){const e=this.handleGraphics[t],{pathIndex:i,pointIndex:s}=e.attributes;o[i][s]=[n.x,n.y],e.geometry=n}}this._updateMidpointGraphicLocations(o)}this.graphic.geometry=s}_onGraphicPointerOverCallback(t){const e=t.graphic;this._isHandle(e)&&!this._isSelected(e)&&(e.symbol=this.symbols.vertices.hover),this._updateHoverCursor(e)}_onGraphicPointerOutCallback(t){const e=t.graphic;this._isHandle(e)&&!this._isSelected(e)&&(e.symbol=this.symbols.vertices.default),this.view.cursor="default"}_createHandleFromMidpoint(t){const{_graphicAttributes:e}=this,i=[],s=(0,r.Wg)(this.graphic.geometry).clone(),{pathIndex:o,pointIndexStart:h,pointIndexEnd:a}=t.attributes,{x:n,y:c}=t.geometry,l=0===a?h+1:a,p="polyline"===s.type?s.paths:s.rings;return p[o].splice(l,0,[n,c]),t.attributes={...e,pathIndex:o,pointIndex:l,relatedGraphicIndices:[]},i.push({coordinates:p[o][l],componentIndex:o,vertexIndex:l}),this.graphic.geometry=s,i}_removeHandles(t){const e=(0,r.Wg)(this.graphic.geometry).clone(),i="polygon"===e.type?e.rings:e.paths,s=[];t instanceof p.Z&&(t=[t]);for(const e of t){const{x:t,y:r}=e.geometry;for(let e=0;e<i.length;e++){const o=i[e];for(let h=0;h<o.length;h++){const[a,n]=o[h];t===a&&r===n&&(s.push({coordinates:i[e][h],componentIndex:e,vertexIndex:h}),i[e].splice(Number(h),1))}}}if("polygon"===e.type)for(const t of i){const[e,s]=t[0],[r,o]=t[t.length-1];(1===t.length||t.length<3&&e===r&&s===o)&&i.splice(i.indexOf(t),1),t.length>2&&(e!==r||s!==o)&&t.push(t[0])}else for(const t of i)1===t.length&&i.splice(i.indexOf(t),1);return this.graphic.geometry=e,s}_addToSelection(t){t instanceof p.Z&&(t=[t]);for(const e of t)e.symbol=this.symbols.vertices.selected;this._set("selectedHandles",this.selectedHandles.concat(t)),this._emitSelectEvent(t)}_removeFromSelection(t,e){const{vertices:i}=this.symbols,s=e?i.hover:i.default;t instanceof p.Z&&(t=[t]);for(const e of t)this.selectedHandles.splice(this.selectedHandles.indexOf(e),1),this._set("selectedHandles",this.selectedHandles),e.set("symbol",s);this._emitDeselectEvent(t)}_clearSelection(){if(this.selectedHandles.length){const t=this.selectedHandles;for(const t of this.selectedHandles)t.set("symbol",this.symbols.vertices.default);this._set("selectedHandles",[]),this._emitDeselectEvent(t)}}_keyDownHandler(t){O.removeVertex.includes(t.key)&&!t.repeat&&this.selectedHandles.length&&this._removeVertex(this.selectedHandles)}_removeVertex(t){if("polygon"===this.graphic.geometry.type&&this.handleGraphics.length<4||this.handleGraphics.length<3)return;const e=this.graphic.clone();t instanceof p.Z&&(t=[t]);const i=this._removeHandles(t);this.refresh(),this._emitVertexRemoveEvent(t,e,i)}_isHandle(t){return this.handleGraphics.includes(t)}_isSelected(t){return this._isHandle(t)&&this.selectedHandles.includes(t)}_isMidpoint(t){return this.midpointGraphics.includes(t)}_updateHoverCursor(t){this.view.cursor=this._isMidpoint(t)?"copy":"move"}_emitMoveStartEvent(t,e){const i=new x(this.graphic,t,e);this.emit("move-start",i),this.callbacks.onMoveStart&&this.callbacks.onMoveStart(i)}_emitMoveEvent(t,e){const i=new w(this.graphic,t,e);this.emit("move",i),this.callbacks.onMove&&this.callbacks.onMove(i)}_emitMoveStopEvent(){const t=new C(this.graphic,this._totalDx,this._totalDy);this.emit("move-stop",t),this.callbacks.onMoveStop&&this.callbacks.onMoveStop(t)}_emitReshapeStartEvent(t){const e=new b(this.graphic,t,this.selectedHandles);this.emit("reshape-start",e),this.callbacks.onReshapeStart&&this.callbacks.onReshapeStart(e)}_emitReshapeEvent(t){const e=new f(this.graphic,t,this.selectedHandles);this.emit("reshape",e),this.callbacks.onReshape&&this.callbacks.onReshape(e)}_emitReshapeStopEvent(t){const e=new G(this.graphic,t,this.selectedHandles);this.emit("reshape-stop",e),this.callbacks.onReshapeStop&&this.callbacks.onReshapeStop(e)}_emitSelectEvent(t){const e=new S(t);this.emit("select",e),this.callbacks.onVertexSelect&&this.callbacks.onVertexSelect(e)}_emitDeselectEvent(t){const e=new k(t);this.emit("deselect",e),this.callbacks.onVertexDeselect&&this.callbacks.onVertexDeselect(e)}_emitVertexAddEvent(t,e,i){const s=new M(t,this.graphic,e,i);this.emit("vertex-add",s),this.callbacks.onVertexAdd&&this.callbacks.onVertexAdd(s)}_emitVertexRemoveEvent(t,e,i){const s=new H(t,this.graphic,e,i);this.emit("vertex-remove",s),this.callbacks.onVertexRemove&&this.callbacks.onVertexRemove(s)}};(0,s._)([(0,o.Cb)()],I.prototype,"callbacks",void 0),(0,s._)([(0,o.Cb)()],I.prototype,"enableMidpoints",void 0),(0,s._)([(0,o.Cb)()],I.prototype,"graphic",void 0),(0,s._)([(0,o.Cb)({readOnly:!0})],I.prototype,"handleGraphics",void 0),(0,s._)([(0,o.Cb)()],I.prototype,"layer",void 0),(0,s._)([(0,o.Cb)({readOnly:!0})],I.prototype,"midpointGraphics",void 0),(0,s._)([(0,o.Cb)()],I.prototype,"midpointSymbol",void 0),(0,s._)([(0,o.Cb)({readOnly:!0})],I.prototype,"selectedHandles",void 0),(0,s._)([(0,o.Cb)({dependsOn:["view.ready","graphic","layer"],readOnly:!0})],I.prototype,"state",null),(0,s._)([(0,o.Cb)({value:D})],I.prototype,"symbols",null),(0,s._)([(0,o.Cb)({readOnly:!0})],I.prototype,"type",void 0),(0,s._)([(0,o.Cb)()],I.prototype,"view",void 0),I=(0,s._)([(0,h.j)("esri.views.draw.support.Reshape")],I);const P=I},44883:(t,e,i)=>{"use strict";i.d(e,{X:()=>p});var s=i(78745);const r={main:new s.Z([255,127,0]),selected:new s.Z([255,255,255]),outline:new s.Z([0,0,0,.5]),selectedOutline:new s.Z([255,255,255]),hoverOutline:new s.Z([255,255,255]),secondary:new s.Z([255,255,255]),secondaryOutline:new s.Z([100,100,100]),transparent:new s.Z([0,0,0,0])};function o(t,e){if(e)for(const i in e)t[i]=e[i]}class h{constructor(t){this.size=8,this.hoverSize=10,this.color=r.main,this.hoverColor=r.main,this.outlineColor=r.outline,this.hoverOutlineColor=r.hoverOutline,o(this,t)}}class a{constructor(t){this.color=r.secondary,this.hoverColor=r.main,o(this,t)}}class n{constructor(t){this.color=r.transparent,this.hoverColor=r.transparent,this.outlineColor=r.main,this.hoverOutlineColor=r.main,this.stagedColor=r.transparent,this.stagedOutlineColor=r.secondary,o(this,t)}}class c{constructor(t){this.vertex=new h,this.midpoint=new h({color:r.secondary,outlineColor:r.secondaryOutline,size:6}),this.selected=new h({color:r.selected,hoverColor:r.selected,hoverOutlineColor:r.hoverOutline}),o(this,t)}}class l{constructor(t){this.center=new h({color:r.secondaryOutline}),this.fill=new n,this.line=new a,this.vertex=new h({color:r.selected,outlineColor:r.main,hoverColor:r.selected,hoverOutlineColor:r.secondaryOutline}),o(this,t)}}const p=new class{constructor(t){this.reshapeGraphics=new c,this.transformGraphics=new l,o(this,t)}}},65865:(t,e,i)=>{"use strict";i.d(e,{L:()=>f});var s=i(56140),r=(i(95830),i(59472)),o=i(36544),h=(i(68055),i(79881)),a=i(87566),n=(i(10923),i(57002),i(86035),i(82677)),c=i(35470),l=i(96071),p=i(77625),d=i(17387),v=i(17333),u=i(79710),y=i(5684),_=i(14286),g=i(46970),m=i(37694);const b=o.Z.getLogger("esri.views.interactive.GraphicManipulator");let f=class extends n.default{constructor(t){super(t),this.layer=null,this.interactive=!0,this.selectable=!1,this.grabbable=!0,this.dragging=!1,this.cursor=null,this.events=new c.Z.EventEmitter,this._circleCollisionCache=null,this._graphicSymbolChangedHandle=null,this._originalSymbol=null}set graphic(t){"mesh"!==(0,r.U2)(t.geometry,"type")?(this._circleCollisionCache=null,this._originalSymbol=t.symbol,this._set("graphic",t),this.attachSymbolChanged()):b.error("Mesh geometries are not supported")}get elevationInfo(){const t="elevationInfo"in this.graphic.layer&&this.graphic.layer.elevationInfo,e=(0,g.vu)(this.graphic),i=t?t.offset:0;return new u.Z({mode:e,offset:i})}set focusedSymbol(t){t!==this._get("focusedSymbol")&&(this._set("focusedSymbol",t),this._updateGraphicSymbol(),this._circleCollisionCache=null)}grabbableForEvent(){return!0}set grabbing(t){t!==this._get("grabbing")&&(this._set("grabbing",t),this._updateGraphicSymbol())}set hovering(t){t!==this._get("hovering")&&(this._set("hovering",t),this._updateGraphicSymbol())}set selected(t){t!==this._get("selected")&&(this._set("selected",t),this._updateGraphicSymbol(),this.events.emit("select-changed",{action:t?"select":"deselect"}))}get _focused(){return this._get("hovering")||this._get("grabbing")}destroy(){this.detachSymbolChanged(),this._resetGraphicSymbol(),this._set("view",null)}intersectionDistance(t){const e=this._get("graphic");if(!1===e.visible)return null;const i=this._get("focusedSymbol"),s=(0,r.pC)(i)?i:e.symbol,o=e.geometry;return(0,r.Wi)(o)?null:"2d"===this.view.type?this._intersectDistance2D(this.view,t,o,s):this._intersectDistance3D(this.view,t,e)}attach(){this.attachSymbolChanged(),(0,r.pC)(this.layer)&&this.layer.add(this.graphic)}detach(){this.detachSymbolChanged(),this._resetGraphicSymbol(),(0,r.pC)(this.layer)&&this.layer.remove(this.graphic)}attachSymbolChanged(){this.detachSymbolChanged(),this._graphicSymbolChangedHandle=this.graphic.watch("symbol",(t=>{(0,r.pC)(t)&&t!==this.focusedSymbol&&t!==this._originalSymbol&&(this._originalSymbol=t,this._focused&&(0,r.pC)(this.focusedSymbol)&&(this.graphic.symbol=this.focusedSymbol))}),!0)}detachSymbolChanged(){(0,r.pC)(this._graphicSymbolChangedHandle)&&(this._graphicSymbolChangedHandle.remove(),this._graphicSymbolChangedHandle=null)}_updateGraphicSymbol(){this.graphic.symbol=this._focused&&(0,r.pC)(this.focusedSymbol)?this.focusedSymbol:this._originalSymbol}_resetGraphicSymbol(){this.graphic.symbol=this._originalSymbol}_intersectDistance2D(t,e,i,s){if(s=s||(0,y.js)(i),(0,r.Wi)(s))return null;let o=this._circleCollisionCache;if("point"!==i.type||"simple-marker"!==s.type)return(0,m.D)(e,i,t)?1:null;if((0,r.Wi)(o)||!o.originalPoint.equals(i)){const e=i,r=t.spatialReference;if((0,v.Up)(e.spatialReference,r)){const t=(0,v.iV)(e,r);o={originalPoint:e.clone(),mapPoint:t,radiusPx:(0,l.F2)(s.size)},this._circleCollisionCache=o}}if((0,r.pC)(o)){const i=(0,l.md)(e,x),r=t.toScreen(o.mapPoint),h=o.radiusPx,a=r.x+(0,l.F2)(s.xoffset),n=r.y-(0,l.F2)(s.yoffset);return(0,_.j)(i,[a,n])<h*h?1:null}return null}_intersectDistance3D(t,e,i){const s=t.toMap(e,{include:[i]});return s&&(0,v.KC)(s,G,t.renderSpatialReference)?(0,d.k)(G,t.state.camera.eye):null}};(0,s._)([(0,h.Cb)({constructOnly:!0,nonNullable:!0})],f.prototype,"graphic",null),(0,s._)([(0,h.Cb)({readOnly:!0,dependsOn:["graphic"]})],f.prototype,"elevationInfo",null),(0,s._)([(0,h.Cb)({constructOnly:!0,nonNullable:!0})],f.prototype,"view",void 0),(0,s._)([(0,h.Cb)({value:null})],f.prototype,"focusedSymbol",null),(0,s._)([(0,h.Cb)({constructOnly:!0})],f.prototype,"layer",void 0),(0,s._)([(0,h.Cb)()],f.prototype,"interactive",void 0),(0,s._)([(0,h.Cb)()],f.prototype,"selectable",void 0),(0,s._)([(0,h.Cb)()],f.prototype,"grabbable",void 0),(0,s._)([(0,h.Cb)({value:!1})],f.prototype,"grabbing",null),(0,s._)([(0,h.Cb)()],f.prototype,"dragging",void 0),(0,s._)([(0,h.Cb)()],f.prototype,"hovering",null),(0,s._)([(0,h.Cb)({value:!1})],f.prototype,"selected",null),(0,s._)([(0,h.Cb)()],f.prototype,"cursor",void 0),f=(0,s._)([(0,a.j)("esri.views.interactive.GraphicManipulator")],f);const G=(0,p.c)(),x=(0,l.s1)()},37694:(t,e,i)=>{"use strict";i.d(e,{K:()=>a,D:()=>n});var s=i(59472),r=i(52937),o=(i(36348),i(93533)),h=i(83873);function a(t,e,i,h=new r.Z){let a;if("2d"===i.type)a=e*i.resolution;else if("3d"===i.type){const r=i.overlayPixelSizeInMapUnits(t),h=i.basemapSpatialReference;a=(0,s.pC)(h)&&!h.equals(i.spatialReference)?(0,o.c9)(h)/(0,o.c9)(i.spatialReference):e*r}const n=t.x-a,c=t.y-a,l=t.x+a,p=t.y+a,{spatialReference:d}=i;return h.xmin=Math.min(n,l),h.ymin=Math.min(c,p),h.xmax=Math.max(n,l),h.ymax=Math.max(c,p),h.spatialReference=d,h}function n(t,e,i){const r=i.toMap(t);return!(0,s.Wi)(r)&&a(r,(0,h.k)(),i,c).intersects(e)}const c=new r.Z}}]);
//# sourceMappingURL=5596.js.map