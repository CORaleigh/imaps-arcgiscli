(self.webpackChunkimaps=self.webpackChunkimaps||[]).push([[1512],{47977:(e,t,r)=>{"use strict";r.d(t,{E:()=>o});class s{constructor(e={}){this._options=e}toQueryParams(e){if(!e)return null;const t=e.toJSON(),r={};return Object.keys(t).forEach((e=>{const s=this._options[e];if(s){const o="boolean"!=typeof s&&s.name?s.name:e,i="boolean"!=typeof s&&s.getter?s.getter(t):t[e];null!=i&&(r[o]=(e=>{if(!Array.isArray(e))return!1;const[t]=e;return"number"==typeof t||"string"==typeof t})(i)?i.join(","):"object"==typeof i?JSON.stringify(i):i)}else r[e]=t[e]}),this),r}}function o(e){return new s(e)}},31512:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>N});var s=r(56140),o=(r(95830),r(36544),r(68055),r(79881)),i=r(87566),a=(r(10923),r(57002),r(86035),r(39105)),n=r(54721),l=r(91535),u=r(95986),p=r(47977),c=r(10532),d=r(59472),f=r(30590),y=r(58385),m=r(73032),h=r(61106),v=r(53817),g=r(93833),_=(r(36348),r(15988)),T=r(76194),b=r(69489),C=r(36405);function w(e){return T.default.fromJSON(e).features.map((e=>e.geometry))}let Z=class extends y.wq{constructor(e){super(e),this.directions=null,this.facilities=null,this.incidents=null,this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routes=null}readFacilities(e){return w(e)}readIncidents(e){return w(e)}readPointBarriers(e,t){return w(t.barriers)}readPolylineBarriers(e){return w(e)}readPolygonBarriers(e){return w(e)}readRoutes(e){return function(e){return e.features.map((t=>{const r=m.Z.fromJSON(e.spatialReference),s=_.Z.fromJSON(t);return(0,d.pC)(s.geometry)&&(s.geometry.spatialReference=r),s}))}(e)}};(0,s._)([(0,o.Cb)({type:[b.Z]})],Z.prototype,"directions",void 0),(0,s._)([(0,o.Cb)({type:[h.Z]})],Z.prototype,"facilities",void 0),(0,s._)([(0,f.r)("facilities")],Z.prototype,"readFacilities",null),(0,s._)([(0,o.Cb)({type:[h.Z]})],Z.prototype,"incidents",void 0),(0,s._)([(0,f.r)("incidents")],Z.prototype,"readIncidents",null),(0,s._)([(0,o.Cb)({type:[C.Z]})],Z.prototype,"messages",void 0),(0,s._)([(0,o.Cb)({type:[h.Z]})],Z.prototype,"pointBarriers",void 0),(0,s._)([(0,f.r)("pointBarriers",["barriers"])],Z.prototype,"readPointBarriers",null),(0,s._)([(0,o.Cb)({type:[g.Z]})],Z.prototype,"polylineBarriers",void 0),(0,s._)([(0,f.r)("polylineBarriers")],Z.prototype,"readPolylineBarriers",null),(0,s._)([(0,o.Cb)({type:[v.Z]})],Z.prototype,"polygonBarriers",void 0),(0,s._)([(0,f.r)("polygonBarriers")],Z.prototype,"readPolygonBarriers",null),(0,s._)([(0,o.Cb)({type:[_.Z]})],Z.prototype,"routes",void 0),(0,s._)([(0,f.r)("routes")],Z.prototype,"readRoutes",null),Z=(0,s._)([(0,i.j)("esri.tasks.support.ClosestFacilitySolveResult")],Z);const B=Z,M=(0,p.E)({accumulateAttributes:{name:"accumulateAttributeNames"},attributeParameterValues:!0,directionsTimeAttribute:{name:"directionsTimeAttributeName"},impedanceAttribute:{name:"impedanceAttributeName"},facilities:!0,incidents:!0,outSpatialReference:{name:"outSR",getter:e=>e.outSpatialReference.wkid},pointBarriers:{name:"barriers"},polylineBarriers:!0,polygonBarriers:!0,restrictionAttributes:{name:"restrictionAttributeNames"},returnPointBarriers:{name:"returnBarriers"},returnRoutes:{name:"returnCFRoutes"},travelMode:!0});let S=class extends((0,c.Y)(u.Z)){constructor(e){super(e),this.url=null}solve(e,t){const r=[],s=[],o={},i={};return e.incidents&&e.incidents.features&&this._collectGeometries(e.incidents.features,s,"incidents.features",o),e.facilities&&e.facilities.features&&this._collectGeometries(e.facilities.features,s,"facilities.features",o),e.pointBarriers&&e.pointBarriers.features&&this._collectGeometries(e.pointBarriers.features,s,"pointBarriers.features",o),e.polylineBarriers&&e.polylineBarriers.features&&this._collectGeometries(e.polylineBarriers.features,s,"polylineBarriers.features",o),e.polygonBarriers&&e.polygonBarriers.features&&this._collectGeometries(e.polygonBarriers.features,s,"polygonBarriers.features",o),(0,l.aX)(s).then((e=>{for(const t in o){const s=o[t];r.push(t),i[t]=e.slice(s[0],s[1])}return this._isInputGeometryZAware(i,r)?this.getServiceDescription():(0,a.resolve)({dontCheck:!0})})).then((s=>{("dontCheck"in s?s.dontCheck:s.hasZ)||this._dropZValuesOffInputGeometry(i,r);for(const t in i)i[t].forEach(((r,s)=>{e.get(t)[s].geometry=r}));let o={query:{...this.parsedUrl.query,f:"json",...M.toQueryParams(e)}};return(this.requestOptions||t)&&(o={...this.requestOptions,...t,...o}),(0,n.default)(`${this.parsedUrl.path}/solveClosestFacility`,o)})).then((e=>B.fromJSON(e.data)))}_collectGeometries(e,t,r,s){s[r]=[t.length,t.length+e.length],e.forEach((e=>{t.push(e.geometry)}))}};(0,s._)([(0,o.Cb)()],S.prototype,"url",void 0),S=(0,s._)([(0,i.j)("esri.tasks.ClosestFacilityTask")],S);const N=S},10532:(e,t,r)=>{"use strict";r.d(t,{Y:()=>c});var s=r(56140),o=(r(95830),r(10103)),i=r(59472),a=(r(36544),r(68055),r(79881),r(87566)),n=r(32656),l=r(10923),u=(r(57002),r(86035),r(54721)),p=r(95986);const c=e=>{let t=class extends e{async getServiceDescription(){return this._serviceDescriptionPromise||(this._serviceDescriptionPromise=this._fetchServiceDescription()),this._serviceDescriptionPromise}async _fetchServiceDescription(){if(!this.url||!this.parsedUrl)throw new n.Z("network-service:missing-url","Url to Network service is missing");const e=this.url,{data:t}=await(0,u.default)(e,{query:{f:"json"}});t.supportedTravelModes||(t.supportedTravelModes=[]);for(let e=0;e<t.supportedTravelModes.length;e++)t.supportedTravelModes[e].id||(t.supportedTravelModes[e].id=t.supportedTravelModes[e].itemId);const r=t.currentVersion>=10.4?async function(e){try{const{data:{supportedTravelModes:t,defaultTravelMode:r}}=await(0,u.default)(e+("/"===e[e.length-1]?"":"/")+"retrieveTravelModes",{query:{f:"json"}});return{supportedTravelModes:t,defaultTravelMode:r}}catch(e){throw new n.Z("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:e})}}(e):async function(e){const{data:t}=await(0,u.default)(e.substring(0,e.indexOf("/rest/")+6)+"info",{query:{f:"json"}});if(!t||!t.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};e=t.owningSystemUrl;const{data:r}=await(0,u.default)(e+("/"===e[e.length-1]?"":"/")+"sharing/rest/portals/self",{query:{f:"json"}}),s=(0,o.hS)("helperServices.routingUtilities.url",r);if(!s)return{supportedTravelModes:[],defaultTravelMode:null};const i=(0,l.mN)(e),a=/\/solveClosestFacility$/.test(i.path)?"Route":/\/solveClosestFacility$/.test(i.path)?"ClosestFacility":"ServiceAreas",n=await(0,u.default)(s+("/"===s[s.length-1]?"":"/")+"GetTravelModes/execute",{query:{f:"json",serviceName:a}}),p=[];let c=null;if(n&&n.data&&n.data.results&&n.data.results.length){const e=n.data.results;for(const t of e)if("supportedTravelModes"===t.paramName){if(t.value&&t.value.features)for(const{attributes:e}of t.value.features)if(e){const t=JSON.parse(e.TravelMode);p.push(t)}}else"defaultTravelMode"===t.paramName&&(c=t.value)}return{supportedTravelModes:p,defaultTravelMode:c}}(e),{defaultTravelMode:s,supportedTravelModes:i}=await r;return t.defaultTravelMode=s,t.supportedTravelModes=i,t}_isInputGeometryZAware(e,t){for(let r=0;r<t.length;r++){const s=e[t[r]];if(s&&s.length)for(const e of s)if((0,i.pC)(e)&&e.hasZ)return!0}return!1}_dropZValuesOffInputGeometry(e,t){for(let r=0;r<t.length;r++){const s=e[t[r]];if(s&&s.length)for(const e of s)e.z=void 0}console.log("The remote Network Analysis service is powered by a network dataset which is not Z-aware.\nZ-coordinates of the input geometry are ignored.")}};return t=(0,s._)([(0,a.j)("esri.tasks.mixins.NAServiceDescription")],t),t};let d=class extends(c(p.Z)){};d=(0,s._)([(0,a.j)("esri.tasks.mixins.NAServiceDescription")],d)},69489:(e,t,r)=>{"use strict";r.d(t,{Z:()=>m});var s=r(56140),o=(r(95830),r(59472)),i=(r(36544),r(68055),r(79881)),a=r(30590),n=r(87566),l=(r(10923),r(57002),r(86035),r(73032)),u=r(61106),p=r(52937),c=r(93833),d=(r(36348),r(15988)),f=r(76194);let y=class extends f.default{constructor(e){super(e),this.extent=null,this.features=null,this.geometryType="polyline",this.routeId=null,this.routeName=null,this.totalDriveTime=null,this.totalLength=null,this.totalTime=null}readFeatures(e,t){(e||[]).forEach((e=>{this._decompressFeatureGeometry(e,t.summary.envelope.spatialReference)}));const r=l.Z.fromJSON(t.spatialReference);return e.map((e=>{const t=d.Z.fromJSON(e),s=e.geometry&&e.geometry.spatialReference;return t.geometry&&!s&&((0,o.Wg)(t.geometry).spatialReference=r),t.strings=e.strings,t.events=(e.events||[]).map((t=>{const r=new d.Z({geometry:new u.Z({x:t.point.x,y:t.point.y,z:t.point.z,hasZ:void 0!==t.point.z,spatialReference:e.geometry&&e.geometry.spatialReference}),attributes:{ETA:t.ETA,arriveTimeUTC:t.arriveTimeUTC}});return r.strings=t.strings,r})),t}))}get mergedGeometry(){if(!this.features)return null;const e=this.features.map((({geometry:e})=>(0,o.Wg)(e))),t=this.get("extent.spatialReference");return this._mergePolylinesToSinglePath(e,t)}get strings(){return this.features.map((({strings:e})=>e))}_decompressFeatureGeometry(e,t){e.geometry=this._decompressGeometry(e.compressedGeometry,t)}_decompressGeometry(e,t){let r=0,s=0,o=0,i=0;const a=[];let n,l,u,p,c,d,f,y,m=0,h=0,v=0;if(c=e.match(/((\+|\-)[^\+\-\|]+|\|)/g),c||(c=[]),0===parseInt(c[m],32)){m=2;const e=parseInt(c[m],32);m++,d=parseInt(c[m],32),m++,1&e&&(h=c.indexOf("|")+1,f=parseInt(c[h],32),h++),2&e&&(v=c.indexOf("|",h)+1,y=parseInt(c[v],32),v++)}else d=parseInt(c[m],32),m++;for(;m<c.length&&"|"!==c[m];){n=parseInt(c[m],32)+r,m++,r=n,l=parseInt(c[m],32)+s,m++,s=l;const e=[n/d,l/d];h&&(p=parseInt(c[h],32)+o,h++,o=p,e.push(p/f)),v&&(u=parseInt(c[v],32)+i,v++,i=u,e.push(u/y)),a.push(e)}return{paths:[a],hasZ:h>0,hasM:v>0,spatialReference:t}}_mergePolylinesToSinglePath(e,t){let r=[];(e||[]).forEach((e=>{e.paths.forEach((e=>{r=r.concat(e)}))}));const s=[];let o=[0,0];return r.forEach((e=>{e[0]===o[0]&&e[1]===o[1]||(s.push(e),o=e)})),new c.Z({paths:[s]},t)}};(0,s._)([(0,i.Cb)({type:p.Z,json:{read:{source:"summary.envelope"}}})],y.prototype,"extent",void 0),(0,s._)([(0,i.Cb)()],y.prototype,"features",void 0),(0,s._)([(0,a.r)("features")],y.prototype,"readFeatures",null),(0,s._)([(0,i.Cb)()],y.prototype,"geometryType",void 0),(0,s._)([(0,i.Cb)({readOnly:!0,dependsOn:["features","extent.spatialReference"]})],y.prototype,"mergedGeometry",null),(0,s._)([(0,i.Cb)()],y.prototype,"routeId",void 0),(0,s._)([(0,i.Cb)()],y.prototype,"routeName",void 0),(0,s._)([(0,i.Cb)({value:null,readOnly:!0,dependsOn:["features"]})],y.prototype,"strings",null),(0,s._)([(0,i.Cb)({json:{read:{source:"summary.totalDriveTime"}}})],y.prototype,"totalDriveTime",void 0),(0,s._)([(0,i.Cb)({json:{read:{source:"summary.totalLength"}}})],y.prototype,"totalLength",void 0),(0,s._)([(0,i.Cb)({json:{read:{source:"summary.totalTime"}}})],y.prototype,"totalTime",void 0),y=(0,s._)([(0,n.j)("esri.tasks.support.DirectionsFeatureSet")],y);const m=y},36405:(e,t,r)=>{"use strict";r.d(t,{Z:()=>p});var s=r(56140),o=(r(95830),r(36544),r(68055),r(79881)),i=r(56274),a=r(87566),n=(r(10923),r(57002),r(86035),r(21544));const l=new i.Xn({0:"informative",1:"process-definition",2:"process-start",3:"process-stop",50:"warning",100:"error",101:"empty",200:"abort"});let u=class extends n.Z{constructor(e){super(e),this.type=null}};(0,s._)([(0,o.Cb)({type:String,json:{read:l.read,write:l.write}})],u.prototype,"type",void 0),u=(0,s._)([(0,a.j)("esri.tasks.support.NAMessage")],u);const p=u}}]);
//# sourceMappingURL=1512.js.map