(self.webpackChunkimaps=self.webpackChunkimaps||[]).push([[3972],{93972:(e,r,t)=>{"use strict";t.r(r),t.d(r,{default:()=>N});var s=t(56140),o=(t(95830),t(36544),t(68055),t(79881)),i=t(87566),a=(t(10923),t(57002),t(86035),t(39105)),n=t(54721),l=t(91535),p=t(95986),u=t(47977),c=t(10532),y=t(30590),h=t(58385),d=t(15988),m=t(76194),f=t(36405),B=t(69489);let g=class extends h.wq{constructor(e){super(e),this.directions=null,this.route=null,this.routeName=null,this.stops=null}};(0,s._)([(0,o.Cb)({type:B.Z,json:{write:!0}})],g.prototype,"directions",void 0),(0,s._)([(0,o.Cb)({type:d.Z,json:{write:!0}})],g.prototype,"route",void 0),(0,s._)([(0,o.Cb)({type:String,json:{write:!0}})],g.prototype,"routeName",void 0),(0,s._)([(0,o.Cb)({type:[d.Z],json:{write:!0}})],g.prototype,"stops",void 0),g=(0,s._)([(0,i.j)("esri.tasks.support.RouteResult")],g);const b=g;function _(e){return e&&m.default.fromJSON(e).features.map((e=>e))}let R=class extends h.wq{constructor(e){super(e),this.barriers=null,this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routeResults=null}readPointBarriers(e,r){return _(r.barriers||r.pointBarriers)}readPolylineBarriers(e){return _(e)}readPolygonBarriers(e){return _(e)}};(0,s._)([(0,o.Cb)({aliasOf:"pointBarriers"})],R.prototype,"barriers",void 0),(0,s._)([(0,o.Cb)({type:[f.Z]})],R.prototype,"messages",void 0),(0,s._)([(0,o.Cb)({type:[d.Z]})],R.prototype,"pointBarriers",void 0),(0,s._)([(0,y.r)("pointBarriers",["barriers","pointBarriers"])],R.prototype,"readPointBarriers",null),(0,s._)([(0,o.Cb)({type:[d.Z]})],R.prototype,"polylineBarriers",void 0),(0,s._)([(0,y.r)("polylineBarriers")],R.prototype,"readPolylineBarriers",null),(0,s._)([(0,o.Cb)({type:[d.Z]})],R.prototype,"polygonBarriers",void 0),(0,s._)([(0,y.r)("polygonBarriers")],R.prototype,"readPolygonBarriers",null),(0,s._)([(0,o.Cb)({type:[b]})],R.prototype,"routeResults",void 0),R=(0,s._)([(0,i.j)("esri.tasks.support.RouteResultsContainer")],R);const v=R,C=(0,u.E)({accumulateAttributes:{name:"accumulateAttributeNames"},attributeParameterValues:!0,directionsTimeAttribute:{name:"directionsTimeAttributeName"},impedanceAttribute:{name:"impedanceAttributeName"},outSpatialReference:{name:"outSR",getter:e=>e.outSpatialReference.wkid},pointBarriers:{name:"barriers"},polylineBarriers:!0,polygonBarriers:!0,restrictionAttributes:{name:"restrictionAttributeNames"},stops:!0,travelMode:!0});let k=class extends((0,c.Y)(p.Z)){constructor(e){super(e)}solve(e,r){const t=[],s=[],o={},i={};return e.stops&&e.stops.features&&this._collectGeometries(e.stops.features,s,"stops.features",o),e.pointBarriers&&e.pointBarriers.features&&this._collectGeometries(e.pointBarriers.features,s,"pointBarriers.features",o),e.polylineBarriers&&e.polylineBarriers.features&&this._collectGeometries(e.polylineBarriers.features,s,"polylineBarriers.features",o),e.polygonBarriers&&e.polygonBarriers.features&&this._collectGeometries(e.polygonBarriers.features,s,"polygonBarriers.features",o),(0,l.aX)(s).then((e=>{for(const r in o){const s=o[r];t.push(r),i[r]=e.slice(s[0],s[1])}return this._isInputGeometryZAware(i,t)?this.getServiceDescription():(0,a.resolve)({dontCheck:!0})})).then((s=>{("dontCheck"in s?s.dontCheck:s.hasZ)||this._dropZValuesOffInputGeometry(i,t);for(const r in i)i[r].forEach(((t,s)=>{e.get(r)[s].geometry=t}));let o={query:{...this.parsedUrl.query,f:"json",...C.toQueryParams(e)}};(this.requestOptions||r)&&(o={...this.requestOptions,...r,...o});const{path:a}=this.parsedUrl,l="/solve",p=a.endsWith(l)?a:a+l;return(0,n.default)(p,o)})).then((e=>this._handleSolveResponse(e)))}_collectGeometries(e,r,t,s){s[t]=[r.length,r.length+e.length],e.forEach((e=>{r.push(e.geometry)}))}_handleSolveResponse(e){const r=[],t=[],{directions:s=[],routes:{features:o=[],spatialReference:i=null}={},stops:{features:a=[],spatialReference:n=null}={},barriers:l,polygonBarriers:p,polylineBarriers:u,messages:c}=e.data,y="esri.tasks.RouteTask.NULL_ROUTE_NAME";let h,d,m=!0;const f=o&&i||a&&n||l&&l.spatialReference||p&&p.spatialReference||u&&u.spatialReference;s.forEach((e=>{r.push(h=e.routeName),t[h]={directions:e}})),o.forEach((e=>{-1===r.indexOf(h=e.attributes.Name)&&(r.push(h),t[h]={}),e.geometry&&(e.geometry.spatialReference=f),t[h].route=e})),a.forEach((e=>{d=e.attributes,-1===r.indexOf(h=d.RouteName||y)&&(r.push(h),t[h]={}),h!==y&&(m=!1),e.geometry&&(e.geometry.spatialReference=f),null==t[h].stops&&(t[h].stops=[]),t[h].stops.push(e)})),a.length>0&&!0===m&&(t[r[0]].stops=t[y].stops,delete t[y],r.splice(r.indexOf(y),1));const B=r.map((e=>(t[e].routeName=e===y?null:e,t[e])));return v.fromJSON({routeResults:B,pointBarriers:l,polygonBarriers:p,polylineBarriers:u,messages:c})}};k=(0,s._)([(0,i.j)("esri.tasks.RouteTask")],k);const N=k}}]);
//# sourceMappingURL=3972.js.map